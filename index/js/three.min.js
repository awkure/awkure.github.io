function getHttpRequest(e,t,a){var r={load:function(e){t(i,e)},progress:function(e){a(i,e)}},i=new XMLHttpRequest;addListeners(i,r),i.open("GET",e,!0),i.send(null)}function getJsonRequest(e,t){getHttpRequest(e,function(e){t(JSON.parse(e.responseText))},function(){})}function addListeners(e,t){for(var a in t)e.addEventListener(a,t[a])}var THREE=THREE||{VERSION:"0"};THREE.elementIndexUintAvailable=!1,THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFSoftShadowMap=1,THREE.PCFSoftHQShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.LegacyNormalBlending=6,THREE.AddEquation=32774,THREE.SubtractEquation=32778,THREE.ReverseSubtractEquation=32779,THREE.ZeroFactor=0,THREE.OneFactor=1,THREE.SrcColorFactor=768,THREE.OneMinusSrcColorFactor=769,THREE.SrcAlphaFactor=770,THREE.OneMinusSrcAlphaFactor=771,THREE.DstAlphaFactor=772,THREE.OneMinusDstAlphaFactor=773,THREE.DstColorFactor=774,THREE.OneMinusDstColorFactor=775,THREE.SrcAlphaSaturateFactor=776,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.RepeatWrapping=10497,THREE.ClampToEdgeWrapping=33071,THREE.MirroredRepeatWrapping=33648,THREE.NearestFilter=9728,THREE.LinearFilter=9729,THREE.NearestMipMapNearestFilter=9984,THREE.LinearMipMapNearestFilter=9985,THREE.NearestMipMapLinearFilter=9986,THREE.LinearMipMapLinearFilter=9987,THREE.ByteType=5120,THREE.UnsignedByteType=5121,THREE.ShortType=5122,THREE.UnsignedShortType=5123,THREE.IntType=5124,THREE.UnsignedIntType=5125,THREE.FloatType=5126,THREE.HalfFloatType2=5131,THREE.HalfFloatType1=36193,THREE.UnsignedShort4444Type=32819,THREE.UnsignedShort5551Type=32820,THREE.UnsignedShort565Type=33635,THREE.DepthComponentFormat=6402,THREE.AlphaFormat=6406,THREE.RGBFormat=6407,THREE.RGBAFormat=6408,THREE.LuminanceFormat=6409,THREE.LuminanceAlphaFormat=6410,THREE.RED=6403,THREE.RGB8=32849,THREE.RGBA8=32856,THREE.RGB10_A2=32857,THREE.UNSIGNED_INT_2_10_10_10_REV=33640,THREE.DEPTH_COMPONENT24=33190,THREE.SRGB=35904,THREE.SRGB8=35905,THREE.SRGB8_ALPHA8=35907,THREE.RGBA32F=34836,THREE.RGB32F=34837,THREE.RGBA16F=34842,THREE.RGB16F=34843,THREE.R11F_G11F_B10F=35898,THREE.UNSIGNED_INT_10F_11F_11F_REV=35899,THREE.RGB9_E5=35901,THREE.UNSIGNED_INT_5_9_9_9_REV=35902,THREE.RGBA32UI=36208,THREE.RGB32UI=36209,THREE.RGBA16UI=36214,THREE.RGB16UI=36215,THREE.RGBA8UI=36220,THREE.RGB8UI=36221,THREE.RGBA32I=36226,THREE.RGB32I=36227,THREE.RGBA16I=36232,THREE.RGB16I=36233,THREE.RGBA8I=36238,THREE.RGB8I=36239,THREE.RED_INTEGER=36244,THREE.RGB_INTEGER=36248,THREE.RGBA_INTEGER=36249,THREE.DEPTH_COMPONENT32F=36012,THREE.DEPTH32F_STENCIL8=36013,THREE.FLOAT_32_UNSIGNED_INT_24_8_REV=36269,THREE.UNSIGNED_INT_24_8=34042,THREE.DEPTH24_STENCIL8=35056,THREE.RG=33319,THREE.RG_INTEGER=33320,THREE.R8=33321,THREE.RG8=33323,THREE.R16F=33325,THREE.R32F=33326,THREE.RG16F=33327,THREE.RG32F=33328,THREE.R8I=33329,THREE.R8UI=33330,THREE.R16I=33331,THREE.R16UI=33332,THREE.R32I=33333,THREE.R32UI=33334,THREE.RG8I=33335,THREE.RG8UI=33336,THREE.RG16I=33337,THREE.RG16UI=33338,THREE.RG32I=33339,THREE.RG32UI=33340,THREE.RGB_S3TC_DXT1_Format=33776,THREE.RGBA_S3TC_DXT1_Format=33777,THREE.RGBA_S3TC_DXT3_Format=33778,THREE.RGBA_S3TC_DXT5_Format=33779,THREE.RGB_PVRTC_4BPPV1_Format=35840,THREE.RGB_PVRTC_2BPPV1_Format=35841,THREE.RGBA_PVRTC_4BPPV1_Format=35842,THREE.RGBA_PVRTC_2BPPV1_Format=35843,THREE.RGB_ETC1_Format=36196,THREE.RGB_ATC_Format=35986,THREE.RGBA_ATC_EXPLICIT_ALPHA_Format=35987,THREE.RGBA_ATC_INTERPOLATED_ALPHA_Format=34798,THREE.NoOperator=0,THREE.SimpleOperator=1,THREE.LinearOperator=2,THREE.ReinhardOperator=3,THREE.FilmicOperator=4,THREE.Filmic2015Operator=5,THREE.UnchartedOperator=6,THREE.LumaReinhardOperator=7,THREE.WhitePreservingReinhardOperator=8,THREE.PhotographicOperator=9,THREE.SimpleBRDF=0,THREE.BlinnPhongBRDF=1,THREE.GGXBRDF=2,THREE.xyzOrder=0,THREE.yxzOrder=1,THREE.zxyOrder=2,THREE.zyxOrder=3,THREE.yzxOrder=4,THREE.xzyOrder=5,THREE.DisplaceByNormal=0,THREE.DisplaceByPosition=1,THREE.rgba8Encoding=0,THREE.rgbm8Encoding=1,THREE.rgba16fEncoding=2,THREE.rgba32fEncoding=3,THREE.paramTypedArrayToTHREE=function(e){var t;return e instanceof Float32Array?t=THREE.FloatType:e instanceof Uint32Array?t=THREE.UnsignedIntType:e instanceof Uint16Array?t=THREE.UnsignedShortType:e instanceof Uint8Array?t=THREE.UnsignedByteType:e instanceof Int32Array?t=THREE.IntType:e instanceof Int16Array?t=THREE.ShortType:e instanceof Int8Array&&(t=THREE.ByteType),t},THREE.paramTHREEToTypedArray=function(e){var t;return e===THREE.FloatType?t=Float32Array:e===THREE.UnsignedIntType?t=Uint32Array:e===THREE.UnsignedShortType?t=Uint16Array:e===THREE.UnsignedByteType?t=Uint8Array:e===THREE.IntType?t=Int32Array:e===THREE.ShortType?t=Int16Array:e===THREE.ByteType&&(t=Int8Array),t},THREE.Projector=function(){var e=new THREE.Matrix4;this.projectVector=function(t,a){return a.matrixWorldInverse.getInverse(a.matrixWorld),e.multiply(a.projectionMatrix,a.matrixWorldInverse),e.multiplyVector3(t),t},this.unprojectVector=function(t,a){return a.projectionMatrixInverse.getInverse(a.projectionMatrix),e.multiply(a.matrixWorld,a.projectionMatrixInverse),e.multiplyVector3(t),t}},THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},copyTonemapped:function(e,t,a,r){function i(e){return(e*(o*e+s*n)+l*d)/(e*(o*e+n)+l*h)-d/h}var o=.15,n=.5,s=.1,l=.2,d=.02,h=.3,c=11.2,u=1/2.2;switch(this.r=e.r*a,this.g=e.g*a,this.b=e.b*a,t){case THREE.SimpleOperator:this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b);break;case THREE.LinearOperator:this.r=Math.pow(this.r,u),this.g=Math.pow(this.g,u),this.b=Math.pow(this.b,u);break;case THREE.ReinhardOperator:this.r=this.r/(1+this.r),this.g=this.g/(1+this.g),this.b=this.b/(1+this.b),this.r=Math.pow(this.r,u),this.g=Math.pow(this.g,u),this.b=Math.pow(this.b,u);break;case THREE.FilmicOperator:var f=Math.max(0,this.r-.004),p=Math.max(0,this.g-.004),m=Math.max(0,this.b-.004);this.r=f*(6.2*f+.5)/(f*(6.2*f+1.7)+.06),this.g=p*(6.2*p+.5)/(p*(6.2*p+1.7)+.06),this.b=m*(6.2*m+.5)/(m*(6.2*m+1.7)+.06);break;case THREE.Filmic2015Operator:var v=this.r,g=this.g,S=this.b,x=r,G=1.425*v+.05,M=1.425*g+.05,y=1.425*S+.05,X=1.425*x+.05,_=(v*G+.004)/(v*(G+.55)+.0491)-.0821,w=(g*M+.004)/(g*(M+.55)+.0491)-.0821,D=(S*y+.004)/(S*(y+.55)+.0491)-.0821,C=(x*X+.004)/(x*(X+.55)+.0491)-.0821;this.r=_/C,this.g=w/C,this.b=D/C,this.r=Math.pow(this.r,u),this.g=Math.pow(this.g,u),this.b=Math.pow(this.b,u);break;case THREE.UnchartedOperator:var A=2,T=i(A*this.r),P=i(A*this.g),L=i(A*this.b),b=1/i(c*r);this.r=T*b,this.g=P*b,this.b=L*b,this.r=Math.pow(this.r,u),this.g=Math.pow(this.g,u),this.b=Math.pow(this.b,u)}return this},convertGammaToLinear:function(){var e=this.r,t=this.g,a=this.b;return this.r=e*e,this.g=t*t,this.b=a*a,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setRGB:function(e,t,a){return this.r=e,this.g=t,this.b=a,this},setHSV:function(e,t,a){var r,i,o,n,s;return 0===a?this.r=this.g=this.b=0:(r=Math.floor(6*e),i=6*e-r,o=a*(1-t),n=a*(1-t*i),s=a*(1-t*(1-i)),0===r?(this.r=a,this.g=s,this.b=o):1===r?(this.r=n,this.g=a,this.b=o):2===r?(this.r=o,this.g=a,this.b=s):3===r?(this.r=o,this.g=n,this.b=a):4===r?(this.r=s,this.g=o,this.b=a):5===r&&(this.r=a,this.g=o,this.b=n)),this},adjustHSV:function(e,t,a){var r=THREE.__hsv;this.getHSV(r),r.h=THREE.Math.clamp(r.h+e,0,1),r.s=THREE.Math.clamp(r.s+t,0,1),r.v=THREE.Math.clamp(r.v+a,0,1),this.setHSV(r.h,r.s,r.v)},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){var t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},getHSV:function(e){var t,a,r=this.r,i=this.g,o=this.b,n=Math.max(Math.max(r,i),o),s=Math.min(Math.min(r,i),o),l=n;if(s===n)t=0,a=0;else{var d=n-s;a=d/n,t=r===n?(i-o)/d:i===n?2+(o-r)/d:4+(r-i)/d,t/=6,0>t&&(t+=1),t>1&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=a,e.v=l,e},copyIntoArray:function(e,t){void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b},lerpSelf:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.__hsv={h:0,s:0,v:0},THREE.Math={clamp:function(e,t,a){return t>e?t:e>a?a:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,a,r,i){return r+(e-t)*(i-r)/(a-t)},randomFloat16:function(){return(65280*Math.random()+255*Math.random())/65535},randomInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randomFloat:function(e,t){return e+Math.random()*(t-e)},randomFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(e){return e*THREE.Math.__d2r},radToDeg:function(e){return e*THREE.Math.__r2d},focalLengthToFov:function(e,t){return 2*Math.atan(.5*t/e)},fovToFocalLength:function(e,t){return.5*t/Math.tan(.5*e)},stopToFstop:function(e){return Math.pow(Math.SQRT2,e)},mapSquareToDisk:function(e,t,a,r,i){var o,n,s=THREE.Math.__pi4;e>-t?e>t?(o=e,n=s*(t/e)):(o=t,n=s*(2-e/t)):t>e?(o=-e,n=s*(4+t/e)):(o=-t,n=0!==t?s*(6-e/t):0),void 0!==i&&(o*=Math.cos(Math.PI/i)/Math.cos(n-2*Math.PI/i*Math.floor((i*n+Math.PI)/(2*Math.PI))));var l=o*Math.cos(n),d=o*Math.sin(n);return void 0===a&&(a=[]),void 0===r&&(r=0),a[r]=l,a[r+1]=d,a},generateConcentricCircleSamples:function(e,t){for(var a=new Array(e*e*2),r=.5*(e-1),i=0,o=-r;r>=o;o++)for(var n=-r;r>=n;n++){var s=o/r,l=n/r;THREE.Math.mapSquareToDisk(s,l,a,i,t),i+=2}return a},generatePoissonDiscSamples:function(e){for(var t=new Array(2*e),a=1/e,r=1-a/2,i=2.399963229728653,o=0,n=0,s=0;e>s;s++){var l=Math.sqrt(1-r),d=Math.cos(o)*l,h=Math.sin(o)*l;t[n]=d,t[n+1]=h,r-=a,o+=i,n+=2}return t},isPowerOfTwo:function(e){return 0!==e&&0===(e&e-1)},computeHaltonSeq:function(e,t){for(var a=0,r=1,i=t;i>0;)r/=e,a+=r*(i%e),i=Math.floor(i/e);return a},generateHalton_2_3:function(e){for(var t=[],a=0,r=e/2;a!=r;a++){var i=THREE.Math.computeHaltonSeq(2,a+1)-.5,o=THREE.Math.computeHaltonSeq(3,a+1)-.5;t[2*a]=i,t[2*a+1]=o}return t},convertHalfToFloat:function(e){var t=(32768&e)>>15,a=(31744&e)>>10,r=1023&e;return 0===a?(t?-1:1)*Math.pow(2,-14)*(r/Math.pow(2,10)):31==a?r?0/0:1/0*(t?-1:1):(t?-1:1)*Math.pow(2,a-15)*(1+r/Math.pow(2,10))}},THREE.Math.__d2r=Math.PI/180,THREE.Math.__r2d=180/Math.PI,THREE.Math.__pi4=.25*Math.PI,THREE.Quaternion=function(e,t,a,r){this.data=new Float32Array(4),this.data[0]=void 0!==e?e:0,this.data[1]=void 0!==t?t:0,this.data[2]=void 0!==a?a:0,this.data[3]=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,a,r){var i=this.data;return i[0]=e,i[1]=t,i[2]=a,i[3]=r,this},setX:function(e){return this.data[0]=e,this},setY:function(e){return this.data[1]=e,this},setZ:function(e){return this.data[2]=e,this},setW:function(e){return this.data[3]=e,this},set x(e){this.data[0]=e},set y(e){this.data[1]=e},set z(e){this.data[2]=e},set w(e){this.data[3]=e},get x(){return this.data[0]},get y(){return this.data[1]},get z(){return this.data[2]},get w(){return this.data[3]},copy:function(e){return this.data.set(e.data),this},copyIntoArray:function(e,t){void 0===t&&(t=0),e.set(this.data,t)},setFromEuler:function(e,t){var a=this.data,r=e.data,i=Math.cos(r[0]/2),o=Math.cos(r[1]/2),n=Math.cos(r[2]/2),s=Math.sin(r[0]/2),l=Math.sin(r[1]/2),d=Math.sin(r[2]/2);return 0===t||void 0===t?(a[0]=s*o*n+i*l*d,a[1]=i*l*n-s*o*d,a[2]=i*o*d+s*l*n,a[3]=i*o*n-s*l*d):1===t?(a[0]=s*o*n+i*l*d,a[1]=i*l*n-s*o*d,a[2]=i*o*d-s*l*n,a[3]=i*o*n+s*l*d):2===t?(a[0]=s*o*n-i*l*d,a[1]=i*l*n+s*o*d,a[2]=i*o*d+s*l*n,a[3]=i*o*n-s*l*d):3===t?(a[0]=s*o*n-i*l*d,a[1]=i*l*n+s*o*d,a[2]=i*o*d-s*l*n,a[3]=i*o*n+s*l*d):4===t?(a[0]=s*o*n+i*l*d,a[1]=i*l*n+s*o*d,a[2]=i*o*d-s*l*n,a[3]=i*o*n-s*l*d):5===t&&(a[0]=s*o*n-i*l*d,a[1]=i*l*n-s*o*d,a[2]=i*o*d+s*l*n,a[3]=i*o*n+s*l*d),this},setFromAxisAngle:function(e,t){var a=this.data,r=e.data,i=t/2,o=Math.sin(i);return a[0]=r[0]*o,a[1]=r[1]*o,a[2]=r[2]*o,a[3]=Math.cos(i),this},setFromRotationMatrix:function(e){var t,a=this.data,r=e.elements,i=r[0],o=r[4],n=r[8],s=r[1],l=r[5],d=r[9],h=r[2],c=r[6],u=r[10],f=i+l+u;return f>0?(t=.5/Math.sqrt(f+1),a[0]=(c-d)*t,a[1]=(n-h)*t,a[2]=(s-o)*t,a[3]=.25/t):i>l&&i>u?(t=2*Math.sqrt(1+i-l-u),a[0]=.25*t,a[1]=(o+s)/t,a[2]=(n+h)/t,a[3]=(c-d)/t):l>u?(t=2*Math.sqrt(1+l-i-u),a[0]=(o+s)/t,a[1]=.25*t,a[2]=(d+c)/t,a[3]=(n-h)/t):(t=2*Math.sqrt(1+u-i-l),a[0]=(n+h)/t,a[1]=(d+c)/t,a[2]=.25*t,a[3]=(s-o)/t),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){var e=this.data;return e[0]*=-1,e[1]*=-1,e[2]*=-1,this},lengthSq:function(){var e=this.data;return e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]},length:function(){var e=this.data;return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3])},normalize:function(){var e=this.data,t=this.length();return 0===t?(e[0]=0,e[1]=0,e[2]=0,e[3]=1):(t=1/t,e[0]=e[0]*t,e[1]=e[1]*t,e[2]=e[2]*t,e[3]=e[3]*t),this},multiply:function(e,t){return this.copy(e),this.multiplySelf(t)},multiplySelf:function(e){var t=this.data,a=e.data,r=t[0],i=t[1],o=t[2],n=t[3],s=a[0],l=a[1],d=a[2],h=a[3];return t[0]=r*h+n*s+i*d-o*l,t[1]=i*h+n*l+o*s-r*d,t[2]=o*h+n*d+r*l-i*s,t[3]=n*h-r*s-i*l-o*d,this},multiplyVector3:function(e,t){t||(t=e);var a=this.data,r=e.data,i=t.data,o=r[0],n=r[1],s=r[2],l=a[0],d=a[1],h=a[2],c=a[3],u=c*o+d*s-h*n,f=c*n+h*o-l*s,p=c*s+l*n-d*o,m=-l*o-d*n-h*s;return i[0]=u*c+m*-l+f*-h-p*-d,i[1]=f*c+m*-d+p*-l-u*-h,i[2]=p*c+m*-h+u*-d-f*-l,t},slerpSelf:function(e,t){var a=this.data,r=e.data,i=a[0],o=a[1],n=a[2],s=a[3],l=r[0],d=r[1],h=r[2],c=r[3],u=s*c+i*l+o*d+n*h;if(0>u?(a[0]=-l,a[1]=-d,a[2]=-h,a[3]=-c,u=-u):this.copy(e),u>=1)return a[0]=i,a[1]=o,a[2]=n,a[3]=s,this;var f=Math.sqrt(1-u*u);if(Math.abs(f)<.001)return a[0]=.5*(i+a[0]),a[1]=.5*(o+a[1]),a[2]=.5*(n+a[2]),a[3]=.5*(s+a[3]),this;var p=Math.atan2(f,u),m=Math.sin((1-t)*p)/f,v=Math.sin(t*p)/f;return a[0]=i*m+a[0]*v,a[1]=o*m+a[1]*v,a[2]=n*m+a[2]*v,a[3]=s*m+a[3]*v,this},equals:function(e){var t=this.data,a=e.data;return a[0]===t[0]&&a[1]===t[1]&&a[2]===t[2]&&a[3]===t[3]},clone:function(){return(new THREE.Quaternion).copy(this)}},THREE.Quaternion.slerp=function(e,t,a,r){return a.copy(e).slerpSelf(t,r)},THREE.Vector2=function(e,t){this.data=new Float32Array(2),this.data[0]=void 0!==e?e:0,this.data[1]=void 0!==t?t:0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){var a=this.data;return a[0]=e,a[1]=t,this},setX:function(e){return this.data[0]=e,this},setY:function(e){return this.data[1]=e,this},set x(e){this.data[0]=e},set y(e){this.data[1]=e},get x(){return this.data[0]},get y(){return this.data[1]},copy:function(e){return this.data.set(e.data),this},copyIntoArray:function(e,t){void 0===t&&(t=0),e.set(this.data,t)},addScalar:function(e){var t=this.data;return t[0]+=e,t[1]+=e,this},add:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]+i[0],a[1]=r[1]+i[1],this},addSelf:function(e){var t=this.data,a=e.data;return t[0]+=a[0],t[1]+=a[1],this},sub:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]-i[0],a[1]=r[1]-i[1],this},subSelf:function(e){var t=this.data,a=e.data;return t[0]-=a[0],t[1]-=a[1],this},multiplyScalar:function(e){var t=this.data;return t[0]*=e,t[1]*=e,this},divideScalar:function(e){var t=this.data;return 0!==e?(t[0]/=e,t[1]/=e):(t[0]=0,t[1]=0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){var t=this.data,a=e.data;return t[0]*a[0]+t[1]*a[1]},lengthSq:function(){var e=this.data;return e[0]*e[0]+e[1]*e[1]},length:function(){var e=this.data;return Math.sqrt(e[0]*e[0]+e[1]*e[1])},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.data,a=e.data,r=t[0]-a[0],i=t[1]-a[1];return r*r+i*i},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerpSelf:function(e,t){var a=this.data,r=e.data;return a[0]+=(r[0]-a[0])*t,a[1]+=(r[1]-a[1])*t,this},equals:function(e){var t=this.data,a=e.data;return a[0]===t[0]&&a[1]===t[1]},clone:function(){return(new THREE.Vector2).copy(this)}},THREE.Vector3=function(e,t,a){this.data=new Float32Array(3),this.data[0]=void 0!==e?e:0,this.data[1]=void 0!==t?t:0,this.data[2]=void 0!==a?a:0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,a){var r=this.data;return r[0]=e,r[1]=t,r[2]=a,this},setX:function(e){return this.data[0]=e,this},setY:function(e){return this.data[1]=e,this},setZ:function(e){return this.data[2]=e,this},set x(e){this.data[0]=e},set y(e){this.data[1]=e},set z(e){this.data[2]=e},get x(){return this.data[0]},get y(){return this.data[1]},get z(){return this.data[2]},copy:function(e){return this.data.set(e.data),this},copyIntoArray:function(e,t){void 0===t&&(t=0),e.set(this.data,t)},add:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]+i[0],a[1]=r[1]+i[1],a[2]=r[2]+i[2],this},addSelf:function(e){var t=this.data,a=e.data;return t[0]+=a[0],t[1]+=a[1],t[2]+=a[2],this},addScalar:function(e){var t=this.data;return t[0]+=e,t[1]+=e,t[2]+=e,this},sub:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]-i[0],a[1]=r[1]-i[1],a[2]=r[2]-i[2],this},subSelf:function(e){var t=this.data,a=e.data;return t[0]-=a[0],t[1]-=a[1],t[2]-=a[2],this},multiply:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]*i[0],a[1]=r[1]*i[1],a[2]=r[2]*i[2],this},multiplySelf:function(e){var t=this.data,a=e.data;return t[0]*=a[0],t[1]*=a[1],t[2]*=a[2],this},multiplyScalar:function(e){var t=this.data;return t[0]*=e,t[1]*=e,t[2]*=e,this},divideSelf:function(e){var t=this.data,a=e.data;return t[0]/=a[0],t[1]/=a[1],t[2]/=a[2],this},divideScalar:function(e){var t=this.data;return 0!==e?(t[0]/=e,t[1]/=e,t[2]/=e):(t[0]=0,t[1]=0,t[2]=0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){var t=this.data,a=e.data;return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]},lengthSq:function(){var e=this.data;return e[0]*e[0]+e[1]*e[1]+e[2]*e[2]},length:function(){var e=this.data;return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2])},lengthManhattan:function(){var e=this.data;return Math.abs(e[0])+Math.abs(e[1])+Math.abs(e[2])},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},cross:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[1]*i[2]-r[2]*i[1],a[1]=r[2]*i[0]-r[0]*i[2],a[2]=r[0]*i[1]-r[1]*i[0],this},crossSelf:function(e){var t=this.data,a=e.data,r=t[0],i=t[1],o=t[2];return t[0]=i*a[2]-o*a[1],t[1]=o*a[0]-r*a[2],t[2]=r*a[1]-i*a[0],this},minSelf:function(e){var t=this.data,a=e.data;return t[0]=Math.min(t[0],a[0]),t[1]=Math.min(t[1],a[1]),t[2]=Math.min(t[2],a[2]),this},maxSelf:function(e){var t=this.data,a=e.data;return t[0]=Math.max(t[0],a[0]),t[1]=Math.max(t[1],a[1]),t[2]=Math.max(t[2],a[2]),this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.data,a=e.data,r=t[0]-a[0],i=t[1]-a[1],o=t[2]-a[2];return r*r+i*i+o*o},getPositionFromMatrix:function(e){var t=this.data;return t[0]=e.elements[12],t[1]=e.elements[13],t[2]=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){var a=this.data,r=THREE.Math.clamp,i=e.elements,o=i[0],n=i[4],s=i[8],l=i[1],d=i[5],h=i[9],c=i[2],u=i[6],f=i[10];return 0===t||void 0===t?(a[1]=Math.asin(r(s,-1,1)),Math.abs(s)<.99999?(a[0]=Math.atan2(-h,f),a[2]=Math.atan2(-n,o)):(a[0]=Math.atan2(u,d),a[2]=0)):1===t?(a[0]=Math.asin(-r(h,-1,1)),Math.abs(h)<.99999?(a[1]=Math.atan2(s,f),a[2]=Math.atan2(l,d)):(a[1]=Math.atan2(-c,o),a[2]=0)):2===t?(a[0]=Math.asin(r(u,-1,1)),Math.abs(u)<.99999?(a[1]=Math.atan2(-c,f),a[2]=Math.atan2(-n,d)):(a[1]=0,a[2]=Math.atan2(l,o))):3===t?(a[1]=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(a[0]=Math.atan2(u,f),a[2]=Math.atan2(l,o)):(a[0]=0,a[2]=Math.atan2(-n,d))):4===t?(a[2]=Math.asin(r(l,-1,1)),Math.abs(l)<.99999?(a[0]=Math.atan2(-h,d),a[1]=Math.atan2(-c,o)):(a[0]=0,a[1]=Math.atan2(s,f))):5===t&&(a[2]=Math.asin(-r(n,-1,1)),Math.abs(n)<.99999?(a[0]=Math.atan2(u,d),a[1]=Math.atan2(s,o)):(a[0]=Math.atan2(-h,f),a[1]=0)),this},setEulerFromQuaternion:function(e,t){var a=THREE.Math.clamp,r=this.data,i=e.data[0],o=e.data[1],n=e.data[2],s=e.data[3],l=i*i,d=o*o,h=n*n,c=s*s;return 0===t||void 0===t?(r[0]=Math.atan2(2*(i*s-o*n),c-l-d+h),r[1]=Math.asin(a(2*(i*n+o*s),-1,1)),r[2]=Math.atan2(2*(n*s-i*o),c+l-d-h)):1===t?(r[0]=Math.asin(a(2*(i*s-o*n),-1,1)),r[1]=Math.atan2(2*(i*n+o*s),c-l-d+h),r[2]=Math.atan2(2*(i*o+n*s),c-l+d-h)):2===t?(r[0]=Math.asin(a(2*(i*s+o*n),-1,1)),r[1]=Math.atan2(2*(o*s-n*i),c-l-d+h),r[2]=Math.atan2(2*(n*s-i*o),c-l+d-h)):3===t?(r[0]=Math.atan2(2*(i*s+n*o),c-l-d+h),r[1]=Math.asin(a(2*(o*s-i*n),-1,1)),r[2]=Math.atan2(2*(i*o+n*s),c+l-d-h)):4===t?(r[0]=Math.atan2(2*(i*s-n*o),c-l+d-h),r[1]=Math.atan2(2*(o*s-i*n),c+l-d-h),r[2]=Math.asin(a(2*(i*o+n*s),-1,1))):5===t&&(r[0]=Math.atan2(2*(i*s+o*n),c-l+d-h),r[1]=Math.atan2(2*(i*n+o*s),c+l-d-h),r[2]=Math.asin(a(2*(n*s-i*o),-1,1))),this},getScaleFromMatrix:function(e){var t=this.data,a=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return t[0]=a,t[1]=r,t[2]=i,this},projectOnVector:function(e){var t=THREE.Vector3.__v1;t.copy(e),t.normalize();var a=this.dot(t);return this.copy(t),this.multiplyScalar(a),this},reflect:function(e){var t=THREE.Vector3.__v2;return t.copy(this),t.projectOnVector(e),t.multiplyScalar(2),this.sub(t,this),this},equals:function(e){var t=this.data,a=e.data;return a[0]===t[0]&&a[1]===t[1]&&a[2]===t[2]},clone:function(){return(new THREE.Vector3).copy(this)}},THREE.Vector3.xAxis=new THREE.Vector3(1,0,0),THREE.Vector3.yAxis=new THREE.Vector3(0,1,0),THREE.Vector3.zAxis=new THREE.Vector3(0,0,1),THREE.Vector3.__v1=new THREE.Vector3,THREE.Vector3.__v2=new THREE.Vector3,THREE.Vector4=function(e,t,a,r){this.data=new Float32Array(4),this.data[0]=void 0!==e?e:0,this.data[1]=void 0!==t?t:0,this.data[2]=void 0!==a?a:0,this.data[3]=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,a,r){var i=this.data;return i[0]=e,i[1]=t,i[2]=a,i[3]=r,this},setRGBA:function(e,t){var a=this.data;return a[0]=e.r,a[1]=e.g,a[2]=e.b,a[3]=t,this},setRGBAGamma:function(e,t){var a=this.data,r=e.r,i=e.g,o=e.b;return a[0]=r*r,a[1]=i*i,a[2]=o*o,a[3]=t,this},setX:function(e){return this.data[0]=e,this},setY:function(e){return this.data[1]=e,this},setZ:function(e){return this.data[2]=e,this},setW:function(e){return this.data[3]=e,this},set x(e){this.data[0]=e},set y(e){this.data[1]=e},set z(e){this.data[2]=e},set w(e){this.data[3]=e},get x(){return this.data[0]},get y(){return this.data[1]},get z(){return this.data[2]},get w(){return this.data[3]},copy:function(e){return this.data.set(e.data),this},copyIntoArray:function(e,t){void 0===t&&(t=0),e.set(this.data,t)},addScalar:function(e){var t=this.data;return t[0]+=e,t[1]+=e,t[2]+=e,t[3]+=e,this},add:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]+i[0],a[1]=r[1]+i[1],a[2]=r[2]+i[2],a[3]=r[3]+i[3],this},addSelf:function(e){var t=this.data,a=e.data;return t[0]+=a[0],t[1]+=a[1],t[2]+=a[2],t[3]+=a[3],this},sub:function(e,t){var a=this.data,r=e.data,i=t.data;return a[0]=r[0]-i[0],a[1]=r[1]-i[1],a[2]=r[2]-i[2],a[3]=r[3]-i[3],this},subSelf:function(e){var t=this.data,a=e.data;return t[0]-=a[0],t[1]-=a[1],t[2]-=a[2],t[3]-=a[3],this},multiplyScalar:function(e){var t=this.data;return t[0]*=e,t[1]*=e,t[2]*=e,t[3]*=e,this},divideScalar:function(e){var t=this.data;return 0!==e?(t[0]/=e,t[1]/=e,t[2]/=e,t[3]/=e):(t[0]=0,t[1]=0,t[2]=0,t[3]=0),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){var t=this.data,a=e.data;return t[0]*a[0]+t[1]*a[1]+t[2]*a[2]+t[3]*a[3]},lengthSq:function(){var e=this.data;return e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]},length:function(){var e=this.data;return Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3])},lengthManhattan:function(){var e=this.data;return Math.abs(e[0])+Math.abs(e[1])+Math.abs(e[2])+Math.abs(e[3])},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerpSelf:function(e,t){var a=this.data,r=e.data;return a[0]+=(r[0]-a[0])*t,a[1]+=(r[1]-a[1])*t,a[2]+=(r[2]-a[2])*t,a[3]+=(r[3]-a[3])*t,this},equals:function(e){var t=this.data,a=e.data;return a[0]===t[0]&&a[1]===t[1]&&a[2]===t[2]&&a[3]===t[3]},clone:function(){return(new THREE.Vector4).copy(this)},setAxisAngleFromQuaternion:function(e){var t=e.data[0],a=e.data[1],r=e.data[2],i=e.data[3];this.data[3]=2*Math.acos(i);var o=Math.sqrt(1-i*i);return 1e-4>o?(this.data[0]=1,this.data[1]=0,this.data[2]=0):(this.data[0]=t/o,this.data[1]=a/o,this.data[2]=r/o),this},setAxisAngleFromRotationMatrix:function(e){var t,a,r,i,o=.01,n=.1,s=e.elements,l=s[0],d=s[4],h=s[8],c=s[1],u=s[5],f=s[9],p=s[2],m=s[6],v=s[10];if(Math.abs(d-c)<o&&Math.abs(h-p)<o&&Math.abs(f-m)<o){if(Math.abs(d+c)<n&&Math.abs(h+p)<n&&Math.abs(f+m)<n&&Math.abs(l+u+v-3)<n)return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,S=(u+1)/2,x=(v+1)/2,G=(d+c)/4,M=(h+p)/4,y=(f+m)/4;return g>S&&g>x?o>g?(a=0,r=.707106781,i=.707106781):(a=Math.sqrt(g),r=G/a,i=M/a):S>x?o>S?(a=.707106781,r=0,i=.707106781):(r=Math.sqrt(S),a=G/r,i=y/r):o>x?(a=.707106781,r=.707106781,i=0):(i=Math.sqrt(x),a=M/i,r=y/i),this.set(a,r,i,t),this}var X=Math.sqrt((m-f)*(m-f)+(h-p)*(h-p)+(c-d)*(c-d));return Math.abs(X)<.001&&(X=1),this.data[0]=(m-f)/X,this.data[1]=(h-p)/X,this.data[2]=(c-d)/X,this.data[3]=Math.acos((l+u+v-1)/2),this}},THREE.Matrix3=function(e,t,a,r,i,o,n,s,l){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,a||0,r||0,void 0!==i?i:1,o||0,n||0,s||0,void 0!==l?l:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,a,r,i,o,n,s,l){var d=this.elements;return d[0]=e,d[3]=t,d[6]=a,d[1]=r,d[4]=i,d[7]=o,d[2]=n,d[5]=s,d[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},multiplyVector3:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2];return a[0]=t[0]*r+t[3]*i+t[6]*o,a[1]=t[1]*r+t[4]*i+t[7]*o,a[2]=t[2]*r+t[5]*i+t[8]*o,e},multiplyVector3Array:function(e,t,a){var r=THREE.Matrix3.__v1,i=r.data;void 0===t&&(t=0),void 0===a&&(a=e.length);for(var o=t;a>o;o+=3)i[0]=e[o],i[1]=e[o+1],i[2]=e[o+2],this.multiplyVector3(r),e.set(i,o);return e},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},getInverse:function(e){var t=e.elements,a=this.elements;a[0]=t[10]*t[5]-t[6]*t[9],a[1]=-t[10]*t[1]+t[2]*t[9],a[2]=t[6]*t[1]-t[2]*t[5],a[3]=-t[10]*t[4]+t[6]*t[8],a[4]=t[10]*t[0]-t[2]*t[8],a[5]=-t[6]*t[0]+t[2]*t[4],a[6]=t[9]*t[4]-t[5]*t[8],a[7]=-t[9]*t[0]+t[1]*t[8],a[8]=t[5]*t[0]-t[1]*t[4];var r=t[0]*a[0]+t[1]*a[3]+t[2]*a[6];return 0===r?(console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0"),this.identity(),this):(this.multiplyScalar(1/r),this)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},clone:function(){return(new THREE.Matrix3).copy(this)}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,a,r,i,o,n,s,l,d,h,c,u,f,p,m){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,a||0,r||0,i||0,void 0!==o?o:1,n||0,s||0,l||0,d||0,void 0!==h?h:1,c||0,u||0,f||0,p||0,void 0!==m?m:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,a,r,i,o,n,s,l,d,h,c,u,f,p,m){var v=this.elements;return v[0]=e,v[4]=t,v[8]=a,v[12]=r,v[1]=i,v[5]=o,v[9]=n,v[13]=s,v[2]=l,v[6]=d,v[10]=h,v[14]=c,v[3]=u,v[7]=f,v[11]=p,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){return this.elements.set(e.elements),this},setRotationFromEuler:function(e,t){var a=this.elements,r=e.data,i=r[0],o=r[1],n=r[2],s=Math.cos(i),l=Math.sin(i),d=Math.cos(o),h=Math.sin(o),c=Math.cos(n),u=Math.sin(n);if(0===t||void 0===t){var f=s*c,p=s*u,m=l*c,v=l*u;a[0]=d*c,a[4]=-d*u,a[8]=h,a[1]=p+m*h,a[5]=f-v*h,a[9]=-l*d,a[2]=v-f*h,a[6]=m+p*h,a[10]=s*d
}else if(1===t){var g=d*c,S=d*u,x=h*c,G=h*u;a[0]=g+G*l,a[4]=x*l-S,a[8]=s*h,a[1]=s*u,a[5]=s*c,a[9]=-l,a[2]=S*l-x,a[6]=G+g*l,a[10]=s*d}else if(2===t){var g=d*c,S=d*u,x=h*c,G=h*u;a[0]=g-G*l,a[4]=-s*u,a[8]=x+S*l,a[1]=S+x*l,a[5]=s*c,a[9]=G-g*l,a[2]=-s*h,a[6]=l,a[10]=s*d}else if(3===t){var f=s*c,p=s*u,m=l*c,v=l*u;a[0]=d*c,a[4]=m*h-p,a[8]=f*h+v,a[1]=d*u,a[5]=v*h+f,a[9]=p*h-m,a[2]=-h,a[6]=l*d,a[10]=s*d}else if(4===t){var M=s*d,y=s*h,X=l*d,_=l*h;a[0]=d*c,a[4]=_-M*u,a[8]=X*u+y,a[1]=u,a[5]=s*c,a[9]=-l*c,a[2]=-h*c,a[6]=y*u+X,a[10]=M-_*u}else if(5===t){var M=s*d,y=s*h,X=l*d,_=l*h;a[0]=d*c,a[4]=-u,a[8]=h*c,a[1]=M*u+_,a[5]=s*c,a[9]=y*u-X,a[2]=X*u-y,a[6]=l*c,a[10]=_*u+M}return this},setRotationFromQuaternion:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2],n=a[3],s=r+r,l=i+i,d=o+o,h=r*s,c=r*l,u=r*d,f=i*l,p=i*d,m=o*d,v=n*s,g=n*l,S=n*d;return t[0]=1-(f+m),t[4]=c-S,t[8]=u+g,t[1]=c+S,t[5]=1-(h+m),t[9]=p-v,t[2]=u-g,t[6]=p+v,t[10]=1-(h+f),this},lookAt:function(e,t,a){var r=this.elements,i=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,n=THREE.Matrix4.__v3;n.sub(e,t).normalize(),0===n.length()&&(n.data[2]=1),i.cross(a,n).normalize(),0===i.length()&&(n.data[0]+=1e-4,i.cross(a,n).normalize()),o.cross(n,i);var s=i.data,l=o.data,d=n.data;return r[0]=s[0],r[4]=l[0],r[8]=d[0],r[1]=s[1],r[5]=l[1],r[9]=d[1],r[2]=s[2],r[6]=l[2],r[10]=d[2],this},addSelf:function(e){var t=this.elements,a=e.elements;return t[0]+=a[0],t[4]+=a[4],t[8]+=a[8],t[12]+=a[12],t[1]+=a[1],t[5]+=a[5],t[9]+=a[9],t[13]+=a[13],t[2]+=a[2],t[6]+=a[6],t[10]+=a[10],t[14]+=a[14],t[3]+=a[3],t[7]+=a[7],t[11]+=a[11],t[15]+=a[15],this},multiply:function(e,t){var a=e.elements,r=t.elements,i=this.elements,o=a[0],n=a[4],s=a[8],l=a[12],d=a[1],h=a[5],c=a[9],u=a[13],f=a[2],p=a[6],m=a[10],v=a[14],g=a[3],S=a[7],x=a[11],G=a[15],M=r[0],y=r[4],X=r[8],_=r[12],w=r[1],D=r[5],C=r[9],A=r[13],T=r[2],P=r[6],L=r[10],b=r[14],E=r[3],F=r[7],R=r[11],U=r[15];return i[0]=o*M+n*w+s*T+l*E,i[4]=o*y+n*D+s*P+l*F,i[8]=o*X+n*C+s*L+l*R,i[12]=o*_+n*A+s*b+l*U,i[1]=d*M+h*w+c*T+u*E,i[5]=d*y+h*D+c*P+u*F,i[9]=d*X+h*C+c*L+u*R,i[13]=d*_+h*A+c*b+u*U,i[2]=f*M+p*w+m*T+v*E,i[6]=f*y+p*D+m*P+v*F,i[10]=f*X+p*C+m*L+v*R,i[14]=f*_+p*A+m*b+v*U,i[3]=g*M+S*w+x*T+G*E,i[7]=g*y+S*D+x*P+G*F,i[11]=g*X+S*C+x*L+G*R,i[15]=g*_+S*A+x*b+G*U,this},multiplySelf:function(e){return this.multiply(this,e)},multiplyToArray:function(e,t,a){return this.multiply(e,t),a.set(this.elements),this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2],n=1/(t[3]*r+t[7]*i+t[11]*o+t[15]);return a[0]=(t[0]*r+t[4]*i+t[8]*o+t[12])*n,a[1]=(t[1]*r+t[5]*i+t[9]*o+t[13])*n,a[2]=(t[2]*r+t[6]*i+t[10]*o+t[14])*n,e},multiplyVector4:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2],n=a[3];return a[0]=t[0]*r+t[4]*i+t[8]*o+t[12]*n,a[1]=t[1]*r+t[5]*i+t[9]*o+t[13]*n,a[2]=t[2]*r+t[6]*i+t[10]*o+t[14]*n,a[3]=t[3]*r+t[7]*i+t[11]*o+t[15]*n,e},multiplyVector3Array:function(e,t,a){var r=THREE.Matrix4.__v1,i=r.data;void 0===t&&(t=0),void 0===a&&(a=e.length);for(var o=t;a>o;o+=3)i[0]=e[o],i[1]=e[o+1],i[2]=e[o+2],this.multiplyVector3(r),e.set(i,o);return e},rotateAxis:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2];return a[0]=r*t[0]+i*t[4]+o*t[8],a[1]=r*t[1]+i*t[5]+o*t[9],a[2]=r*t[2]+i*t[6]+o*t[10],e.normalize(),e},determinant:function(){var e=this.elements,t=e[0],a=e[4],r=e[8],i=e[12],o=e[1],n=e[5],s=e[9],l=e[13],d=e[2],h=e[6],c=e[10],u=e[14],f=e[3],p=e[7],m=e[11],v=e[15];return f*(+i*s*h-r*l*h-i*n*c+a*l*c+r*n*u-a*s*u)+p*(+t*s*u-t*l*c+i*o*c-r*o*u+r*l*d-i*s*d)+m*(+t*l*h-t*n*u-i*o*h+a*o*u+i*n*d-a*l*d)+v*(-r*n*d-t*s*h+t*n*c+r*o*h-a*o*c+a*s*d)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){return e.set(this.elements),e},flattenToArrayOffset:function(e,t){return e.set(this.elements,t),e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){return this.elements.set(e.data,12),this},setPositionXYZ:function(e,t,a){var r=this.elements;return r[12]=e,r[13]=t,r[14]=a,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e){var t=this.elements,a=e.elements,r=a[0],i=a[4],o=a[8],n=a[12],s=a[1],l=a[5],d=a[9],h=a[13],c=a[2],u=a[6],f=a[10],p=a[14],m=a[3],v=a[7],g=a[11],S=a[15];t[0]=d*p*v-h*f*v+h*u*g-l*p*g-d*u*S+l*f*S,t[4]=n*f*v-o*p*v-n*u*g+i*p*g+o*u*S-i*f*S,t[8]=o*h*v-n*d*v+n*l*g-i*h*g-o*l*S+i*d*S,t[12]=n*d*u-o*h*u-n*l*f+i*h*f+o*l*p-i*d*p,t[1]=h*f*m-d*p*m-h*c*g+s*p*g+d*c*S-s*f*S,t[5]=o*p*m-n*f*m+n*c*g-r*p*g-o*c*S+r*f*S,t[9]=n*d*m-o*h*m-n*s*g+r*h*g+o*s*S-r*d*S,t[13]=o*h*c-n*d*c+n*s*f-r*h*f-o*s*p+r*d*p,t[2]=l*p*m-h*u*m+h*c*v-s*p*v-l*c*S+s*u*S,t[6]=n*u*m-i*p*m-n*c*v+r*p*v+i*c*S-r*u*S,t[10]=i*h*m-n*l*m+n*s*v-r*h*v-i*s*S+r*l*S,t[14]=n*l*c-i*h*c-n*s*u+r*h*u+i*s*p-r*l*p,t[3]=d*u*m-l*f*m-d*c*v+s*f*v+l*c*g-s*u*g,t[7]=i*f*m-o*u*m+o*c*v-r*f*v-i*c*g+r*u*g,t[11]=o*l*m-i*d*m-o*s*v+r*d*v+i*s*g-r*l*g,t[15]=i*d*c-o*l*c+o*s*u-r*d*u-i*s*f+r*l*f;var x=a[0]*t[0]+a[1]*t[4]+a[2]*t[8]+a[3]*t[12];if(0===x){var G="Matrix4.getInverse(): can't invert matrix, determinant is 0";return console.warn(G),this.identity(),this}return this.multiplyScalar(1/x),this},compose:function(e,t,a){var r=this.elements;r[3]=0,r[7]=0,r[11]=0,r[15]=1,this.setRotationFromQuaternion(t);var i=a.data,o=i[0],n=i[1],s=i[2];return r[0]*=o,r[1]*=o,r[2]*=o,r[4]*=n,r[5]*=n,r[6]*=n,r[8]*=s,r[9]*=s,r[10]*=s,r.set(e.data,12),this},decompose:function(e,t,a){var r=this.elements,i=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,n=THREE.Matrix4.__v3;i.set(r[0],r[1],r[2]),o.set(r[4],r[5],r[6]),n.set(r[8],r[9],r[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,a=a instanceof THREE.Vector3?a:new THREE.Vector3;var s=a.data,l=e.data;s[0]=i.length(),s[1]=o.length(),s[2]=n.length(),l[0]=r[12],l[1]=r[13],l[2]=r[14];var d=THREE.Matrix4.__m1;return d.copy(this),d.elements[0]/=s[0],d.elements[1]/=s[0],d.elements[2]/=s[0],d.elements[4]/=s[1],d.elements[5]/=s[1],d.elements[6]/=s[1],d.elements[8]/=s[2],d.elements[9]/=s[2],d.elements[10]/=s[2],t.setFromRotationMatrix(d),[e,t,a]},extractPosition:function(e){var t=this.elements,a=e.elements;return t[12]=a[12],t[13]=a[13],t[14]=a[14],this},extractRotation:function(e){var t=this.elements,a=e.elements,r=THREE.Matrix4.__v1,i=1/r.set(a[0],a[1],a[2]).length(),o=1/r.set(a[4],a[5],a[6]).length(),n=1/r.set(a[8],a[9],a[10]).length();return t[0]=a[0]*i,t[1]=a[1]*i,t[2]=a[2]*i,t[4]=a[4]*o,t[5]=a[5]*o,t[6]=a[6]*o,t[8]=a[8]*n,t[9]=a[9]*n,t[10]=a[10]*n,this},translate:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2];return t[12]=t[0]*r+t[4]*i+t[8]*o+t[12],t[13]=t[1]*r+t[5]*i+t[9]*o+t[13],t[14]=t[2]*r+t[6]*i+t[10]*o+t[14],t[15]=t[3]*r+t[7]*i+t[11]*o+t[15],this},rotateX:function(e){var t=this.elements,a=t[4],r=t[5],i=t[6],o=t[7],n=t[8],s=t[9],l=t[10],d=t[11],h=Math.cos(e),c=Math.sin(e);return t[4]=h*a+c*n,t[5]=h*r+c*s,t[6]=h*i+c*l,t[7]=h*o+c*d,t[8]=h*n-c*a,t[9]=h*s-c*r,t[10]=h*l-c*i,t[11]=h*d-c*o,this},rotateY:function(e){var t=this.elements,a=t[0],r=t[1],i=t[2],o=t[3],n=t[8],s=t[9],l=t[10],d=t[11],h=Math.cos(e),c=Math.sin(e);return t[0]=h*a-c*n,t[1]=h*r-c*s,t[2]=h*i-c*l,t[3]=h*o-c*d,t[8]=h*n+c*a,t[9]=h*s+c*r,t[10]=h*l+c*i,t[11]=h*d+c*o,this},rotateZ:function(e){var t=this.elements,a=t[0],r=t[1],i=t[2],o=t[3],n=t[4],s=t[5],l=t[6],d=t[7],h=Math.cos(e),c=Math.sin(e);return t[0]=h*a+c*n,t[1]=h*r+c*s,t[2]=h*i+c*l,t[3]=h*o+c*d,t[4]=h*n-c*a,t[5]=h*s-c*r,t[6]=h*l-c*i,t[7]=h*d-c*o,this},rotateByAxis:function(e,t){var a=this.elements,r=e.data,i=r[0],o=r[1],n=r[2];if(1===i&&0===o&&0===n)return this.rotateX(t);if(0===i&&1===o&&0===n)return this.rotateY(t);if(0===i&&0===o&&1===n)return this.rotateZ(t);var s=Math.sqrt(i*i+o*o+n*n);i/=s,o/=s,n/=s;var l=i*i,d=o*o,h=n*n,c=Math.cos(t),u=Math.sin(t),f=1-c,p=i*o*f,m=i*n*f,v=o*n*f,g=i*u,S=o*u,x=n*u,G=l+(1-l)*c,M=p+x,y=m-S,X=p-x,_=d+(1-d)*c,w=v+g,D=m+S,C=v-g,A=h+(1-h)*c,T=a[0],P=a[1],L=a[2],b=a[3],E=a[4],F=a[5],R=a[6],U=a[7],I=a[8],N=a[9],B=a[10],O=a[11];return a[0]=G*T+M*E+y*I,a[1]=G*P+M*F+y*N,a[2]=G*L+M*R+y*B,a[3]=G*b+M*U+y*O,a[4]=X*T+_*E+w*I,a[5]=X*P+_*F+w*N,a[6]=X*L+_*R+w*B,a[7]=X*b+_*U+w*O,a[8]=D*T+C*E+A*I,a[9]=D*P+C*F+A*N,a[10]=D*L+C*R+A*B,a[11]=D*b+C*U+A*O,this},scale:function(e){var t=this.elements,a=e.data,r=a[0],i=a[1],o=a[2];return t[0]*=r,t[4]*=i,t[8]*=o,t[1]*=r,t[5]*=i,t[9]*=o,t[2]*=r,t[6]*=i,t[10]*=o,t[3]*=r,t[7]*=i,t[11]*=o,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],a=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(a,r)))},makeTranslation:function(e){return this.set(1,0,0,e.data[0],0,1,0,e.data[1],0,0,1,e.data[2],0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),a=Math.sin(e);return this.set(1,0,0,0,0,t,-a,0,0,a,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),a=Math.sin(e);return this.set(t,0,a,0,0,1,0,0,-a,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),a=Math.sin(e);return this.set(t,-a,0,0,a,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var a=e.data,r=Math.cos(t),i=Math.sin(t),o=1-r,n=a[0],s=a[1],l=a[2],d=o*n,h=o*s;return this.set(d*n+r,d*s-i*l,d*l+i*s,0,d*s+i*l,h*s+r,h*l-i*n,0,d*l-i*s,h*l+i*n,o*l*l+r,0,0,0,0,1),this},makeScale:function(e){var t=e.data;return this.set(t[0],0,0,0,0,t[1],0,0,0,0,t[2],0,0,0,0,1),this},makeFrustum:function(e,t,a,r,i,o){var n=this.elements,s=2*i/(t-e),l=2*i/(r-a),d=(t+e)/(t-e),h=(r+a)/(r-a),c=-(o+i)/(o-i),u=-2*o*i/(o-i);return n[0]=s,n[4]=0,n[8]=d,n[12]=0,n[1]=0,n[5]=l,n[9]=h,n[13]=0,n[2]=0,n[6]=0,n[10]=c,n[14]=u,n[3]=0,n[7]=0,n[11]=-1,n[15]=0,this},makePerspective:function(e,t,a,r){var i=a*Math.tan(THREE.Math.degToRad(.5*e)),o=-i,n=o*t,s=i*t;return this.makeFrustum(n,s,o,i,a,r)},makePerspectiveOffset:function(e,t,a,r,i,o,n,s){var l=Math.tan(THREE.Math.degToRad(.5*e)),d=l*t,h=d/(.5*n),c=l/(.5*s),u=h*i,f=c*o,p=r,m=a,v=(u-d)*m,g=(u+d)*m,S=(f-l)*m,x=(f+l)*m;return this.makeFrustum(v,g,S,x,m,p)},makeOrthographic:function(e,t,a,r,i,o){var n=this.elements,s=t-e,l=a-r,d=o-i,h=(t+e)/s,c=(a+r)/l,u=(o+i)/d;return n[0]=2/s,n[4]=0,n[8]=0,n[12]=-h,n[1]=0,n[5]=2/l,n[9]=0,n[13]=-c,n[2]=0,n[6]=0,n[10]=-2/d,n[14]=-u,n[3]=0,n[7]=0,n[11]=0,n[15]=1,this},clone:function(){return(new THREE.Matrix4).copy(this)}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Frustum=function(){this.planes=[new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane],this.tmpVec=new THREE.Vector3},THREE.Frustum.prototype.setFromMatrix=function(e){var t=this.planes,a=e.elements,r=a[0],i=a[1],o=a[2],n=a[3],s=a[4],l=a[5],d=a[6],h=a[7],c=a[8],u=a[9],f=a[10],p=a[11],m=a[12],v=a[13],g=a[14],S=a[15];t[0].setComponents(n-r,h-s,p-c,S-m),t[1].setComponents(n+r,h+s,p+c,S+m),t[2].setComponents(n+i,h+l,p+u,S+v),t[3].setComponents(n-i,h-l,p-u,S-v),t[4].setComponents(n-o,h-d,p-f,S-g),t[5].setComponents(n+o,h+d,p+f,S+g);for(var x=0;6>x;x++)t[x].normalize()},THREE.Frustum.prototype.contains=function(e,t){for(var a=this.planes,r=e.matrixWorld,i=r.getPosition(),o=-t.boundingSphere.radius*r.getMaxScaleOnAxis(),n=0,s=0;6>s;s++)if(n=a[s].distanceToPoint(i),o>=n)return!1;return!0},THREE.Frustum.prototype.containsInstance=function(e,t,a){var r=this.planes,i=e.matrixWorld,o=-t.boundingSphere.radius*i.getMaxScaleOnAxis(),n=t.attributes.offset.array,s=3*a,l=n[s],d=n[s+1],h=n[s+2],c=this.tmpVec;c.set(l,d,h),e.localToWorld(c);for(var u=0,f=0;6>f;f++)if(u=r[f].distanceToPoint(c),o>=u)return!1;return!0},THREE.Plane=function(e,t){this.normal=void 0!==e?e.clone():THREE.Vector3.xAxis.clone(),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,a,r){return this.normal.set(e,t,a),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(a,r,i){var o=e.sub(i,r).crossSelf(t.sub(a,r)).normalize();return this.setFromNormalAndCoplanarPoint(o,a),this}}(),intersectLine:function(){var e=new THREE.Vector3;return function(t,a,r){var i=r||new THREE.Vector3,o=e.sub(a,t),n=this.normal.dot(o);if(0===n)return 0===this.distanceToPoint(t)?i.copy(t):void 0;var s=-(t.dot(this.normal)+this.constant)/n;return i.copy(o).multiplyScalar(s).addSelf(t)}}(),intersectLineSegment:function(){var e=new THREE.Vector3;return function(t,a,r){var i=r||new THREE.Vector3,o=e.sub(a,t),n=this.normal.dot(o);if(0===n)return 0===this.distanceToPoint(t)?i.copy(t):void 0;var s=-(t.dot(this.normal)+this.constant)/n;return 0>s||s>1?void 0:i.copy(o).multiplyScalar(s).addSelf(t)}}(),copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal),t.multiplyScalar(-this.constant),t},applyMatrix4:function(e,t){var a=THREE.Plane.__v1,r=THREE.Plane.__v2;t=t||THREE.Plane.__m1.getNormalMatrix(e);var i=a.copy(this.normal);t.multiplyVector3(i);var o=this.coplanarPoint(r);return e.multiplyVector3(o),this.setFromNormalAndCoplanarPoint(i,o),this},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Plane.__v1=new THREE.Vector3,THREE.Plane.__v2=new THREE.Vector3,THREE.Plane.__m1=new THREE.Matrix3,THREE.Box3=function(e,t){this.min=void 0!==e?e.clone():new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t.clone():new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},add:function(e){this.min.minSelf(e.min),this.max.maxSelf(e.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Sphere=function(e,t){this.center=void 0===e?new THREE.Vector3:e.clone(),this.radius=void 0===t?0:t},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.startTime=Date.now(),this.oldTime=this.startTime,this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e},THREE.Animation=function(e,t){this.id=THREE.AnimationIdCount++,this.root=e,this.data=t,this.hierarchy=[],this.boneIndexMap={};for(var a=0;a<e.bones.length;a++){var r=e.bones[a];this.hierarchy.push(r),this.boneIndexMap[r.name]=a}this.initData(t),this.currentTime=0,this.timeScale=1,this.weight=1,this.direction=1,this.directionBackwards=!1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0},THREE.Animation.prototype.play=function(e,t){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var a,r,i=this.hierarchy.length;for(a=0;i>a;a++){r=this.hierarchy[a],r.useQuaternion=!0,r.matrixAutoUpdate=!0,void 0===r.animationCache&&(r.animationCache={});var o;void 0===r.animationCache[this.id]?(r.animationCache[this.id]={},o=r.animationCache[this.id],o.prevKey={pos:0,rot:0,scl:0},o.nextKey={pos:0,rot:0,scl:0},o.originalMatrix=r instanceof THREE.Bone?r.skinMatrix:r.matrix,o.oldPosition=new THREE.Vector3,o.oldQuaternion=new THREE.Quaternion,o.oldScale=new THREE.Vector3):o=r.animationCache[this.id];var n=o.prevKey,s=o.nextKey;n.pos=this.data.hierarchy[a].keys[0],n.rot=this.data.hierarchy[a].keys[0],n.scl=this.data.hierarchy[a].keys[0],this.directionBackwards?(s.pos=this.getPrevKeyWith("pos",a,-1),s.rot=this.getPrevKeyWith("rot",a,-1),s.scl=this.getPrevKeyWith("scl",a,-1)):(s.pos=this.getNextKeyWith("pos",a,1),s.rot=this.getNextKeyWith("rot",a,1),s.scl=this.getNextKeyWith("scl",a,1))}this.update(0)}this.isPaused=!1},THREE.Animation.prototype.setWeight=function(e){this.weight=e},THREE.Animation.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.Animation.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.Animation.prototype.pause=function(){this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1},THREE.Animation.prototype.update=function(e){if(this.isPlaying!==!1&&!this.isPaused){var t,a,r,i,o,n,s,l,d,h,c,u,f=["pos","rot","scl"],p=this.currentTime+e*this.timeScale*this.direction,m=p%this.data.length;this.directionBackwards&&0>m&&(m+=this.data.length);var v=m;this.currentTime=m;for(var g=0,S=this.hierarchy.length;S>g;g++){l=this.hierarchy[g],d=l.animationCache[this.id],l.matrixAutoUpdate=!1,l.firstAnimationFlag||(d.oldPosition.copy(l.position),d.oldQuaternion.copy(l.quaternion),d.oldScale.copy(l.scale));for(var x=0;3>x;x++){if(t=f[x],n=d.prevKey[t],s=d.nextKey[t],this.directionBackwards){if(s.time>p){if(v>p){if(!this.loop)return void this.stop();var G=this.data.hierarchy[g].keys;for(n=this.data.hierarchy[g].keys[G.length-1],s=this.getPrevKeyWith(t,g,-1);s.time>v;)n=s,s=this.getPrevKeyWith(t,g,s.index-1)}else do n=s,s=this.getPrevKeyWith(t,g,s.index-1);while(s.time>v);d.prevKey[t]=n,d.nextKey[t]=s}a=(n.time-v)/(n.time-s.time)}else{if(s.time<=p){if(p>v){if(!this.loop)return void this.stop();for(n=this.data.hierarchy[g].keys[0],s=this.getNextKeyWith(t,g,1);s.time<v;)n=s,s=this.getNextKeyWith(t,g,s.index+1)}else do n=s,s=this.getNextKeyWith(t,g,s.index+1);while(s.time<v);d.prevKey[t]=n,d.nextKey[t]=s}a=(v-n.time)/(s.time-n.time)}i=n[t],o=s[t],(0>a||a>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+a+" on bone "+g),a=0>a?0:1),"pos"===t?(r=l.position,h=i[0]+(o[0]-i[0])*a,c=i[1]+(o[1]-i[1])*a,u=i[2]+(o[2]-i[2])*a,r.set(h,c,u)):"rot"===t?THREE.Quaternion.slerp(i,o,l.quaternion,a):"scl"===t&&(r=l.scale,h=i[0]+(o[0]-i[0])*a,c=i[1]+(o[1]-i[1])*a,u=i[2]+(o[2]-i[2])*a,r.set(h,c,u))}l.firstAnimationFlag||(l.position.multiplyScalar(this.weight),d.oldPosition.multiplyScalar(1-this.weight),l.position.addSelf(d.oldPosition),l.quaternion.slerpSelf(d.oldQuaternion,1-this.weight),l.scale.multiplyScalar(this.weight),d.oldScale.multiplyScalar(1-this.weight),l.scale.addSelf(d.oldScale)),l.updateMatrix(),l.firstAnimationFlag=!1}}},THREE.Animation.prototype.getNextKeyWith=function(e,t,a){var r=this.data.hierarchy[t].keys;for(a%=r.length;a<r.length;a++)if(void 0!==r[a][e])return r[a];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,a){var r=this.data.hierarchy[t].keys;for(a=a>=0?a:a+r.length;a>=0;a--)if(void 0!==r[a][e])return r[a];return this.data.hierarchy[t].keys[r.length-1]},THREE.Animation.prototype.initData=function(e){if(e.initialized!==!0){for(var t=e.hierarchy,a=0;a<t.length;a++){for(var r=t[a],i=0;i<r.keys.length;i++)if(r.keys[i].time<0&&(r.keys[i].time=0),void 0!==r.keys[i].rot&&!(r.keys[i].rot instanceof THREE.Quaternion)){var o=r.keys[i].rot;r.keys[i].rot=new THREE.Quaternion(o[0],o[1],o[2],o[3])}for(var i=1;i<r.keys.length;i++)r.keys[i].time===r.keys[i-1].time&&(r.keys.splice(i,1),i--);for(var i=0;i<r.keys.length;i++)r.keys[i].index=i}e.initialized=!0}},THREE.Animation.prototype.findRoot=function(){for(var e,t=this.data.hierarchy,a=0,r=t.length;r>a;a++){var i=t[a];if(-1===i.parent){e=i;break}}return e},THREE.Animation.prototype.offsetPositionKeysForBone=function(e,t){for(var a=this.boneIndexMap[e],r=this.data.hierarchy[a].keys,i=0,o=r.length;o>i;i++){var n=r[i],s=n.pos;void 0!==s&&(s[0]+=t.x,s[1]+=t.y,s[2]+=t.z)}},THREE.Animation.prototype.offsetRotationKeysForBone=function(e,t){for(var a=this.boneIndexMap[e],r=this.data.hierarchy[a].keys,i=0,o=r.length;o>i;i++){var n=r[i],s=n.rot;void 0!==s&&s.multiplySelf(t)}},THREE.Animation.prototype.setKeysComponentValue=function(e,t,a,r){for(var i=0,o=e.keys.length;o>i;i++){var n=e.keys[i];n[t]&&(n[t][a]=r)}},THREE.Animation.prototype.copyKeysToBoneRange=function(e,t,a){for(var r=this.data.hierarchy,i=e.data.hierarchy,o=t;a>o;o++)for(var n=i[o],s=r[o],l=0,d=n.keys.length;d>l;l++){var h=n.keys[l];s.keys[l]=h}},THREE.AnimationIdCount=0,THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.attributes={},this.attributesList=[],this.virtualAttributes={},this.virtualAttributesList=[],this.numPrimitives=0,this.numVertices=0,this.numInstances=0,this.numVisibleInstances=0,this.instanceCulled=!0,this.dynamic=!1,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.morphTargets=[],this.morphColors=[],this.tmpVecA=new THREE.Vector3,this.tmpVecB=new THREE.Vector3,this.tmpVecC=new THREE.Vector3,this.tmpVecD=new THREE.Vector3,this.tmpVecE=new THREE.Vector3},THREE.Geometry.prototype={constructor:THREE.Geometry,addIndex:function(e,t,a){var r=new t(this.numPrimitives*a);this.addAttributeArray(e,r,a)},addAttribute:function(e,t,a){var r=new t(this.numVertices*a);this.addAttributeArray(e,r,a)},addInstancedAttribute:function(e,t,a,r){var i=new t(this.numInstances*a);this.addAttributeArray(e,i,a,r)},addVirtualAttribute:function(e){var t={name:e,mapped:null};this.virtualAttributes[e]=t,this.virtualAttributesList.push(t)},addUnattachedAttribute:function(e,t,a){var r=new t(this.numVertices*a),i={name:e,itemSize:a,numItems:r.length,array:r,buffer:null,type:THREE.paramTypedArrayToTHREE(r),typeSize:r.BYTES_PER_ELEMENT,needsUpdate:!0,attached:!1,divisor:0};this.attributes[e]=i,this.attributesList.push(i)},addAttributeArray:function(e,t,a,r){void 0===r&&(r=0);var i={name:e,itemSize:a,numItems:t.length,array:t,buffer:null,type:THREE.paramTypedArrayToTHREE(t),typeSize:t.BYTES_PER_ELEMENT,needsUpdate:!0,attached:!0,divisor:r};this.attributes[e]=i,this.attributesList.push(i)},removeAttribute:function(e){if(void 0===this.attributes[e])return void console.warn("Geometry.removeAttribute(): attribute ["+e+"] not found.");for(var t=[],a=0,r=this.attributesList.length;r>a;a++){var i=this.attributesList[a];i.name!==e&&t.push(i)}this.attributesList=t,this.attributes[e]=null,delete this.attributes[e]},setAttributeValue:function(e,t,a,r){var i=this.attributes[e];if(i){if(void 0===a&&(a=0),void 0===r&&(r=i.array.length),t instanceof THREE.Color||t instanceof THREE.Vector2||t instanceof THREE.Vector3||t instanceof THREE.Vector4||t instanceof THREE.Quaternion)for(var o=a;r>o;o+=i.itemSize)t.copyIntoArray(i.array,o);i.needsUpdate=!0}},applyMatrix:function(e){var t,a;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(a=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.attributes.position.needsUpdate=!0),void 0!==a){var r=new THREE.Matrix3;r.getInverse(e).transpose(),r.multiplyVector3Array(a),this.normalizeAttribute("normal"),this.attributes.normal.needsUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,a,r,i=this.boundingBox,o=i.min.data,n=i.max.data;e.length>=3&&(o[0]=n[0]=e[0],o[1]=n[1]=e[1],o[2]=n[2]=e[2]);for(var s=3,l=e.length;l>s;s+=3)t=e[s],a=e[s+1],r=e[s+2],t<o[0]?o[0]=t:t>n[0]&&(n[0]=t),a<o[1]?o[1]=a:a>n[1]&&(n[1]=a),r<o[2]?o[2]=r:r>n[2]&&(n[2]=r)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,a,r,i,o=0,n=0,s=e.length;s>n;n+=3)a=e[n],r=e[n+1],i=e[n+2],t=a*a+r*r+i*i,t>o&&(o=t);this.boundingSphere.radius=Math.sqrt(o)}},computeVertexNormals:function(){this.computeNormals("position","normal")},computeNormals:function(e,t){if(this.attributes[e]){var a,r,i,o,n=this.attributes[e].array.length;if(void 0===this.attributes[t])this.addAttributeArray(t,new Float32Array(n),3);else for(a=0,r=this.attributes[t].array.length;r>a;a++)this.attributes[t].array[a]=0;var s,l,d,h,c,u,f,p,m,v,g,S,x,G,M,y=this.attributes[e].array,X=this.attributes[t].array,_=this.tmpVecA,w=this.tmpVecB,D=this.tmpVecC,C=this.tmpVecD,A=this.tmpVecE,T=C.data;if(this.attributes.index){var P=this.attributes.index.array,L=this.offsets;for(i=0,o=L.length;o>i;++i){var b=L[i].start,E=L[i].count,F=L[i].index;for(a=b,r=b+E;r>a;a+=3)s=F+P[a],l=F+P[a+1],d=F+P[a+2],f=3*s,p=f+1,m=f+2,v=3*l,g=v+1,S=v+2,x=3*d,G=x+1,M=x+2,h=y[f],c=y[p],u=y[m],_.set(h,c,u),h=y[v],c=y[g],u=y[S],w.set(h,c,u),h=y[x],c=y[G],u=y[M],D.set(h,c,u),C.sub(D,w),A.sub(_,w),C.crossSelf(A),X[f]+=T[0],X[p]+=T[1],X[m]+=T[2],X[v]+=T[0],X[g]+=T[1],X[S]+=T[2],X[x]+=T[0],X[G]+=T[1],X[M]+=T[2]}}else for(a=0,r=y.length;r>a;a+=9)h=y[a],c=y[a+1],u=y[a+2],_.set(h,c,u),h=y[a+3],c=y[a+4],u=y[a+5],w.set(h,c,u),h=y[a+6],c=y[a+7],u=y[a+8],D.set(h,c,u),C.sub(D,w),A.sub(_,w),C.crossSelf(A),X[a]=T[0],X[a+1]=T[1],X[a+2]=T[2],X[a+3]=T[0],X[a+4]=T[1],X[a+5]=T[2],X[a+6]=T[0],X[a+7]=T[1],X[a+8]=T[2];var R;for(a=0,r=X.length;r>a;a+=3)h=X[a],c=X[a+1],u=X[a+2],R=1/Math.sqrt(h*h+c*c+u*u),X[a]*=R,X[a+1]*=R,X[a+2]*=R;this.attributes[t].needsUpdate=!0}},normalizeAttribute:function(e,t,a){var r=this.attributes[e];if(r){var i=r.array;void 0===t&&(t=0),void 0===a&&(a=i.length);for(var o,n,s,l,d=t;a>d;d+=3)o=i[d],n=i[d+1],s=i[d+2],l=1/Math.sqrt(o*o+n*n+s*s),i[d]*=l,i[d+1]*=l,i[d+2]*=l}},scaleAttribute:function(e,t,a,r,i,o){var n=this.attributes[e];if(n){var s=n.array,l=n.itemSize;void 0===i&&(i=0),void 0===o&&(o=s.length);for(var d=i;o>d;d+=l)s[d]*=t,l>1&&void 0!==a&&(s[d+1]*=a),l>2&&void 0!==r&&(s[d+2]*=r)}},computeMorphNormals:function(){for(var e=0,t=this.morphTargets.length;t>e;e++){var a="mp_"+e,r="mn_"+e;this.computeNormals(a,r)}},computeCenters:function(){function e(e,t,a){o[3*e]=1,o[3*e+1]=0,o[3*e+2]=0,o[3*t]=0,o[3*t+1]=1,o[3*t+2]=0,o[3*a]=0,o[3*a+1]=0,o[3*a+2]=1}if(void 0===this.attributes.position)return void console.warn("Missing required attributes (position) in Geometry.computeCenters()");var t=this.attributes.position.array,a=t.length/3;void 0===this.attributes.center&&this.addAttributeArray("center",new Float32Array(3*a),3);var r,i,o=this.attributes.center.array;if(this.attributes.index){var n,s,l,d,h,c=this.attributes.index.array,u=this.offsets;for(n=0,s=u.length;s>n;++n){var f=u[n].start,p=u[n].count,m=u[n].index;for(r=f,i=f+p;i>r;r+=3)l=m+c[r],d=m+c[r+1],h=m+c[r+2],e(l,d,h)}}else for(r=0,i=o.length;i>r;r+=9)o[r]=1,o[r+1]=0,o[r+2]=0,o[r+3]=0,o[r+4]=1,o[r+5]=0,o[r+6]=0,o[r+7]=0,o[r+8]=1},computeTangents:function(){function e(e,t,a){c=r[3*e],u=r[3*e+1],f=r[3*e+2],p=r[3*t],m=r[3*t+1],v=r[3*t+2],g=r[3*a],S=r[3*a+1],x=r[3*a+2],G=o[2*e],M=o[2*e+1],y=o[2*t],X=o[2*t+1],_=o[2*a],w=o[2*a+1],D=p-c,C=g-c,A=m-u,T=S-u,P=v-f,L=x-f,b=y-G,E=_-G,F=X-M,R=w-M,U=1/(b*R-E*F),H.set((R*D-F*C)*U,(R*A-F*T)*U,(R*P-F*L)*U),W.set((b*C-E*D)*U,(b*T-E*A)*U,(b*L-E*P)*U),l[e].addSelf(H),l[t].addSelf(H),l[a].addSelf(H),d[e].addSelf(W),d[t].addSelf(W),d[a].addSelf(W)}function t(e){rt[0]=i[3*e],rt[1]=i[3*e+1],rt[2]=i[3*e+2],at.copy(tt),Q=l[e],$.copy(Q),$.subSelf(tt.multiplyScalar(tt.dot(Q))).normalize(),et.cross(at,Q),J=et.dot(d[e]),Z=0>J?-1:1,s[4*e]=it[0],s[4*e+1]=it[1],s[4*e+2]=it[2],s[4*e+3]=Z}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in Geometry.computeTangents()");var a=this.attributes.index.array,r=this.attributes.position.array,i=this.attributes.normal.array,o=this.attributes.uv.array,n=r.length/3;void 0===this.attributes.tangent&&this.addAttributeArray("tangent",new Float32Array(4*n),4);for(var s=this.attributes.tangent.array,l=[],d=[],h=0;n>h;h++)l[h]=new THREE.Vector3,d[h]=new THREE.Vector3;var c,u,f,p,m,v,g,S,x,G,M,y,X,_,w,D,C,A,T,P,L,b,E,F,R,U,I,N,B,O,V,k,z,H=new THREE.Vector3,W=new THREE.Vector3,j=this.offsets;for(B=0,O=j.length;O>B;++B){var q=j[B].start,Y=j[B].count,K=j[B].index;for(I=q,N=q+Y;N>I;I+=3)V=K+a[I],k=K+a[I+1],z=K+a[I+2],e(V,k,z)}var Z,Q,J,$=new THREE.Vector3,et=new THREE.Vector3,tt=new THREE.Vector3,at=new THREE.Vector3,rt=tt.data,it=$.data;for(B=0,O=j.length;O>B;++B){var q=j[B].start,Y=j[B].count,K=j[B].index;for(I=q,N=q+Y;N>I;I+=3)V=K+a[I],k=K+a[I+1],z=K+a[I+2],t(V),t(k),t(z)}this.attributes.tangent.needsUpdate=!0},unrollIndices:function(){function e(e,t,r){S=a[3*e],x=a[3*e+1],G=a[3*e+2],M=a[3*t],y=a[3*t+1],X=a[3*t+2],_=a[3*r],w=a[3*r+1],D=a[3*r+2],i[9*z]=S,i[9*z+1]=x,i[9*z+2]=G,i[9*z+3]=M,i[9*z+4]=y,i[9*z+5]=X,i[9*z+6]=_,i[9*z+7]=w,i[9*z+8]=D,o&&(C=o[3*e],A=o[3*e+1],T=o[3*e+2],P=o[3*t],L=o[3*t+1],b=o[3*t+2],E=o[3*r],F=o[3*r+1],R=o[3*r+2],s[9*z]=C,s[9*z+1]=A,s[9*z+2]=T,s[9*z+3]=P,s[9*z+4]=L,s[9*z+5]=b,s[9*z+6]=E,s[9*z+7]=F,s[9*z+8]=R),l&&(U=l[2*e],I=l[2*e+1],N=l[2*t],B=l[2*t+1],O=l[2*r],V=l[2*r+1],h[6*z]=U,h[6*z+1]=I,h[6*z+2]=N,h[6*z+3]=B,h[6*z+4]=O,h[6*z+5]=V),z+=1}if(void 0===this.attributes.index||void 0===this.attributes.position)return void console.warn("Missing required attributes (index or position) in Geometry.unrollIndices()");var t=3*this.numPrimitives,a=this.attributes.position.array,r=THREE.paramTHREEToTypedArray(this.attributes.position.type),i=new r(t*this.attributes.position.itemSize);if(this.attributes.normal)var o=this.attributes.normal.array,n=THREE.paramTHREEToTypedArray(this.attributes.normal.type),s=new n(t*this.attributes.normal.itemSize);if(this.attributes.uv)var l=this.attributes.uv.array,d=THREE.paramTHREEToTypedArray(this.attributes.uv.type),h=new d(t*this.attributes.uv.itemSize);var c,u,f,p,m,v,g,S,x,G,M,y,X,_,w,D,C,A,T,P,L,b,E,F,R,U,I,N,B,O,V,k=this.attributes.index.array,z=0,H=this.offsets;for(f=0,p=H.length;p>f;++f){var W=H[f].start,j=H[f].count,q=H[f].index;for(c=W,u=W+j;u>c;c+=3)m=q+k[c],v=q+k[c+1],g=q+k[c+2],e(m,v,g)}this.attributes.position.array=i,this.attributes.position.numItems=i.length,this.attributes.position.needsUpdate=!0,this.attributes.normal&&(this.attributes.normal.array=s,this.attributes.normal.numItems=s.length,this.attributes.normal.needsUpdate=!0),this.attributes.uv&&(this.attributes.uv.array=h,this.attributes.uv.numItems=h.length,this.attributes.uv.needsUpdate=!0),this.offsets=[],this.numVertices=t,this.removeAttribute("index")},mergeBatch:function(e,t){e.length!==t.length&&console.warn("THREE.Geometry.mergeBatch: geometries and transforms arrays don't have the same sizes");var a=Math.min(e.length,t.length),r=e.slice(0),i=t.slice(0);0!==this.attributesList.length&&(r.unshift(this),i.unshift(new THREE.Matrix4));for(var o={},n=0,s=0,l=0;a>l;l++){for(var d=r[l],h=0,c=d.attributesList.length;c>h;h++){var u=d.attributesList[h],f=u.name,p=u.type,m=u.array,v=u.itemSize;void 0===o[f]&&(o[f]={size:0,type:p,array:null,offset:0,itemSize:v}),o[f].size+=m.length}n+=d.numVertices,s+=d.numPrimitives}for(var f in o){var u=o[f],g=THREE.paramTHREEToTypedArray(u.type);"index"===f&&n>65535&&(THREE.elementIndexUintAvailable?g=Uint32Array:console.warn("THREE.Geometry.mergeBatch: too many vertices for new merged indexed geometry")),u.array=new g(u.size)}for(var S,x=0,l=0;a>l;l++){for(var d=r[l],G=i[l],h=0,c=d.attributesList.length;c>h;h++){var u=d.attributesList[h],f=u.name,p=u.type,m=u.array,M=o[f],y=M.array,X=M.offset;if("index"===f&&M.type===THREE.UnsignedIntType&&p===THREE.UnsignedShortType)for(var _=0,w=m.length;w>_;_++)y[X+_]=m[_];else y.set(m,X);
var D=X,C=X+m.length;if("position"===f&&G.multiplyVector3Array(y,D,C),"normal"===f&&(void 0===S&&(S=new THREE.Matrix3),S.getInverse(G).transpose(),S.multiplyVector3Array(y,D,C)),"index"===f)for(var _=D;C>_;_++)y[_]+=x;M.offset+=m.length}x+=d.attributes.position.array.length/3}if(0===this.attributesList.length){for(var f in o){var u=o[f];this.addAttributeArray(f,u.array,u.itemSize)}this.offsets[0]={start:0,index:0,count:3*s}}else{for(var h=0,c=this.attributesList.length;c>h;h++){var A=this.attributesList[h],f=A.name,u=o[f];A.array=u.array,A.numItems=u.array.length,A.needsUpdate=!0}this.offsets[0].count=3*s}this.normalizeAttribute("normal"),this.numVertices=n,this.numPrimitives=s},merge:function(e,t){if(this.numVertices+=e.numVertices,this.numPrimitives+=e.numPrimitives,0===this.attributesList.length){this.attributes={};for(var a=0,r=e.attributesList.length;r>a;a++){var i=e.attributesList[a],o=i.name,n=i.array,s=i.itemSize,l=i.type,d=THREE.paramTHREEToTypedArray(i.type),h=new d(n);this.addAttributeArray(o,h,s)}this.offsets=[];var c=e.offsets;for(a=0,r=c.length;r>a;a++){var u=c[a].start,f=c[a].index,p=c[a].count;this.offsets[a]={start:u,index:f,count:p}}return void this.applyMatrix(t)}var m=this.attributes.position.array.length/3,v=e.attributes.position.array.length/3,g=Uint16Array;m+v>65535&&this.attributes.index&&(THREE.elementIndexUintAvailable?g=Uint32Array:console.warn("THREE.Geometry.merge: too many vertices for new merged indexed geometry"));for(var S=this.attributes.position?m:0,x=0,a=0,r=this.attributesList.length;r>a;a++){var G=this.attributesList[a],o=G.name,n=G.array,l=G.type,s=G.itemSize,M=e.attributes[o],y=M.array;if(void 0!==M)if(M.itemSize===s&&M.type===l||"index"===o&&M.itemSize===s){var X=n.length,_=n.length+y.length,d=THREE.paramTHREEToTypedArray(l);if("index"===o&&d!==g){for(var w=new g(_),D=0;X>D;D++)w[D]=n[D];for(D=X;_>D;D++)w[D]=y[D-X];G.type=THREE.paramTypedArrayToTHREE(w),G.typeSize=w.BYTES_PER_ELEMENT}else{var w=new d(_);w.set(n,0),w.set(y,X)}if("index"===o){x=y.length/3;for(var D=X;_>D;D++)w[D]+=S}if(t&&("position"===o&&t.multiplyVector3Array(w,X),"normal"===o)){var C=new THREE.Matrix3;C.getInverse(t).transpose(),C.multiplyVector3Array(w,X)}G.array=w,G.numItems=_,G.needsUpdate=!0,t&&"normal"===o&&this.normalizeAttribute("normal",X)}else console.warn("THREE.Geometry.merge: incompatible attribute ["+o+"]");else console.warn("THREE.Geometry.merge: missing attribute ["+o+"]")}this.offsets.length>0&&(this.offsets[0].count+=3*x)}},THREE.Geometry.prototype.clone=function(){for(var e=new THREE.Geometry,t=this.attributesList,a=e.attributesList,r=e.attributes,i=0,o=t.length;o>i;++i){var n=t[i],s={name:n.name,itemSize:n.itemSize,numItems:n.numItems,array:n.array.slice(0),buffer:null,type:n.type,typeSize:n.typeSize,needsUpdate:!0,attached:n.attached,divisor:n.divisor};a[i]=s,r[s.name]=s}for(var l=this.virtualAttributesList,d=e.virtualAttributesList,h=e.virtualAttributes,i=0,o=l.length;o>i;++i){var n=l[i],s={name:n.name,mapped:n.mapped};d[i]=s,h[s.name]=s}e.numPrimitives=this.numPrimitives,e.numVertices=this.numVertices,e.numInstances=this.numInstances,e.numVisibleInstances=this.numVisibleInstances,e.instanceCulled=this.instanceCulled,e.dynamic=this.dynamic;for(var c=this.offsets,u=e.offsets,i=0,o=c.length;o>i;++i){var f=c[i].start,p=c[i].count,m=c[i].index;u.push({start:f,count:p,index:m})}this.boundingBox&&(e.boundingBox=this.boundingBox.clone()),this.boundingSphere&&(e.boundingSphere=this.boundingSphere.clone());for(var v=this.morphTargets,g=e.morphTargets,i=0,o=v.length;o>i;++i){var S=v[i],x={name:S.name,index:S.index};g[i]=x}for(var G=this.morphColors,M=e.morphColors,i=0,o=G.length;o>i;++i){var y=G[i],X={name:y.name,index:y.index,faceColors:y.faceColors};M[i]=X}return h.color.mapped&&(h.color.mapped=a[M[0].index]),e},THREE.GeometryIdCount=0,THREE.PlaneGeometry=function(e,t){THREE.Geometry.call(this),this.width=e,this.height=t,this.numPrimitives=2,this.numVertices=4,this.addIndex("index",Uint16Array,3),this.addAttribute("position",Float32Array,3),this.addAttribute("normal",Float32Array,3),this.addAttribute("uv",Float32Array,2);var a=this.attributes.index.array,r=this.attributes.position.array,i=this.attributes.normal.array,o=this.attributes.uv.array,n=.5*this.width,s=.5*this.height;r[0]=-n,r[1]=-s,r[2]=0,r[3]=n,r[4]=-s,r[5]=0,r[6]=n,r[7]=s,r[8]=0,r[9]=-n,r[10]=s,r[11]=0,i[0]=0,i[1]=0,i[2]=1,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=1,i[9]=0,i[10]=0,i[11]=1,o[0]=0,o[1]=0,o[2]=1,o[3]=0,o[4]=1,o[5]=1,o[6]=0,o[7]=1,a[0]=0,a[1]=1,a[2]=3,a[3]=1,a[4]=2,a[5]=3,this.offsets.push({start:0,index:0,count:a.length})},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TriangleGeometry=function(e,t){THREE.Geometry.call(this),this.numPrimitives=1,this.numVertices=3,this.addAttribute("position",Float32Array,3),this.addAttribute("uv",Float32Array,2);var a=this.attributes.position.array,r=this.attributes.uv.array;a[0]=e[0][0],a[1]=e[0][1],a[2]=e[0][2],a[3]=e[1][0],a[4]=e[1][1],a[5]=e[1][2],a[6]=e[2][0],a[7]=e[2][1],a[8]=e[2][2],r[0]=t[0][0],r[1]=t[0][1],r[2]=t[1][0],r[3]=t[1][1],r[4]=t[2][0],r[5]=t[2][1]},THREE.TriangleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.HeightfieldGeometry=function(e,t,a,r,i){THREE.Geometry.call(this),this.width=e,this.length=t,this.widthSegments=a||1,this.lengthSegments=r||1,this.numPrimitives=this.widthSegments*this.lengthSegments*2,this.numVertices=(this.widthSegments+1)*(this.lengthSegments+1);var o=Uint16Array;this.numVertices>65536&&(THREE.elementIndexUintAvailable?o=Uint32Array:console.warn("THREE.HeightfieldGeometry: too many vertices for 16 bit indices")),this.addIndex("index",o,3),this.addAttribute("position",Float32Array,3),this.addAttribute("normal",Float32Array,3),this.addAttribute("uv",Float32Array,2);for(var n=this.attributes.index.array,s=this.attributes.position.array,l=(this.attributes.normal.array,this.attributes.uv.array),d=.5*this.width,h=.5*this.length,c=this.width/this.widthSegments,u=this.length/this.lengthSegments,f=0,p=0,m=0,v=0;v<this.lengthSegments+1;v++)for(var g=0;g<this.widthSegments+1;g++){var S=g*c-d,x=v*u-h,G=0;void 0!==i&&(G=i[m],m+=1),s[f]=S,s[f+1]=G,s[f+2]=x,f+=3;var M=g/this.widthSegments,y=v/this.lengthSegments;l[p]=M,l[p+1]=y,p+=2}for(var X=0,_=this.widthSegments+1,v=0;v<this.lengthSegments;v++)for(var g=0;g<this.widthSegments;g++){var w=g+_*v,D=g+_*(v+1),C=g+1+_*(v+1),A=g+1+_*v;n[X]=w,n[X+1]=D,n[X+2]=A,n[X+3]=D,n[X+4]=C,n[X+5]=A,X+=6}this.offsets.push({start:0,index:0,count:n.length}),this.computeVertexNormals()},THREE.HeightfieldGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry=function(e,t,a,r){THREE.Geometry.call(this),this.width=e,this.height=t,this.depth=a;var i=void 0!==r?r:{px:!0,py:!0,pz:!0,nx:!0,ny:!0,nz:!0},o=0;i.px&&(o+=2),i.nx&&(o+=2),i.py&&(o+=2),i.ny&&(o+=2),i.pz&&(o+=2),i.nz&&(o+=2),this.numPrimitives=o,this.numVertices=2*o,this.addIndex("index",Uint16Array,3),this.addAttribute("position",Float32Array,3),this.addAttribute("normal",Float32Array,3),this.addAttribute("uv",Float32Array,2);var n=this.attributes.index.array,s=this.attributes.position.array,l=this.attributes.normal.array,d=this.attributes.uv.array,h=this.width/2,c=this.height/2,u=this.depth/2,f=0,p=0,m=0,v=0,g=function(e,t,a,r,i,o,h,c,u,g,S,x,G,M,y){s[f]=r,s[f+1]=i,s[f+2]=o,s[f+3]=h,s[f+4]=c,s[f+5]=u,s[f+6]=g,s[f+7]=S,s[f+8]=x,s[f+9]=G,s[f+10]=M,s[f+11]=y,l[f]=e,l[f+1]=t,l[f+2]=a,l[f+3]=e,l[f+4]=t,l[f+5]=a,l[f+6]=e,l[f+7]=t,l[f+8]=a,l[f+9]=e,l[f+10]=t,l[f+11]=a,d[p]=0,d[p+1]=0,d[p+2]=1,d[p+3]=0,d[p+4]=1,d[p+5]=1,d[p+6]=0,d[p+7]=1,n[m]=v,n[m+1]=v+1,n[m+2]=v+3,n[m+3]=v+1,n[m+4]=v+2,n[m+5]=v+3,f+=12,p+=8,m+=6,v+=4};i.px&&g(1,0,0,h,-c,u,h,-c,-u,h,c,-u,h,c,u),i.nx&&g(-1,0,0,-h,-c,-u,-h,-c,u,-h,c,u,-h,c,-u),i.py&&g(0,1,0,-h,c,u,h,c,u,h,c,-u,-h,c,-u),i.ny&&g(0,-1,0,h,-c,u,-h,-c,u,-h,-c,-u,h,-c,-u),i.pz&&g(0,0,1,-h,-c,u,h,-c,u,h,c,u,-h,c,u),i.nz&&g(0,0,-1,h,-c,-u,-h,-c,-u,-h,c,-u,h,c,-u),this.offsets.push({start:0,index:0,count:n.length})},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,a,r,i,o,n){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(a)||6),r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,o=void 0!==o?o:0,n=void 0!==n?n:Math.PI,this.numPrimitives=this.heightSegments*this.widthSegments*2,this.numVertices=(this.heightSegments+1)*(this.widthSegments+1);var s=Uint16Array;this.numVertices>65536&&(THREE.elementIndexUintAvailable?s=Uint32Array:console.warn("THREE.SphereGeometry: too many vertices for 16 bit indices")),this.addIndex("index",s,3),this.addAttribute("position",Float32Array,3),this.addAttribute("normal",Float32Array,3),this.addAttribute("uv",Float32Array,2);var l,d,h=this.attributes.index.array,c=this.attributes.position.array,u=this.attributes.normal.array,f=this.attributes.uv.array,p=0,m=0,v=new THREE.Vector3;for(d=0;d<=this.heightSegments;d++)for(l=0;l<=this.widthSegments;l++){var g=l/this.widthSegments,S=d/this.heightSegments,x=-this.radius*Math.cos(r+g*i)*Math.sin(o+S*n),G=this.radius*Math.cos(o+S*n),M=this.radius*Math.sin(r+g*i)*Math.sin(o+S*n);c[p]=x,c[p+1]=G,c[p+2]=M,v.set(x,G,M).normalize(),u[p]=v.data[0],u[p+1]=v.data[1],u[p+2]=v.data[2],p+=3,f[m]=g,f[m+1]=1-S,m+=2}for(p=0,d=0;d<this.heightSegments;d++)for(l=0;l<this.widthSegments;l++){var y=d*(this.widthSegments+1)+(l+1),X=d*(this.widthSegments+1)+l,_=(d+1)*(this.widthSegments+1)+l,w=(d+1)*(this.widthSegments+1)+(l+1);h[p]=y,h[p+1]=X,h[p+2]=w,h[p+3]=X,h[p+4]=_,h[p+5]=w,p+=6}this.offsets.push({start:0,index:0,count:h.length}),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,a,r,i,o){THREE.Geometry.call(this),e=void 0!==e?e:20,t=void 0!==t?t:20,a=void 0!==a?a:100;var n=a/2,s=r||8,l=i||1,d=e>0&&!o,h=t>0&&!o;this.numPrimitives=l*s*2+s*(1*d+1*h),this.numVertices=(l+1)*(s+1)+(2*s+1)*(1*d+1*h),this.addIndex("index",Uint16Array,3),this.addAttribute("position",Float32Array,3),this.addAttribute("normal",Float32Array,3),this.addAttribute("uv",Float32Array,2);var c,u,f=this.attributes.index.array,p=this.attributes.position.array,m=this.attributes.normal.array,v=this.attributes.uv.array,g=0,S=0,x=0;for(u=0;l>=u;u++){var G=u/l,M=G*(t-e)+e;for(c=0;s>=c;c++){var y=c/s,X=M*Math.sin(y*Math.PI*2),_=-G*a+n,w=M*Math.cos(y*Math.PI*2);p[g]=X,p[g+1]=_,p[g+2]=w,g+=3,v[x]=y,v[x+1]=1-G,x+=2}}var D,C,A,T,P,L,b,E,F=(t-e)/a,R=new THREE.Vector3,U=new THREE.Vector3;for(S=0,c=0;s>c;c++)for(0!==e?(b=c,E=c+1):(b=s+1+c,E=s+1+(c+1)),b*=3,E*=3,D=p[b],C=p[b+1],A=p[b+2],T=p[E],P=p[E+1],L=p[E+2],R.set(D,C,A),U.set(T,P,L),R.setY(Math.sqrt(R.data[0]*R.data[0]+R.data[2]*R.data[2])*F).normalize(),U.setY(Math.sqrt(U.data[0]*U.data[0]+U.data[2]*U.data[2])*F).normalize(),u=0;l>u;u++){var I=u*(s+1)+c,N=(u+1)*(s+1)+c,B=(u+1)*(s+1)+(c+1),O=u*(s+1)+(c+1);f[S]=I,f[S+1]=N,f[S+2]=O,f[S+3]=N,f[S+4]=B,f[S+5]=O,S+=6,m[3*I]=R.data[0],m[3*I+1]=R.data[1],m[3*I+2]=R.data[2],m[3*N]=R.data[0],m[3*N+1]=R.data[1],m[3*N+2]=R.data[2],m[3*B]=U.data[0],m[3*B+1]=U.data[1],m[3*B+2]=U.data[2],m[3*O]=U.data[0],m[3*O+1]=U.data[1],m[3*O+2]=U.data[2]}if(!o&&e>0){var B=g/3;for(p[g]=0,p[g+1]=n,p[g+2]=0,m[g]=0,m[g+1]=1,m[g+2]=0,g+=3,v[x]=.5,v[x+1]=.5,x+=2,c=0;s>c;c++){var I=g/3,N=I+1;D=3*c,T=3*(c+1),p[g]=p[D],p[g+1]=p[D+1],p[g+2]=p[D+2],p[g+3]=p[T],p[g+4]=p[T+1],p[g+5]=p[T+2],m[g]=0,m[g+1]=1,m[g+2]=0,m[g+3]=0,m[g+4]=1,m[g+5]=0,g+=6,f[S]=I,f[S+1]=N,f[S+2]=B,S+=3;var V=c/s,k=(c+1)/s;v[x]=V,v[x+1]=1,v[x+2]=k,v[x+3]=1,x+=4}}if(!o&&t>0){var B=g/3;for(p[g]=0,p[g+1]=-n,p[g+2]=0,m[g]=0,m[g+1]=-1,m[g+2]=0,g+=3,v[x]=.5,v[x+1]=.5,x+=2,c=0;s>c;c++){var I=g/3,N=I+1;D=3*(c+1+u*(s+1)),T=3*(c+u*(s+1)),p[g]=p[D],p[g+1]=p[D+1],p[g+2]=p[D+2],p[g+3]=p[T],p[g+4]=p[T+1],p[g+5]=p[T+2],m[g]=0,m[g+1]=-1,m[g+2]=0,m[g+3]=0,m[g+4]=-1,m[g+5]=0,g+=6,f[S]=I,f[S+1]=N,f[S+2]=B,S+=3;var V=c/s,k=(c+1)/s;v[x]=V,v[x+1]=0,v[x+2]=k,v[x+3]=0,x+=4}}this.offsets.push({start:0,index:0,count:f.length})},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CapsuleGeometry=function(e,t,a){THREE.Geometry.call(this);var r=new THREE.CylinderGeometry(e,e,t,a,1,!0),i=new THREE.SphereGeometry(e,a,.5*a,0,2*Math.PI,0,.5*Math.PI),o=new THREE.Vector3(0,.5*t,0),n=new THREE.Vector3(0,.5*-t,0),s=new THREE.Matrix4;s.makeTranslation(o);var l=new THREE.Matrix4;l.makeRotationX(Math.PI);var d=new THREE.Matrix4;d.makeTranslation(n),d.multiplySelf(l),r.merge(i,s),r.merge(i,d),r.computeBoundingSphere(),this.attributes=r.attributes,this.attributesList=r.attributesList,this.virtualAttributes=r.virtualAttributes,this.virtualAttributesList=r.virtualAttributesList,this.numPrimitives=r.numPrimitives,this.numVertices=r.numVertices,this.offsets=r.offsets,this.boundingBox=r.boundingBox,this.boundingSphere=r.boundingSphere},THREE.CapsuleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RandomGeometry=function(e){THREE.Geometry.call(this),void 0===e&&(e={}),this.shape=void 0!==e.shape?e.shape:"sphere",this.customCallback=void 0!==e.callback?e.callback:function(){},this.radius=void 0!==e.radius?e.radius:1,this.width=void 0!==e.width?e.width:1,this.height=void 0!==e.height?e.height:1,this.depth=void 0!==e.depth?e.depth:1,this.useSeed=void 0!==e.useSeed?e.useSeed:!1,this.seed=void 0!==e.seed?e.seed:Math.random(),this.numPrimitives=0,this.numVertices=void 0!==e.vertices?e.vertices:1e3,this.addAttribute("position",Float32Array,3),this.refresh(this.seed)},THREE.RandomGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RandomGeometry.prototype.refresh=function(e){this.seed=e;var t=this.attributes.position.array,a=this.radius,r=this.width,i=this.height,o=this.depth;if(this.useSeed){Math.seedrandom(this.seed);var n=Math.srandom}else var n=Math.random;var s,l=function(e){var t=2*n()-1,r=n()*Math.PI*2,i=Math.sqrt(1-t*t);e.x=a*i*Math.cos(r),e.y=a*i*Math.sin(r),e.z=a*t},d=function(e){for(var t=0,r=.5,i=u;i;r*=.5,i>>=1)1&i&&(t+=r);t=2*t-1;var o=(u+.5)/f,n=2*o*Math.PI,s=Math.sqrt(1-t*t);e.x=a*s*Math.cos(n),e.y=a*s*Math.sin(n),e.z=a*t,u+=1},h=function(e){var t=(n()-.5)*a,r=(n()-.5)*a,i=(n()-.5)*a,o=n()*a,s=1/Math.sqrt(t*t+r*r+i*i);e.x=o*t*s,e.y=o*r*s,e.z=o*i*s},c=function(e){e.x=(n()-.5)*r,e.y=(n()-.5)*i,e.z=(n()-.5)*o};"sphereSurface"===this.shape?s=l:"sphereHammersley"===this.shape?s=d:"sphere"===this.shape?s=h:"box"===this.shape?s=c:"custom"===this.shape&&(s=this.customCallback);for(var u=0,f=this.numVertices,p=0,m={x:0,y:0,z:0},v=0,g=this.numVertices;g>v;v++)s(m),t[p]=m.x,t[p+1]=m.y,t[p+2]=m.z,p+=3;this.attributes.position.needsUpdate=!0},THREE.SpriteGeometry=function(e){THREE.Geometry.call(this),this.numSprites=e,this.numPrimitives=2*e,this.numVertices=4*e;var t=Uint16Array;this.numVertices>65536&&(t=THREE.elementIndexUintAvailable?Uint32Array:null),null===t&&console.error("THREE.SpriteGeometry: 32 bit indices not supported (geometry has",e,"sprites)"),this.addIndex("index",t,3),this.addAttribute("position",Float32Array,3),this.addAttribute("offset",Float32Array,3),this.addAttribute("color",Float32Array,3),this.addAttribute("uv",Float32Array,2),this.addAttribute("scale",Float32Array,2);for(var a=this.attributes.index.array,r=this.attributes.position.array,i=this.attributes.offset.array,o=this.attributes.color.array,n=this.attributes.uv.array,s=this.attributes.scale.array,l=0,d=0,h=0,c=0,u=function(){var e=0,t=0,u=0,f=1,p=1,m=1,v=1,g=1,S=0,x=0,G=1,M=0,y=1,X=1,_=0,w=1;r[l]=-.5,r[l+1]=-.5,r[l+2]=0,r[l+3]=.5,r[l+4]=-.5,r[l+5]=0,r[l+6]=.5,r[l+7]=.5,r[l+8]=0,r[l+9]=-.5,r[l+10]=.5,r[l+11]=0,i[l]=e,i[l+1]=t,i[l+2]=u,i[l+3]=e,i[l+4]=t,i[l+5]=u,i[l+6]=e,i[l+7]=t,i[l+8]=u,i[l+9]=e,i[l+10]=t,i[l+11]=u,o[l]=f,o[l+1]=p,o[l+2]=m,o[l+3]=f,o[l+4]=p,o[l+5]=m,o[l+6]=f,o[l+7]=p,o[l+8]=m,o[l+9]=f,o[l+10]=p,o[l+11]=m,s[c]=v,s[c+1]=g,s[c+2]=v,s[c+3]=g,s[c+4]=v,s[c+5]=g,s[c+6]=v,s[c+7]=g,n[c]=S,n[c+1]=x,n[c+2]=G,n[c+3]=M,n[c+4]=y,n[c+5]=X,n[c+6]=_,n[c+7]=w,a[h]=d,a[h+1]=d+1,a[h+2]=d+2,a[h+3]=d,a[h+4]=d+2,a[h+5]=d+3,l+=12,c+=8,h+=6,d+=4},f=0;f<this.numSprites;f++)u();this.offsets.push({start:0,index:0,count:a.length})},THREE.SpriteGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SpriteGeometry.prototype.setSpritePosition=function(e,t,a,r){var i=this.attributes.offset.array,o=12*e;i[o]=t,i[o+1]=a,i[o+2]=r,i[o+3]=t,i[o+4]=a,i[o+5]=r,i[o+6]=t,i[o+7]=a,i[o+8]=r,i[o+9]=t,i[o+10]=a,i[o+11]=r},THREE.SpriteGeometry.prototype.setSpriteColor=function(e,t,a,r){var i=this.attributes.color.array,o=12*e;i[o]=t,i[o+1]=a,i[o+2]=r,i[o+3]=t,i[o+4]=a,i[o+5]=r,i[o+6]=t,i[o+7]=a,i[o+8]=r,i[o+9]=t,i[o+10]=a,i[o+11]=r},THREE.SpriteGeometry.prototype.setSpriteScale=function(e,t,a){var r=this.attributes.scale.array,i=8*e;r[i]=t,r[i+1]=a,r[i+2]=t,r[i+3]=a,r[i+4]=t,r[i+5]=a,r[i+6]=t,r[i+7]=a},THREE.SpriteGeometry.prototype.setSpriteUV=function(e,t,a,r,i,o,n,s,l){var d=this.attributes.uv.array,h=8*e;d[h]=t,d[h+1]=a,d[h+2]=o,d[h+3]=n,d[h+4]=s,d[h+5]=l,d[h+6]=r,d[h+7]=i},THREE.SpriteGeometry.prototype.computeBoundingSphere=function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array,t=this.attributes.offset.array,a=this.attributes.scale.array;if(e){for(var r,i,o,n,s,l,d,h,c,u,f,p,m=0,v=0,g=0,S=e.length;S>v;v+=3,g+=2)s=e[v],l=e[v+1],d=e[v+2],h=t[v],c=t[v+1],u=t[v+2],f=a[g],p=a[g+1],i=s*f+h,o=l*p+c,n=d+u,r=i*i+o*o+n*n,r>m&&(m=r);this.boundingSphere.radius=Math.sqrt(m)}},THREE.SpriteGeometry.prototype.setSpriteTexture=function(e,t,a){var r=a.width,i=a.height,o=(a.base,t.width),n=t.height,s=t.x,l=t.y,d=s/r,h=(i-l)/i,c=(s+o)/r,u=(i-(l+n))/i,f=(s+o)/r,p=(i-l)/i,m=s/r,v=(i-(l+n))/i,g=o,S=n,x=this.attributes.scale.array,G=8*e,M=x[G],y=x[G+1];M=g*M,y=S*y,this.setSpriteUV(e,m,v,d,h,c,u,f,p),this.setSpriteScale(e,M,y)},THREE.SpriteGeometry.prototype.setText=function(e,t,a,r,i,o){void 0===i&&(i={});for(var n=void 0!==i.wordWrap?i.wordWrap:!0,s=void 0!==i.charWrap?i.charWrap:!1,l=void 0!==i.color?i.color:new THREE.Color(16777215),d=i.font,h=i.lineLength,c=i.lineHeight,u=i.fontSize,f=Math.min(e.length,this.numSprites),p=c*d.base*u,m={width:d.width,height:d.height,base:d.base},v=function(e){return" "===e||"	"===e||"\n"===e||"\r"===e||"\f"===e||""===e||null===e},g=function(t,a){for(var r=a,i=t,o=e[i],n=e[i+1];f>i&&!v(o);){var s=o.charCodeAt(0),l=d.chars[s],h=v(n)||void 0===n;if(void 0===l)r+=S;else{var c=l.xadvance*u,p=l.xoffset*u;if(h){var m=l.width*u;r+=p+m}else r+=p+c}i+=1,o=e[i],n=e[i+1]}return r},S=d.base,x=0,G=0,M=!0,y=null,X=1/0,_=1/0,w=-1/0,D=-1/0,C=0;f>C;C++){var A=e[C];if("\n"!==A){var T=A.charCodeAt(0),P=d.chars[T];if(void 0!==P){if(n&&(M=v(y)&&!v(A))){var L=g(C,x);L>h&&(G-=p,x=0)}var b=P.width*u,E=P.height*u,F=P.xadvance*u,R=P.xoffset*u,U=P.yoffset*u;if(s){var I=x+R+b;I>h&&(G-=p,x=0)}var N=t+.5*b+x+R,B=a+.5*E+G+U-E,O=r;this.setSpriteScale(C,u,u),this.setSpritePosition(C,N,B,O),this.setSpriteTexture(C,P,m),this.setSpriteColor(C,l.r,l.g,l.b);var V=x+R,k=V+b,z=G+U,H=z-E;X>V&&(X=V),k>w&&(w=k),_>z&&(_=z),H>D&&(D=H),x+=F,y=A}else x+=S*u,y=A,this.setSpriteScale(C,0,0)}else G-=p,x=0,y=A,this.setSpriteScale(C,0,0)}return void 0===o&&(o={width:0,height:0,minx:1/0,maxx:-1/0,miny:1/0,maxy:-1/0}),o.width=w-X,o.height=D-_,o.minx=X,o.miny=_,o.maxx=w,o.maxy=D,o},THREE.GeometryUtils={align:function(e,t){for(var a=new THREE.Box3,r=0,i=e.length;i>r;r++){var o=e[r];o.computeBoundingBox(),a.add(o.boundingBox)}var n=t(a),s=new THREE.Matrix4;s.makeTranslation(n);for(var r=0,i=e.length;i>r;r++){var o=e[r];o.applyMatrix(s)}},center:function(e){THREE.GeometryUtils.align(e,function(e){var t=e.min.clone();return t.addSelf(e.max),t.multiplyScalar(-.5),t})},floor:function(e){THREE.GeometryUtils.align(e,function(e){var t=new THREE.Vector3(0,-e.min.y,0);return t})},generateTerrainHeights:function(e,t,a,r){if(void 0!==r){Math.seedrandom(r);var i=Math.srandom}else var i=Math.random;for(var o=function(t,a,r){var i=a*s+t;e[i]=r},n=function(t,a){var r=a*s+t;return e[r]},s=t+1,l=t;l>=2;l/=2){var d=l/2;a/=2;for(var h=0;t>h;h+=l)for(var c=0;t>c;c+=l){var u=n(h,c)+n(h+l,c)+n(h,c+l)+n(h+l,c+l);u/=4,u+=2*a*i()-a,o(h+d,c+d,u)}for(var h=0;t>h;h+=d)for(var c=(h+d)%l;t>c;c+=l){var u=n((h-d+s)%s,c)+n((h+d)%s,c)+n(h,(c+d)%s)+n(h,(c-d+s)%s);u/=4,u+=2*a*i()-a,o(h,c,u),0===h&&o(t,c,u),0===c&&o(h,t,u)}}},getTerrainHeightsRange:function(e){for(var t=1/0,a=-1/0,r=0,i=e.length;i>r;r++){var o=e[r];t>o&&(t=o),o>a&&(a=o)}return{min:t,max:a}},offsetTerrainHeights:function(e,t){for(var a=0,r=e.length;r>a;a++)e[a]+=t},centerTerrainHeights:function(e){var t=THREE.GeometryUtils.getTerrainHeightsRange(e),a=(t.min+t.max)*-.5;THREE.GeometryUtils.offsetTerrainHeights(e,a)},floorTerrainHeights:function(e){var t=THREE.GeometryUtils.getTerrainHeightsRange(e),a=-t.min;THREE.GeometryUtils.offsetTerrainHeights(e,a)},blendTerrainHeights:function(e,t,a,r){for(var i=0,o=e.length;o>i;i++){var n=e[i],s=t[i],l=Math.floor(i/a),d=i%a,h=r(d,l);e[i]=h*n+(1-h)*s}},addParticleAttributes:function(e){e.addAttribute("velocitySpinStart",Float32Array,4),e.addAttribute("accelerationSpinSpeed",Float32Array,4),e.addAttribute("startSizeEndSizeStartTimeLifeTime",Float32Array,4)},setParticleAttributes:function(e,t){var a=e.attributes.velocitySpinStart.array,r=e.attributes.accelerationSpinSpeed.array,i=e.attributes.startSizeEndSizeStartTimeLifeTime.array,o={x:0,y:0,z:0},n={x:0,y:0,z:0},s={start:0,speed:0},l={start:0,end:0},d={start:0,life:0},h={velocity:o,acceleration:n,spin:s,size:l,time:d};(a.length!==r.length||a.length!==i.length||i.length!==r.length)&&console.error("THREE.GeometryUtils.setParticleAttributes: attributes lengths mismatch");for(var c=0,u=a.length;u>c;c+=4)t(h),a[c]=o.x,a[c+1]=o.y,a[c+2]=o.z,a[c+3]=s.start,r[c]=n.x,r[c+1]=n.y,r[c+2]=n.z,r[c+3]=s.speed,i[c]=l.start,i[c+1]=l.end,i[c+2]=d.start,i[c+3]=d.life}},THREE.Node=function(){this.id=THREE.NodeIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.transformChildren=!0,this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.scale=new THREE.Vector3(1,1,1),this.up=new THREE.Vector3(0,1,0),this.eulerOrder=THREE.Node.defaultEulerOrder,this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.enabled=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0},THREE.Node.prototype={constructor:THREE.Node,applyMatrix:function(e){this.matrix.multiply(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix);var t=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(t,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.addSelf(t.multiplyScalar(e))},translateX:function(e){this.translate(e,THREE.Vector3.xAxis.clone())},translateY:function(e){this.translate(e,THREE.Vector3.yAxis.clone())},translateZ:function(e){this.translate(e,THREE.Vector3.zAxis.clone())},localToWorld:function(e){return this.matrixWorld.multiplyVector3(e)},worldToLocal:function(e){return THREE.Node.__m1.getInverse(this.matrixWorld).multiplyVector3(e)},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(this.useQuaternion===!1?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)return void console.warn("THREE.Node.add: A node can't be added as a child of itself.");if(e instanceof THREE.Node){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);var t=this.getTopParent();void 0!==t&&t instanceof THREE.Scene&&t.__addNode(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);var a=this.getTopParent();void 0!==a&&a instanceof THREE.Scene&&a.__removeNode(e)}},traverse:function(e){e(this);for(var t=this.children,a=0,r=t.length;r>a;a++)t[a].traverse(e)},getChildByName:function(e,t){for(var a=0,r=this.children.length;r>a;a++){var i=this.children[a];if(i.name===e)return i;if(t===!0&&(i=i.getChildByName(e,t),void 0!==i))return i}return void 0},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,a=this.children.length;a>t;t++)this.children[t].getDescendants(e);return e},getTopParent:function(){for(var e=this;void 0!==e.parent;)e=e.parent;return e},updateMatrix:function(){this.useQuaternion===!1&&this.quaternion.setFromEuler(this.rotation,this.eulerOrder),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(this.parent&&this.parent.transformChildren?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,a=0,r=t.length;r>a;a++)t[a].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Node),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;t<this.children.length;t++){var a=this.children[t];e.add(a.clone())}return e}},THREE.Node.__m1=new THREE.Matrix4,THREE.Node.defaultEulerOrder=THREE.xyzOrder,THREE.NodeIdCount=0,THREE.Bone=function(e){THREE.Node.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Node.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiply(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var a=0,r=this.children.length;r>a;a++)this.children[a].update(this.skinMatrix,t)},THREE.Scene=function(){THREE.Node.call(this),this.fog=null,this.heightFog=null,this.matrixAutoUpdate=!1,this.transformChildren=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Node.prototype),THREE.Scene.prototype.__addNode=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var a=0;a<e.children.length;a++)this.__addNode(e.children[a])},THREE.Scene.prototype.__removeNode=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else if(!(e instanceof THREE.Camera)){var t=this.__objects.indexOf(e);if(-1!==t){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var a=this.__objectsAdded.indexOf(e);-1!==a&&this.__objectsAdded.splice(a,1)}}for(var r=0;r<e.children.length;r++)this.__removeNode(e.children[r])},THREE.Gyroscope=function(){THREE.Node.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Node.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,a=this.children.length;a>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Mesh=function(e,t){THREE.Node.call(this),this.geometries=e instanceof Array?e:e instanceof THREE.Geometry?[e]:[],this.materials=t instanceof Array?t:t instanceof THREE.Material?[t]:[];for(var a=0,r=this.geometries.length;r>a;a++){var i=this.geometries[a];null===i.boundingSphere&&i.computeBoundingSphere()}},THREE.Mesh.prototype=Object.create(THREE.Node.prototype),THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometries,this.materials)),THREE.Node.prototype.clone.call(this,e),e},THREE.MorphMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var a=this.geometries[0],r=a.morphTargets.length,i="__default",o=0,n=r-1,s=r/1;this.createAnimation(i,o,n,s),this.setAnimationWeight(i,1),this.morphTargetInfluences=new Float32Array(a.morphTargets.length)},THREE.MorphMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphMesh.prototype.createAnimation=function(e,t,a,r){var i={startFrame:t,endFrame:a,length:a-t+1,fps:r,duration:(a-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=i,this.animationsList.push(i)},THREE.MorphMesh.prototype.autoCreateAnimations=function(e){for(var t,a=/([a-z]+)(\d+)/,r={},i=this.geometries[0],o=0,n=i.morphTargets.length;n>o;o++){var s=i.morphTargets[o],l=s.name.match(a);if(l&&l.length>1){{var d=l[1];l[2]}r[d]||(r[d]={start:1/0,end:-1/0});var h=r[d];o<h.start&&(h.start=o),o>h.end&&(h.end=o),t||(t=d)}}for(var d in r){var h=r[d];this.createAnimation(d,h.start,h.end,e)}this.firstAnimation=t},THREE.MorphMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphMesh.prototype.setAnimationFPS=function(e,t){var a=this.animationsMap[e];a&&(a.fps=t,a.duration=(a.end-a.start)/a.fps)},THREE.MorphMesh.prototype.setAnimationDuration=function(e,t){var a=this.animationsMap[e];a&&(a.duration=t,a.fps=(a.end-a.start)/a.duration)},THREE.MorphMesh.prototype.setAnimationWeight=function(e,t){var a=this.animationsMap[e];a&&(a.weight=t)},THREE.MorphMesh.prototype.setAnimationTime=function(e,t){var a=this.animationsMap[e];a&&(a.time=t)},THREE.MorphMesh.prototype.getAnimationTime=function(e){var t=0,a=this.animationsMap[e];return a&&(t=a.time),t},THREE.MorphMesh.prototype.getAnimationDuration=function(e){var t=-1,a=this.animationsMap[e];return a&&(t=a.duration),t},THREE.MorphMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphMesh.prototype.update=function(e){for(var t=0,a=this.animationsList.length;a>t;t++){var r=this.animationsList[t];if(r.active){var i=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration));var o=r.startFrame+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1),n=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*n,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o);var s=r.time%i/i;r.directionBackwards&&(s=1-s),this.morphTargetInfluences[r.currentFrame]=s*n,this.morphTargetInfluences[r.lastFrame]=(1-s)*n}}},THREE.MD2Character=function(){function e(e,t){for(var r=[],i=0;i<t.length;i++)r[i]=THREE.ImageUtils.loadTexture(e+t[i],a),r[i].name=t[i];return r}function t(e,t){var a=(THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),new THREE.PhongMaterial({color:16777215,specular:1118481,shininess:50,map:t,morphTargets:!0,morphNormals:!0,metal:!0}));
a.wrapAround=!0;for(var r=[],o=0,n=e.length;n>o;o++)r[o]=a;var s=new THREE.MorphMesh(e,r);return s.rotation.setY(-Math.PI/2),s.autoCreateAnimations(i.animationFPS),s}function a(){i.loadCounter-=1,0===i.loadCounter&&i.onLoadComplete()}function r(e){return 1===e?1:-Math.pow(2,-10*e)+1}var i=this;this.scale=1,this.animationFPS=6,this.transitionFrames=15,this.maxSpeed=275,this.maxReverseSpeed=-275,this.frontAcceleration=600,this.backAcceleration=600,this.frontDecceleration=600,this.angularSpeed=2.5,this.root=new THREE.Node,this.meshBody=null,this.meshWeapon=null,this.controls=null,this.skinsBody=[],this.skinsWeapon=[],this.weapons=[],this.currentSkin=void 0,this.onLoadComplete=function(){},this.meshes=[],this.animations={},this.loadCounter=0,this.speed=0,this.bodyOrientation=0,this.walkSpeed=this.maxSpeed,this.crouchSpeed=.5*this.maxSpeed,this.activeAnimation=null,this.oldAnimation=null,this.enableShadows=function(e){for(var t=0;t<this.meshes.length;t++)this.meshes[t].castShadow=e,this.meshes[t].receiveShadow=e},this.setVisible=function(e){for(var t=0;t<this.meshes.length;t++)this.meshes[t].visible=e,this.meshes[t].visible=e},this.shareParts=function(e){this.animations=e.animations,this.walkSpeed=e.walkSpeed,this.crouchSpeed=e.crouchSpeed,this.skinsBody=e.skinsBody,this.skinsWeapon=e.skinsWeapon;var a=t(e.meshBody.geometries,this.skinsBody[0]);a.scale.set(this.scale,this.scale,this.scale),this.root.position.data[1]=e.root.position.data[1],this.root.add(a),this.meshBody=a,this.meshes.push(a);for(var r=0;r<e.weapons.length;r++){var i=t(e.weapons[r].geometries,this.skinsWeapon[r]);i.scale.set(this.scale,this.scale,this.scale),i.visible=!1,i.name=e.weapons[r].name,this.root.add(i),this.weapons[r]=i,this.meshWeapon=i,this.meshes.push(i)}},this.loadParts=function(r){this.animations=r.animations,this.walkSpeed=r.walkSpeed,this.crouchSpeed=r.crouchSpeed,this.loadCounter=2*r.weapons.length+r.skins.length+1;for(var o=[],n=0;n<r.weapons.length;n++)o[n]=r.weapons[n][1];this.skinsBody=e(r.baseUrl+"skins/",r.skins),this.skinsWeapon=e(r.baseUrl+"skins/",o);var s=new THREE.JSONLoader;s.load(r.baseUrl+r.body,function(e){for(var r=0,o=e.length;o>r;r++){var n=e[r];n.computeBoundingBox()}i.root.position.data[1]=-i.scale*n.boundingBox.min.data[1];var s=t(n,i.skinsBody[0]);s.scale.multiplyScalar(i.scale),i.root.add(s),i.meshBody=s,i.meshes.push(s),a()});for(var l=function(e,r){return function(o){var n=t(o,i.skinsWeapon[e]);n.scale.set(i.scale,i.scale,i.scale),n.visible=!1,n.name=r,i.root.add(n),i.weapons[e]=n,i.meshWeapon=n,i.meshes.push(n),a()}},n=0;n<r.weapons.length;n++)s.load(r.baseUrl+r.weapons[n][0],l(n,r.weapons[n][0]))},this.setPlaybackRate=function(e){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/e),this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/e)},this.setSkin=function(e){if(this.meshBody){for(var t=0,a=this.meshBody.materials.length;a>t;t++){var r=this.meshBody.materials[t];r.map=this.skinsBody[e]}this.currentSkin=e}},this.setWeapon=function(e){for(var t=0;t<this.weapons.length;t++)this.weapons[t].visible=!1;var a=this.weapons[e];a&&(a.visible=!0,this.meshWeapon=a,this.activeAnimation&&(a.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation))))},this.setAnimation=function(e){e!==this.activeAnimation&&e&&(this.meshBody&&(this.meshBody.setAnimationWeight(e,0),this.meshBody.playAnimation(e),this.oldAnimation=this.activeAnimation,this.activeAnimation=e,this.blendCounter=this.transitionFrames),this.meshWeapon&&(this.meshWeapon.setAnimationWeight(e,0),this.meshWeapon.playAnimation(e)))},this.update=function(e){this.controls&&this.updateMovementModel(e),this.animations&&(this.updateBehaviors(e),this.updateAnimations(e))},this.updateAnimations=function(e){var t=1;this.blendCounter>0&&(t=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1),this.meshBody&&(this.meshBody.update(e),this.meshBody.setAnimationWeight(this.activeAnimation,t),this.meshBody.setAnimationWeight(this.oldAnimation,1-t)),this.meshWeapon&&(this.meshWeapon.update(e),this.meshWeapon.setAnimationWeight(this.activeAnimation,t),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-t))},this.updateBehaviors=function(){var e,t,a=this.controls,r=this.animations;a.crouch?(e=r.crouchMove,t=r.crouchIdle):(e=r.move,t=r.idle),a.jump&&(e=r.jump,t=r.jump),a.attack&&(a.crouch?(e=r.crouchAttack,t=r.crouchAttack):(e=r.attack,t=r.attack)),(a.moveForward||a.moveBackward||a.moveLeft||a.moveRight)&&this.activeAnimation!==e&&this.setAnimation(e),Math.abs(this.speed)<.2*this.maxSpeed&&!(a.moveLeft||a.moveRight||a.moveForward||a.moveBackward)&&this.activeAnimation!==t&&this.setAnimation(t),a.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation))),a.moveBackward&&(this.meshBody&&(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)))},this.updateMovementModel=function(e){var t=this.controls;this.maxSpeed=t.crouch?this.crouchSpeed:this.walkSpeed,this.maxReverseSpeed=-this.maxSpeed,t.moveForward&&(this.speed=THREE.Math.clamp(this.speed+e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),t.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-e*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));var a=1;if(t.moveLeft&&(this.bodyOrientation+=e*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+a*e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),t.moveRight&&(this.bodyOrientation-=e*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+a*e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),!t.moveForward&&!t.moveBackward)if(this.speed>0){var i=r(this.speed/this.maxSpeed);this.speed=THREE.Math.clamp(this.speed-i*e*this.frontDecceleration,0,this.maxSpeed)}else{var i=r(this.speed/this.maxReverseSpeed);this.speed=THREE.Math.clamp(this.speed+i*e*this.backAcceleration,this.maxReverseSpeed,0)}var o=this.speed*e;this.root.position.data[0]+=Math.sin(this.bodyOrientation)*o,this.root.position.data[2]+=Math.cos(this.bodyOrientation)*o,this.root.rotation.data[1]=this.bodyOrientation}},THREE.SkinnedCharacter=function(e){function t(e){return 1===e?1:-Math.pow(2,-10*e)+1}this.config=e,this.transitionFrames=15,this.controls=null,this.root=new THREE.Node,this.meshes=[],this.animations={},this.speed=0,this.bodyOrientation=0,this.activeAnimation=null,this.oldAnimation=null,this.animations=e.animations,this.walkSpeed=void 0!==e.walkSpeed?e.walkSpeed:275,this.crouchSpeed=void 0!==e.crouchSpeed?e.crouchSpeed:137.5,this.angularSpeed=void 0!==e.angularSpeed?e.angularSpeed:2.5,this.frontAcceleration=void 0!==e.frontAcceleration?e.frontAcceleration:600,this.frontDecceleration=void 0!==e.frontDecceleration?e.frontDecceleration:600,this.backAcceleration=void 0!==e.backAcceleration?e.backAcceleration:600,this.maxSpeed=this.walkSpeed,this.maxReverseSpeed=-this.maxSpeed,this.addMesh=function(e){this.root.add(e),this.meshes.push(e)},this.enableShadows=function(e){for(var t=0;t<this.meshes.length;t++){var a=this.meshes[t];a.castShadow=e,a.receiveShadow=e}},this.setVisible=function(e){for(var t=0;t<this.meshes.length;t++){var a=this.meshes[t];a.visible=e,a.visible=e}},this.setAnimation=function(e){if(e!==this.activeAnimation&&e)for(var t=0,a=this.meshes.length;a>t;t++){var r=this.meshes[t];r.setAnimationWeight(e,0),r.playAnimation(e),this.oldAnimation=this.activeAnimation,this.activeAnimation=e,this.blendCounter=this.transitionFrames}},this.update=function(e){this.controls&&this.updateMovementModel(e),this.animations&&(this.updateBehaviors(e),this.updateAnimations(e))},this.updateAnimations=function(e){var t=1;this.blendCounter>0&&(t=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1);for(var a=0,r=this.meshes.length;r>a;a++){var i=this.meshes[a];i.setAnimationWeight(this.activeAnimation,t),i.setAnimationWeight(this.oldAnimation,1-t),i.update(e)}},this.updateBehaviors=function(){var e,t,a=this.controls,r=this.animations;if(a.crouch?(e=r.crouchMove,t=r.crouchIdle):(e=r.move,t=r.idle),a.jump&&(e=r.jump,t=r.jump),a.attack&&(a.crouch?(e=r.crouchAttack,t=r.crouchAttack):(e=r.attack,t=r.attack)),(a.moveForward||a.moveBackward||a.moveLeft||a.moveRight)&&this.activeAnimation!==e&&this.setAnimation(e),Math.abs(this.speed)<.2*this.maxSpeed&&!(a.moveLeft||a.moveRight||a.moveForward||a.moveBackward)&&this.activeAnimation!==t&&this.setAnimation(t),a.moveForward)for(var i=0,o=this.meshes.length;o>i;i++){var n=this.meshes[i];n.setAnimationDirectionForward(this.activeAnimation),n.setAnimationDirectionForward(this.oldAnimation)}if(a.moveBackward)for(var i=0,o=this.meshes.length;o>i;i++){var n=this.meshes[i];n.setAnimationDirectionBackward(this.activeAnimation),n.setAnimationDirectionBackward(this.oldAnimation)}},this.updateMovementModel=function(e){var a=this.controls;this.maxSpeed=a.crouch?this.crouchSpeed:this.walkSpeed,this.maxReverseSpeed=-this.maxSpeed,a.moveForward&&(this.speed=THREE.Math.clamp(this.speed+e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),a.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-e*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));var r=1;if(a.moveLeft&&(this.bodyOrientation+=e*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+r*e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),a.moveRight&&(this.bodyOrientation-=e*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+r*e*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)),!a.moveForward&&!a.moveBackward)if(this.speed>0){var i=t(this.speed/this.maxSpeed);this.speed=THREE.Math.clamp(this.speed-i*e*this.frontDecceleration,0,this.maxSpeed)}else{var i=t(this.speed/this.maxReverseSpeed);this.speed=THREE.Math.clamp(this.speed+i*e*this.backAcceleration,this.maxReverseSpeed,0)}var o=this.speed*e;this.root.position.data[0]+=Math.sin(this.bodyOrientation)*o,this.root.position.data[2]+=Math.cos(this.bodyOrientation)*o,this.root.rotation.data[1]=this.bodyOrientation}},THREE.SkinnedMesh=function(e,t,a){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==a?a:!0,this.animations={},this.animationsList=[],this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var r=this.geometries[0];if(r){var i=r.bones,o=r.animations;if(i){var n,s,l,d,h,c;for(n=0;n<i.length;n++)l=i[n],d=l.pos,h=l.rotq,c=l.scl,s=this.addBone(),s.name=l.name,s.position.set(d[0],d[1],d[2]),s.quaternion.set(h[0],h[1],h[2],h[3]),s.useQuaternion=!0,void 0!==c?s.scale.set(c[0],c[1],c[2]):s.scale.set(1,1,1);for(n=0;n<this.bones.length;n++)l=i[n],s=this.bones[n],-1===l.parent?this.add(s):this.bones[l.parent].add(s);var u=this.bones.length;if(this.useVertexTexture){var f;f=u>256?64:u>64?32:u>16?16:8,this.boneTextureWidth=f,this.boneTextureHeight=f,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*u);this.pose()}if(o)for(var p=0,m=o.length;m>p;p++){var v=o[p],g=new THREE.Animation(this,v);this.animations[v.name]=g,this.animationsList.push(g)}}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.playAnimation=function(e){void 0!==this.animations[e]&&this.animations[e].play()},THREE.SkinnedMesh.prototype.stopAnimation=function(e){void 0!==this.animations[e]&&this.animations[e].stop()},THREE.SkinnedMesh.prototype.pauseAnimation=function(e){void 0!==this.animations[e]&&this.animations[e].pause()},THREE.SkinnedMesh.prototype.setAnimationWeight=function(e,t){void 0!==this.animations[e]&&this.animations[e].setWeight(t)},THREE.SkinnedMesh.prototype.setAnimationDirectionForward=function(e){void 0!==this.animations[e]&&this.animations[e].setDirectionForward()},THREE.SkinnedMesh.prototype.setAnimationDirectionBackward=function(e){void 0!==this.animations[e]&&this.animations[e].setDirectionBackward()},THREE.SkinnedMesh.prototype.update=function(e){for(var t=this.bones,a=0,r=t.length;r>a;a++){var i=t[a];i.firstAnimationFlag=!0}for(var a=0,r=this.animationsList.length;r>a;a++){var o=this.animationsList[a];o.update(e)}},THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,a=this.children.length;a>t;t++){var r=this.children[t];r instanceof THREE.Bone?r.update(this.identityMatrix,!1):r.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var i=0,o=this.bones.length;o>i;i++){var n=new THREE.Matrix4;n.getInverse(this.bones[i].skinMatrix),this.boneInverses.push(n)}}for(var i=0,o=this.bones.length;o>i;i++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[i].skinMatrix,this.boneInverses[i]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*i);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e,t,a,r,i,o=0,n=this.geometries.length;n>o;o++)for(var s=this.geometries[o],l=s.attributes.skinWeight.array,d=0,h=l.length;h>d;d+=4)e=l[d],t=l[d+1],a=l[d+2],r=l[d+3],i=1/(Math.abs(e)+Math.abs(t)+Math.abs(a)+Math.abs(r)),1/0!==i?(l[d]*=i,l[d+1]*=i,l[d+2]*=i,l[d+3]*=i):l[d]=1},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometries,this.materials,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.TriangleStrip=function(e,t){THREE.Mesh.call(this,e,t)},THREE.TriangleStrip.prototype=Object.create(THREE.Mesh.prototype),THREE.TriangleStrip.prototype.clone=function(e){return void 0===e&&(e=new THREE.TriangleStrip(this.geometries,this.materials)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.Particles=function(e,t){THREE.Node.call(this),this.geometries=e instanceof Array?e:e instanceof THREE.Geometry?[e]:[],this.materials=t instanceof Array?t:t instanceof THREE.Material?[t]:[];for(var a=0,r=this.geometries.length;r>a;a++){var i=this.geometries[a];null===i.boundingSphere&&i.computeBoundingSphere()}this.sortParticles=!1,this.frustumCulled=!1},THREE.Particles.prototype=Object.create(THREE.Node.prototype),THREE.Particles.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particles(this.geometries,this.materials)),e.sortParticles=this.sortParticles,e.frustumCulled=this.frustumCulled,THREE.Node.prototype.clone.call(this,e),e},THREE.ImmediateRenderObject=function(){THREE.Node.call(this),this.boundingSphere=new THREE.Sphere,this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Node.prototype),THREE.MarchingCubes=function(e,t,a,r){THREE.ImmediateRenderObject.call(this),this.materials=[t],this.boundingSphere.radius=1,this.enableUvs=void 0!==a?a:!1,this.enableColors=void 0!==r?r:!1,this.init=function(e){this.resolution=e,this.isolation=80,this.size=e,this.size2=this.size*this.size,this.size3=this.size2*this.size,this.halfsize=this.size/2,this.delta=2/this.size,this.yd=this.size,this.zd=this.size2,this.field=new Float32Array(this.size3),this.normal_cache=new Float32Array(3*this.size3),this.vlist=new Float32Array(36),this.nlist=new Float32Array(36),this.firstDraw=!0,this.maxCount=4096,this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=new Float32Array(3*this.maxCount),this.normalArray=new Float32Array(3*this.maxCount),this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount)),this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))},this.lerp=function(e,t,a){return e+(t-e)*a},this.VIntX=function(e,t,a,r,i,o,n,s,l,d){var h=(i-l)/(d-l),c=this.normal_cache;t[r]=o+h*this.delta,t[r+1]=n,t[r+2]=s,a[r]=this.lerp(c[e],c[e+3],h),a[r+1]=this.lerp(c[e+1],c[e+4],h),a[r+2]=this.lerp(c[e+2],c[e+5],h)},this.VIntY=function(e,t,a,r,i,o,n,s,l,d){var h=(i-l)/(d-l),c=this.normal_cache;t[r]=o,t[r+1]=n+h*this.delta,t[r+2]=s;var u=e+3*this.yd;a[r]=this.lerp(c[e],c[u],h),a[r+1]=this.lerp(c[e+1],c[u+1],h),a[r+2]=this.lerp(c[e+2],c[u+2],h)},this.VIntZ=function(e,t,a,r,i,o,n,s,l,d){var h=(i-l)/(d-l),c=this.normal_cache;t[r]=o,t[r+1]=n,t[r+2]=s+h*this.delta;var u=e+3*this.zd;a[r]=this.lerp(c[e],c[u],h),a[r+1]=this.lerp(c[e+1],c[u+1],h),a[r+2]=this.lerp(c[e+2],c[u+2],h)},this.compNorm=function(e){var t=3*e;0===this.normal_cache[t]&&(this.normal_cache[t]=this.field[e-1]-this.field[e+1],this.normal_cache[t+1]=this.field[e-this.yd]-this.field[e+this.yd],this.normal_cache[t+2]=this.field[e-this.zd]-this.field[e+this.zd])},this.polygonize=function(e,t,a,r,i,o){var n=r+1,s=r+this.yd,l=r+this.zd,d=n+this.yd,h=n+this.zd,c=r+this.yd+this.zd,u=n+this.yd+this.zd,f=0,p=this.field[r],m=this.field[n],v=this.field[s],g=this.field[d],S=this.field[l],x=this.field[h],G=this.field[c],M=this.field[u];i>p&&(f|=1),i>m&&(f|=2),i>v&&(f|=8),i>g&&(f|=4),i>S&&(f|=16),i>x&&(f|=32),i>G&&(f|=128),i>M&&(f|=64);var y=THREE.edgeTable[f];if(0===y)return 0;var X=this.delta,_=e+X,w=t+X,D=a+X;1&y&&(this.compNorm(r),this.compNorm(n),this.VIntX(3*r,this.vlist,this.nlist,0,i,e,t,a,p,m)),2&y&&(this.compNorm(n),this.compNorm(d),this.VIntY(3*n,this.vlist,this.nlist,3,i,_,t,a,m,g)),4&y&&(this.compNorm(s),this.compNorm(d),this.VIntX(3*s,this.vlist,this.nlist,6,i,e,w,a,v,g)),8&y&&(this.compNorm(r),this.compNorm(s),this.VIntY(3*r,this.vlist,this.nlist,9,i,e,t,a,p,v)),16&y&&(this.compNorm(l),this.compNorm(h),this.VIntX(3*l,this.vlist,this.nlist,12,i,e,t,D,S,x)),32&y&&(this.compNorm(h),this.compNorm(u),this.VIntY(3*h,this.vlist,this.nlist,15,i,_,t,D,x,M)),64&y&&(this.compNorm(c),this.compNorm(u),this.VIntX(3*c,this.vlist,this.nlist,18,i,e,w,D,G,M)),128&y&&(this.compNorm(l),this.compNorm(c),this.VIntY(3*l,this.vlist,this.nlist,21,i,e,t,D,S,G)),256&y&&(this.compNorm(r),this.compNorm(l),this.VIntZ(3*r,this.vlist,this.nlist,24,i,e,t,a,p,S)),512&y&&(this.compNorm(n),this.compNorm(h),this.VIntZ(3*n,this.vlist,this.nlist,27,i,_,t,a,m,x)),1024&y&&(this.compNorm(d),this.compNorm(u),this.VIntZ(3*d,this.vlist,this.nlist,30,i,_,w,a,g,M)),2048&y&&(this.compNorm(s),this.compNorm(c),this.VIntZ(3*s,this.vlist,this.nlist,33,i,e,w,a,v,G)),f<<=4;for(var C,A,T,P=0,L=0;-1!=THREE.triTable[f+L];)C=f+L,A=C+1,T=C+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[C],3*THREE.triTable[A],3*THREE.triTable[T],o),L+=3,P++;return P},this.posnormtriv=function(e,t,a,r,i,o){var n=3*this.count;if(this.positionArray[n]=e[a],this.positionArray[n+1]=e[a+1],this.positionArray[n+2]=e[a+2],this.positionArray[n+3]=e[r],this.positionArray[n+4]=e[r+1],this.positionArray[n+5]=e[r+2],this.positionArray[n+6]=e[i],this.positionArray[n+7]=e[i+1],this.positionArray[n+8]=e[i+2],this.normalArray[n]=t[a],this.normalArray[n+1]=t[a+1],this.normalArray[n+2]=t[a+2],this.normalArray[n+3]=t[r],this.normalArray[n+4]=t[r+1],this.normalArray[n+5]=t[r+2],this.normalArray[n+6]=t[i],this.normalArray[n+7]=t[i+1],this.normalArray[n+8]=t[i+2],this.enableUvs){var s=2*this.count;this.uvArray[s]=e[a],this.uvArray[s+1]=e[a+2],this.uvArray[s+2]=e[r],this.uvArray[s+3]=e[r+2],this.uvArray[s+4]=e[i],this.uvArray[s+5]=e[i+2]}this.enableColors&&(this.colorArray[n]=e[a],this.colorArray[n+1]=e[a+1],this.colorArray[n+2]=e[a+2],this.colorArray[n+3]=e[r],this.colorArray[n+4]=e[r+1],this.colorArray[n+5]=e[r+2],this.colorArray[n+6]=e[i],this.colorArray[n+7]=e[i+1],this.colorArray[n+8]=e[i+2]),this.count+=3,this.count>=this.maxCount-3&&(this.hasPositions=!0,this.hasNormals=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),o(this))},this.begin=function(){this.count=0,this.hasPositions=!1,this.hasNormals=!1,this.hasUvs=!1,this.hasColors=!1},this.end=function(e){if(0!==this.count){for(var t=3*this.count;t<this.positionArray.length;t++)this.positionArray[t]=0;this.hasPositions=!0,this.hasNormals=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),e(this)}},this.addBall=function(e,t,a,r,i){var o=this.size*Math.sqrt(r/i),n=a*this.size,s=t*this.size,l=e*this.size,d=Math.floor(n-o);1>d&&(d=1);var h=Math.floor(n+o);h>this.size-1&&(h=this.size-1);var c=Math.floor(s-o);1>c&&(c=1);var u=Math.floor(s+o);u>this.size-1&&(u=this.size-1);var f=Math.floor(l-o);1>f&&(f=1);var p=Math.floor(l+o);p>this.size-1&&(p=this.size-1);var m,v,g,S,x,G,M,y,X,_,w;for(g=d;h>g;g++)for(x=this.size2*g,y=g/this.size-a,X=y*y,v=c;u>v;v++)for(S=x+this.size*v,M=v/this.size-t,_=M*M,m=f;p>m;m++)G=m/this.size-e,w=r/(1e-6+G*G+_+X)-i,w>0&&(this.field[S+m]+=w)},this.addPlaneX=function(e,t){var a,r,i,o,n,s,l,d=this.size,h=this.yd,c=this.zd,u=this.field,f=d*Math.sqrt(e/t);for(f>d&&(f=d),a=0;f>a;a++)if(s=a/d,o=s*s,n=e/(1e-4+o)-t,n>0)for(r=0;d>r;r++)for(l=a+r*h,i=0;d>i;i++)u[c*i+l]+=n},this.addPlaneY=function(e,t){var a,r,i,o,n,s,l,d,h=this.size,c=this.yd,u=this.zd,f=this.field,p=h*Math.sqrt(e/t);for(p>h&&(p=h),r=0;p>r;r++)if(s=r/h,o=s*s,n=e/(1e-4+o)-t,n>0)for(l=r*c,a=0;h>a;a++)for(d=l+a,i=0;h>i;i++)f[u*i+d]+=n},this.addPlaneZ=function(e,t){var a,r,i,o,n,s,l,d,h=this.size,c=this.yd,u=this.zd,f=this.field,p=h*Math.sqrt(e/t);for(p>h&&(p=h),i=0;p>i;i++)if(s=i/h,o=s*s,n=e/(1e-4+o)-t,n>0)for(l=u*i,r=0;h>r;r++)for(d=l+r*c,a=0;h>a;a++)f[d+a]+=n},this.reset=function(){var e;for(e=0;e<this.size3;e++)this.normal_cache[3*e]=0,this.field[e]=0},this.render=function(e){this.begin();var t,a,r,i,o,n,s,l,d,h=this.size-2;for(i=1;h>i;i++)for(d=this.size2*i,s=(i-this.halfsize)/this.halfsize,r=1;h>r;r++)for(l=d+this.size*r,n=(r-this.halfsize)/this.halfsize,a=1;h>a;a++)o=(a-this.halfsize)/this.halfsize,t=l+a,this.polygonize(o,n,s,t,this.isolation,e);this.end(e)},this.init(e)},THREE.MarchingCubes.prototype=Object.create(THREE.ImmediateRenderObject.prototype),THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]),THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]),THREE.Camera=function(){THREE.Node.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4
},THREE.Camera.prototype=Object.create(THREE.Node.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),this.rotationAutoUpdate===!0&&(this.useQuaternion===!1?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.Camera.prototype.clone=function(e){return void 0===e&&(e=new THREE.Camera),THREE.Node.prototype.clone.call(this,e),e.matrixWorldInverse.copy(this.matrixWorldInverse),e.projectionMatrix.copy(this.projectionMatrix),e.projectionMatrixInverse.copy(this.projectionMatrixInverse),e},THREE.OrthographicCamera=function(e,t,a,r,i,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=a,this.bottom=r,this.near=void 0!==i?i:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(e){return void 0===e&&(e=new THREE.OrthographicCamera),THREE.Camera.prototype.clone.call(this,e),e.left=this.left,e.right=this.right,e.top=this.top,e.bottom=this.bottom,e.near=this.near,e.far=this.far,e},THREE.PerspectiveCamera=function(e,t,a,r){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==a?a:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.jitter=function(e,t,a,r){this.projectionMatrix.makePerspectiveOffset(this.fov,this.aspect,this.near,this.far,e,t,a,r)},THREE.PerspectiveCamera.prototype.clone=function(e){return void 0===e&&(e=new THREE.PerspectiveCamera),THREE.Camera.prototype.clone.call(this,e),e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e},THREE.CubeCamera=function(e,t){THREE.Node.call(this);var a=90,r=1,i=new THREE.PerspectiveCamera(a,r,e,t);i.up.set(0,-1,0),i.lookAt(new THREE.Vector3(1,0,0)),this.add(i);var o=new THREE.PerspectiveCamera(a,r,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var n=new THREE.PerspectiveCamera(a,r,e,t);n.up.set(0,0,1),n.lookAt(new THREE.Vector3(0,1,0)),this.add(n);var s=new THREE.PerspectiveCamera(a,r,e,t);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var l=new THREE.PerspectiveCamera(a,r,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,1)),this.add(l);var d=new THREE.PerspectiveCamera(a,r,e,t);d.up.set(0,-1,0),d.lookAt(new THREE.Vector3(0,0,-1)),this.add(d),this.px=i,this.nx=o,this.py=n,this.ny=s,this.pz=l,this.nz=d},THREE.CubeCamera.prototype=Object.create(THREE.Node.prototype),THREE.Light=function(e){THREE.Node.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Node.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1,this.texture=null,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=90,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraOrtho=!1,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.PolyLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,0,-1),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.twoSided=0,this.texture=null,this.textureBias=0,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=90,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraOrtho=!1,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512},THREE.PolyLight.ltcMatData=[2e-4,-0,1,-0,504e-6,-0,1,-0,.002016,-0,1,-0,.004535,-0,1,-0,.008063,-0,1,-0,.012598,-0,1,-0,.018141,-0,1,-0,.024692,-0,1,-0,.032252,-0,1,-0,.040821,-0,1,-0,.0504,-0,1,-0,.060989,-0,1,-0,.072591,-0,1,-0,.085206,-0,1,-0,.098836,-0,1,-0,.113483,-0,1,-0,.129147,-0,1,-0,.145828,-0,1,-0,.163499,-0,1,-0,.181972,-0,1,-0,.199498,-0,1,-0,.220031,-0,1,-0,.241588,-0,1,-0,.26412,-0,1,-0,.287521,-0,1,-0,.311478,-0,1,-0,.335127,-0,1,-0,.359811,-0,1,-0,.386446,-0,1,-0,.413161,-0,1,-0,.439142,-0,1,-0,.467039,-0,1,-0,.49517,-0,1,-0,.522324,-0,1,-0,.551482,-0,1,-0,.579621,-0,1,-0,.608255,-0,1,-0,.636515,-0,1,-0,.664835,-0,1,-0,.692549,-0,1,-0,.720375,-0,1,-0,.747238,-0,1,-0,.773956,-0,1,-0,.799879,-0,1,-0,.824889,-0,1,-0,.849357,-0,1,-0,.873016,-0,1,-0,.89567,-0,1,-0,.917194,-0,1,-0,.937978,-0,1,-0,.957872,-0,1,-0,.976736,-0,1,-0,.994433,-0,1,-0,1.011206,-0,1,-0,1.02682,-0,1,-0,1.04172,-0,1,-0,1.055657,-0,1,-0,1.068642,-0,1,-0,1.080646,-0,1,-0,1.091637,-0,1,-0,1.101837,-0,1,-0,1.111292,-0,1,-0,1.120025,-0,1,-0,1.127918,-0,1,-0,2e-4,-5e-6,1.000623,.024938,504e-6,-13e-6,1.000643,.024938,.002016,-5e-5,1.000618,.024938,.004535,-113e-6,1.000621,.024938,.008063,-201e-6,1.000746,.024938,.012596,-314e-6,1.000463,.024937,.01814,-452e-6,1.000511,.024939,.024693,-616e-6,1.000541,.024938,.032253,-804e-6,1.000684,.024938,.040815,-.001018,1.000524,.02494,.050399,-.001257,1.000582,.024937,.060989,-.001521,1.000655,.024937,.072591,-.00181,1.000608,.024938,.085204,-.002125,1.000622,.024939,.098835,-.002465,1.000632,.024937,.113483,-.00283,1.00064,.024939,.129143,-.00322,1.000568,.024938,.14583,-.003633,1.000635,.024938,.163497,-.004062,1.000626,.024938,.181956,-.004424,1.000612,.024924,.199791,-.004593,1.000627,.02489,.220029,-.00548,1.000594,.024935,.241586,-.00601,1.000616,.024933,.264115,-.00655,1.000607,.024927,.287514,-.007072,1.000595,.024909,.311455,-.007472,1.000616,.024872,.335083,-.007491,1.000589,.024755,.359805,-.00881,1.000601,.024877,.386438,-.009282,1.00064,.024824,.413131,-.009534,1.000599,.024708,.439249,-.009701,1.000497,.024573,.466997,-.010878,1.000467,.024652,.495138,-.010959,1.000539,.024455,.522654,-.011386,1.000518,.024318,.551415,-.012022,1.000533,.024216,.57961,-.011805,1.000495,.023867,.608185,-.012773,1.000474,.023834,.636492,-.012377,1.000488,.023327,.664826,-.013172,1.000576,.023205,.692674,-.012847,1.000505,.022708,.720341,-.013141,1.000424,.022349,.747373,-.013227,1.000449,.021871,.77398,-.012739,1.000478,.021171,.799839,-.012999,1.000396,.020606,.825113,-.012727,1.000425,.020006,.849579,-.01217,1.000469,.019089,.873046,-.011855,1.000411,.018291,.895777,-.011711,1.000426,.017534,.917518,-.011107,1.000373,.016542,.938264,-.010439,1.000322,.015512,.958032,-.009807,1.000324,.014491,.976838,-.009268,1.000341,.013468,.994631,-.008662,1.000318,.012376,1.011434,-.007923,1.000289,.011187,1.027169,-.007132,1.000216,.010078,1.041929,-.006332,1.000096,.008924,1.055767,-.005554,1.000156,.00777,1.068595,-.004811,1.000084,.006611,1.080612,-.00395,1.000047,.005485,1.091785,-.003174,1.000109,.004352,1.101998,-.002363,1.000029,.00318,1.111423,-.001552,.999985,.002091,1.120007,-786e-6,.999947,991e-6,1.127918,4e-6,1,-4e-6,2e-4,-1e-5,1.002495,.049907,504e-6,-25e-6,1.002476,.049908,.002016,-101e-6,1.0025,.049908,.004535,-226e-6,1.002487,.049908,.008062,-402e-6,1.002364,.049908,.012598,-629e-6,1.002412,.049908,.01814,-905e-6,1.002379,.049908,.024691,-.001232,1.00249,.049907,.032251,-.00161,1.002398,.049908,.040821,-.002037,1.002392,.049908,.050398,-.002515,1.002431,.049907,.060989,-.003044,1.002475,.049908,.072592,-.003623,1.002546,.049907,.085204,-.004252,1.002467,.049907,.098832,-.004932,1.00245,.049908,.113481,-.005663,1.002482,.049907,.129145,-.006443,1.002443,.049907,.145825,-.007271,1.002495,.049906,.163491,-.008128,1.002475,.049903,.181911,-.008826,1.002459,.049879,.200065,-.009285,1.002443,.049824,.220025,-.010966,1.00245,.049897,.241581,-.012025,1.002463,.049893,.264099,-.013105,1.002395,.049881,.287493,-.014145,1.00239,.049855,.311399,-.014925,1.002414,.049769,.335096,-.015239,1.002363,.049591,.359815,-.017559,1.002415,.049777,.386365,-.018554,1.002354,.049675,.413017,-.019043,1.002297,.049444,.439519,-.019815,1.002284,.049253,.466938,-.021741,1.002307,.049327,.494999,-.021887,1.002181,.048922,.522922,-.022844,1.002107,.048677,.55127,-.024014,1.002101,.048478,.579771,-.024156,1.00206,.047904,.608156,-.025317,1.002077,.047594,.636662,-.025321,1.001975,.046876,.664846,-.026018,1.001992,.046354,.692877,-.026041,1.001846,.045504,.720316,-.026252,1.001846,.044655,.747658,-.026159,1.001931,.04367,.774252,-.026086,1.001845,.042515,.800179,-.025653,1.001794,.041211,.825525,-.02517,1.001787,.039823,.850013,-.024788,1.001806,.038409,.873593,-.023992,1.001688,.036767,.896343,-.022985,1.001666,.0349,.918062,-.022005,1.001548,.03301,.938928,-.02111,1.001503,.031143,.958667,-.019893,1.001341,.029059,.977457,-.018546,1.001194,.026888,.995243,-.017152,1.001095,.024713,1.012023,-.01575,1.0011,.022496,1.027614,-.014289,1.000851,.020153,1.042389,-.012688,1.000724,.017839,1.056161,-.011118,1.000572,.015529,1.068968,-.00954,1.000407,.01324,1.080866,-.007963,1.000258,.01094,1.091944,-.006416,1.000254,.008716,1.102104,-.004771,1.000175,.006434,1.111571,-.003056,1.000148,.004169,1.120084,-.001458,1.00005,.002033,1.127981,21e-6,.999987,-27e-6,2e-4,-15e-6,1.00562,.07494,504e-6,-38e-6,1.00565,.074939,.002016,-151e-6,1.005613,.074939,.004535,-34e-5,1.005618,.074939,.008062,-604e-6,1.005614,.074939,.012597,-944e-6,1.005616,.07494,.018141,-.001359,1.005558,.074939,.024695,-.001851,1.005495,.07494,.032253,-.002417,1.005616,.074939,.040822,-.003059,1.005591,.07494,.050399,-.003777,1.005596,.07494,.060989,-.00457,1.005599,.074939,.072591,-.00544,1.005616,.07494,.085203,-.006385,1.005616,.074939,.098833,-.007406,1.005595,.074938,.113481,-.008502,1.005605,.074938,.129147,-.009674,1.005605,.074937,.145817,-.010916,1.005513,.074937,.163485,-.012199,1.005579,.074928,.181824,-.013172,1.005552,.074885,.200274,-.0141,1.005524,.074825,.220017,-.016464,1.005529,.074928,.241568,-.018052,1.00549,.074914,.264084,-.019671,1.005457,.074898,.28745,-.021217,1.005431,.07486,.311281,-.022341,1.005395,.074717,.335228,-.023296,1.00532,.074526,.360047,-.025965,1.005302,.074649,.386273,-.027808,1.005285,.074575,.412855,-.028504,1.005167,.074237,.439705,-.030007,1.005129,.074013,.466975,-.032263,1.005082,.073967,.494874,-.032931,1.00496,.073475,.523066,-.034348,1.004834,.073084,.551198,-.035739,1.004806,.072657,.579889,-.036575,1.004687,.072029,.608282,-.037434,1.004605,.071309,.636812,-.038323,1.004589,.070507,.66501,-.038676,1.004403,.069424,.693063,-.039237,1.00434,.06837,.72075,-.039332,1.004224,.066988,.747911,-.039179,1.004117,.065447,.774576,-.03911,1.004035,.063838,.800737,-.038542,1.004027,.061923,.825966,-.037966,1.003825,.059859,.850534,-.036943,1.003786,.057529,.874289,-.035853,1.00356,.055081,.897152,-.03473,1.003549,.052476,.919029,-.033242,1.003454,.049647,.939851,-.031508,1.003215,.04667,.959599,-.029695,1.002916,.043588,.978293,-.027845,1.00272,.040401,.996085,-.025775,1.002445,.03706,1.012768,-.023607,1.002133,.033726,1.028404,-.021374,1.001822,.030217,1.04315,-.019108,1.001602,.02682,1.05676,-.016823,1.001274,.023372,1.069471,-.014378,1.000964,.019891,1.081283,-.011884,1.000684,.016405,1.092238,-.009398,1.000514,.01295,1.102384,-.00703,1.000319,.009579,1.111737,-.004751,1.000225,.006384,1.120274,-.002404,1.000046,.003192,1.128182,31e-6,1.00002,33e-6,2e-4,-2e-5,1.010006,.100065,504e-6,-5e-5,1.009927,.100065,.002016,-202e-6,1.010026,.100064,.004535,-454e-6,1.010018,.100065,.008062,-807e-6,1.009891,.100064,.012599,-.001261,1.010175,.100064,.018141,-.001815,1.010067,.100065,.024692,-.002471,1.010014,.100066,.032251,-.003227,1.00995,.100065,.040818,-.004084,1.009963,.100067,.050401,-.005043,1.010032,.100064,.060988,-.006102,1.009979,.100064,.072588,-.007263,1.009984,.100063,.085205,-.008525,1.010023,.100063,.098832,-.009888,1.00996,.100062,.113479,-.011352,1.009974,.100063,.129142,-.012916,1.009945,.100062,.145817,-.014573,1.009924,.100058,.163468,-.016276,1.009912,.10005,.181674,-.017411,1.009859,.099975,.200435,-.019002,1.009842,.099932,.220005,-.021978,1.00982,.100043,.24155,-.024096,1.009778,.100031,.264058,-.02625,1.009765,.100002,.287399,-.028286,1.009724,.099939,.311134,-.029698,1.009596,.099748,.33535,-.031442,1.009508,.099582,.360295,-.034401,1.009475,.099613,.386112,-.03703,1.009329,.099558,.412733,-.038163,1.00925,.099137,.439833,-.04025,1.009125,.098866,.467099,-.042583,1.009011,.098626,.494828,-.044299,1.008803,.098149,.523217,-.045876,1.008712,.0976,.551338,-.04744,1.008509,.096929,.579917,-.048995,1.008371,.096178,.608454,-.049901,1.008212,.095145,.636785,-.051224,1.007963,.094151,.66522,-.051675,1.007741,.092728,.693194,-.052278,1.007616,.091195,.721008,-.052406,1.007327,.089384,.748196,-.052529,1.007219,.087461,.774975,-.05195,1.006851,.085133,.801129,-.051456,1.006732,.082628,.826668,-.050569,1.006612,.079817,.851291,-.049328,1.006374,.07671,.875056,-.047988,1.006183,.073481,.897872,-.046149,1.005742,.069943,.919803,-.044144,1.005514,.066151,.940701,-.042095,1.005153,.062247,.96058,-.03973,1.004843,.058158,.979427,-.037104,1.004535,.05385,.997157,-.034369,1.004023,.049403,1.013777,-.031555,1.003622,.044944,1.029452,-.028571,1.003212,.040414,1.044029,-.025416,1.002698,.035723,1.057586,-.022217,1.002202,.031072,1.070148,-.019037,1.001703,.026429,1.081875,-.015936,1.001322,.021896,1.092789,-.012734,1.001053,.017288,1.102704,-.009454,1.000604,.012841,1.112011,-.006199,1.000387,.008446,1.12059,-.00301,1.000166,.004122,1.128283,27e-6,.999956,-38e-6,2e-4,-25e-6,1.015664,.125315,504e-6,-63e-6,1.015664,.125316,.002016,-253e-6,1.015727,.125315,.004535,-568e-6,1.015695,.125314,.008063,-.00101,1.015823,.125316,.012599,-.001579,1.015867,.125315,.018141,-.002273,1.015758,.125316,.024691,-.003094,1.015662,.125316,.032252,-.004042,1.015674,.125316,.04082,-.005115,1.015678,.125316,.0504,-.006316,1.015684,.125315,.060989,-.007642,1.015685,.125315,.07259,-.009096,1.015703,.125314,.085203,-.010676,1.015654,.125314,.098833,-.012383,1.01567,.125315,.113477,-.014215,1.015635,.125312,.129138,-.016173,1.015599,.125311,.145815,-.018246,1.01561,.125306,.16345,-.02036,1.015564,.125294,.181595,-.021807,1.01546,.125204,.200563,-.023971,1.01544,.125165,.220186,-.02728,1.015412,.12525,.241528,-.030164,1.015342,.125267,.26402,-.032847,1.015269,.125233,.287311,-.035345,1.015232,.125138,.310993,-.037108,1.015063,.124903,.335467,-.039653,1.01497,.124749,.360497,-.042914,1.014819,.124702,.385986,-.046142,1.014685,.124623,.412703,-.04805,1.014543,.124193,.439929,-.050527,1.014315,.123833,.467163,-.05288,1.014087,.123375,.494824,-.055672,1.013898,.122982,.523222,-.057388,1.013647,.122166,.551557,-.059328,1.013403,.121343,.579884,-.061315,1.013059,.12043,.608619,-.062531,1.012745,.11914,.637014,-.063778,1.012425,.117721,.665425,-.064734,1.012067,.116069,.69358,-.065315,1.011712,.114146,.721194,-.065535,1.0112,.111846,.748586,-.065501,1.010896,.109309,.775437,-.065091,1.010576,.106504,.801554,-.064332,1.010136,.103308,.827079,-.063078,1.009629,.099695,.851693,-.061728,1.009233,.095946,.875586,-.059853,1.008726,.091802,.898589,-.057727,1.008412,.087339,.920421,-.055377,1.007767,.082687,.941533,-.052571,1.007529,.077716,.961426,-.049544,1.006929,.072574,.980287,-.0464,1.006393,.067217,.99808,-.042966,1.005872,.061757,1.01494,-.039321,1.005346,.056072,1.030455,-.035585,1.004609,.05041,1.045078,-.031823,1.004151,.044622,1.058555,-.027947,1.003421,.038893,1.071009,-.023891,1.002704,.032977,1.082594,-.019822,1.002023,.02729,1.093265,-.015765,1.001403,.021543,1.103132,-.01179,1.000944,.016072,1.112348,-.007784,1.00055,.010511,1.120845,-.003849,1.000224,.005174,1.128573,57e-6,.999975,-39e-6,2e-4,-3e-5,1.022609,.150725,504e-6,-76e-6,1.022728,.150725,.002016,-304e-6,1.022728,.150725,.004535,-684e-6,1.022733,.150725,.008062,-.001215,1.022715,.150725,.012598,-.001899,1.02272,.150725,.018141,-.002734,1.022659,.150725,.024694,-.003722,1.022801,.150724,.032254,-.004861,1.022779,.150726,.040815,-.006152,1.022693,.150724,.0504,-.007596,1.022716,.150725,.06099,-.009192,1.022733,.150725,.072587,-.010939,1.02263,.150723,.085203,-.012839,1.022676,.150725,.098828,-.014891,1.022659,.150725,.113473,-.017095,1.022589,.15072,.129137,-.019449,1.022572,.150716,.145803,-.021938,1.022508,.150712,.163417,-.024443,1.022471,.150691,.18158,-.026329,1.022406,.1506,.200667,-.028997,1.022336,.150553,.220429,-.032584,1.022296,.15061,.241497,-.03626,1.022202,.150658,.263975,-.039465,1.022119,.150619,.28721,-.042385,1.021988,.15049,.310935,-.044758,1.021771,.150241,.335556,-.047922,1.021658,.150076,.360667,-.051493,1.021437,.149931,.386028,-.054931,1.021228,.149754,.412665,-.058007,1.021023,.1494,.439951,-.060813,1.020723,.148913,.467262,-.063461,1.020332,.148319,.494972,-.066738,1.020097,.147798,.523153,-.068976,1.01963,.146903,.5517,-.071268,1.019245,.145863,.580046,-.073439,1.018797,.144695,.608649,-.075193,1.018201,.143237,.637239,-.076536,1.017746,.141463,.665388,-.077771,1.017111,.139462,.693755,-.078344,1.016609,.137082,.721345,-.078817,1.015863,.134403,.748879,-.078512,1.01539,.131252,.77556,-.078128,1.014652,.127866,.801897,-.077094,1.013877,.123928,.827193,-.075863,1.013021,.119733,.85199,-.073973,1.012395,.115055,.875823,-.071765,1.011595,.110098,.898655,-.069241,1.010862,.104722,.920915,-.066232,1.010185,.098991,.941969,-.06298,1.009588,.093044,.961882,-.059507,1.008777,.086925,.980952,-.055606,1.008252,.08052,.998955,-.051503,1.007633,.07389,1.015756,-.047292,1.006908,.067302,1.031571,-.042804,1.006338,.060412,1.046095,-.038132,1.005512,.053497,1.059542,-.03338,1.004592,.046569,1.072006,-.028613,1.003731,.039679,1.083348,-.023811,1.002871,.032772,1.093969,-.01893,1.002068,.025894,1.103697,-.014098,1.001284,.019178,1.112813,-.009339,1.00082,.012652,1.121193,-.004661,1.000324,.006226,1.12893,52e-6,.999988,-8e-6,2e-4,-35e-6,1.030857,.176327,504e-6,-89e-6,1.031137,.176326,.002016,-355e-6,1.031049,.176325,.004535,-8e-4,1.031105,.176326,.008062,-.001422,1.030973,.176326,.012598,-.002221,1.031168,.176326,.018141,-.003199,1.031093,.176326,.024695,-.004354,1.031297,.176326,.032253,-.005687,1.031091,.176327,.040821,-.007197,1.031012,.176326,.050399,-.008886,1.031068,.176325,.060987,-.010752,1.030967,.176323,.072588,-.012797,1.031028,.176324,.0852,-.015019,1.030985,.176322,.098829,-.017419,1.030983,.17632,.113474,-.019997,1.030953,.176317,.129133,-.022748,1.030891,.176312,.1458,-.025655,1.030825,.176306,.163372,-.02851,1.030781,.176279,.181578,-.030914,1.030683,.176187,.200761,-.034076,1.030574,.176139,.220645,-.037985,1.030476,.17616,.241473,-.042391,1.030384,.176238,.263922,-.046105,1.030241,.176175,.287074,-.04939,1.030049,.176013,.310915,-.052511,1.029839,.175776,.335604,-.056236,1.029608,.175578,.360775,-.060118,1.029355,.175359,.386196,-.063907,1.029052,.175083,.412599,-.067997,1.028766,.174791,.439916,-.071088,1.028326,.174174,.467444,-.074247,1.02789,.173487,.495132,-.077728,1.027374,.172774,.523117,-.080822,1.026763,.171824,.551783,-.083228,1.026205,.170554,.580234,-.085682,1.025614,.16909,.608568,-.08786,1.024668,.167468,.637357,-.089346,1.023939,.165283,.665507,-.090704,1.022946,.162966,.693704,-.091388,1.02201,.160131,.721396,-.091783,1.021085,.156957,.748676,-.091688,1.019894,.153292,.77537,-.090992,1.018608,.149158,.801547,-.089881,1.017646,.144551,.827013,-.088267,1.016355,.139614,.851708,-.086132,1.015446,.134026,.875652,-.083707,1.014321,.128101,.898703,-.080619,1.013454,.121841,.920904,-.07728,1.012634,.115379,.942077,-.073484,1.01177,.108355,.962245,-.069252,1.010894,.101153,.981385,-.064807,1.010114,.093666,.999379,-.06008,1.009294,.086007,1.016494,-.055007,1.008591,.078194,1.032357,-.04976,1.007821,.070328,1.047061,-.044468,1.006871,.062358,1.060675,-.03896,1.006062,.054279,1.073032,-.033343,1.004911,.046158,1.084293,-.027699,1.003791,.038111,1.094724,-.02213,1.002744,.030239,1.104302,-.016508,1.001815,.022397,1.11329,-.010846,1.001083,.014747,1.121649,-.005294,1.00049,.007234,1.12923,71e-6,.999975,-53e-6,2e-4,-4e-5,1.040431,.202155,504e-6,-102e-6,1.040912,.202154,.002016,-407e-6,1.041328,.202152,.004535,-917e-6,1.040877,.202154,.008063,-.00163,1.040867,.202153,.012598,-.002547,1.04087,.202153,.01814,-.003667,1.040808,.202153,.024692,-.004991,1.040861,.202153,.032252,-.006519,1.040861,.202153,.040822,-.008252,1.040864,.202153,.050397,-.010187,1.040717,.202151,.060988,-.012327,1.040791,.202152,.072582,-.014669,1.04064,.202149,.085198,-.017217,1.040716,.202147,.098827,-.019968,1.040748,.202141,.113467,-.022921,1.040632,.202142,.129129,-.026074,1.040606,.202137,.145793,-.029399,1.040566,.202127,.163294,-.032524,1.040459,.202078,.181589,-.035552,1.040315,.201996,.200844,-.039208,1.040221,.201948,.220835,-.043489,1.040047,.201945,.241471,-.048523,1.039921,.202031,.263854,-.052764,1.039756,.201957,.286935,-.056387,1.039497,.201743,.310902,-.060338,1.039252,.201531,.335642,-.064594,1.038954,.201286,.360859,-.068772,1.038582,.200983,.386419,-.073086,1.03816,.200651,.412588,-.077887,1.037724,.200343,.439836,-.081391,1.037182,.199618,.467538,-.085121,1.036602,.198839,.495286,-.088718,1.035893,.197895,.523231,-.092514,1.035121,.196887,.55173,-.095238,1.034127,.19539,.580302,-.097949,1.033131,.193668,.608559,-.100418,1.031962,.191773,.637224,-.102129,1.030838,.189319,.665597,-.103578,1.029511,.186529,.693535,-.104652,1.028263,.183303,.721325,-.104766,1.026611,.179497,.748384,-.104717,1.025128,.175283,.775058,-.103846,1.023385,.170493,.801387,-.102728,1.022236,.165187,.826412,-.100679,1.019908,.159362,.851314,-.098451,1.018839,.153059,.8751,-.095363,1.017306,.146284,.89828,-.092008,1.016151,.138975,.92045,-.088095,1.01488,.131361,.941727,-.08369,1.013556,.123417,.962308,-.079077,1.012998,.115201,.981364,-.073894,1.011841,.106711,.999798,-.068435,1.011021,.098063,1.016983,-.06283,1.010194,.089183,1.033039,-.056914,1.009292,.08019,1.047994,-.050721,1.008474,.07101,1.06158,-.044454,1.007386,.061867,1.074023,-.038145,1.006135,.052711,1.08547,-.031679,1.00489,.043595,1.095673,-.025157,1.003627,.034506,1.105,-.018702,1.002331,.025468,1.113795,-.012458,1.001278,.016834,1.122012,-.006169,1.000548,.008265,1.129683,78e-6,.999988,-72e-6,2e-4,-46e-6,1.052496,.228243,504e-6,-115e-6,1.052079,.228243,.002016,-46e-5,1.052079,.228241,.004535,-.001035,1.052091,.228242,.008062,-.00184,1.051962,.228242,.012598,-.002875,1.052087,.228242,.018141,-.00414,1.052088,.228242,.024692,-.005636,1.052096,.228239,.032251,-.007361,1.052029,.228243,.04082,-.009316,1.052038,.228241,.050399,-.011501,1.052042,.228239,.06099,-.013917,1.052046,.228238,.072586,-.016562,1.05199,.228236,.085198,-.019437,1.051946,.228234,.098824,-.022542,1.051879,.228229,.113467,-.025875,1.051841,.228227,.129121,-.02943,1.051724,.228219,.14578,-.03317,1.051672,.228205,.163222,-.036567,1.051556,.228143,.181604,-.040245,1.051382,.228069,.200913,-.044395,1.05123,.22801,.221005,-.049088,1.051062,.227988,.241667,-.054506,1.050881,.228044,.263777,-.059437,1.050643,.227986,.286841,-.06359,1.050312,.227755,.310879,-.068224,1.050009,.227525,.33565,-.072986,1.049597,.227253,.360869,-.077435,1.049121,.226845,.386609,-.082385,1.048587,.226466,.412742,-.08757,1.047987,.226059,.439789,-.091929,1.047308,.225331,.467558,-.096038,1.046423,.224409,.495406,-.099938,1.045481,.223288,.523417,-.10405,1.044512,.222066,.551755,-.107503,1.043408,.220487,.580468,-.110234,1.042016,.218451,.608904,-.112993,1.040535,.2162,.63723,-.115173,1.038934,.213458,.665566,-.116433,1.036961,.210158,.693413,-.117589,1.03513,.206457,.721025,-.117885,1.03308,.202197,.748054,-.117606,1.030752,.197296,.774631,-.116771,1.028608,.191813,.800677,-.115194,1.02635,.185691,.826062,-.113138,1.024472,.179053,.85059,-.110359,1.022174,.171839,.87455,-.107072,1.020381,.164067,.897567,-.103268,1.018777,.155959,.919609,-.098794,1.016886,.14732,.941177,-.094067,1.01588,.138365,.961752,-.08867,1.014616,.129051,.981518,-.082965,1.013807,.119515,.99988,-.076971,1.012793,.109897,1.01737,-.070518,1.011894,.099872,1.033661,-.06383,1.010943,.089883,1.048672,-.05704,1.009802,.079691,1.062479,-.049917,1.00867,.069458,1.075052,-.042735,1.007429,.059191,1.086371,-.035513,1.005991,.048894,1.096623,-.028359,1.004468,.03877,1.105871,-.021111,1.002927,.028745,1.114481,-.013908,1.001728,.018884,1.12261,-.006843,1.00074,.009264,1.130165,62e-6,.999983,-6e-6,2e-4,-51e-6,1.064931,.25463,504e-6,-128e-6,1.064668,.25463,.002016,-513e-6,1.064794,.25463,.004535,-.001155,1.064851,.25463,.008063,-.002053,1.064966,.25463,.012598,-.003208,1.06484,.25463,.01814,-.004619,1.064602,.254631,.024695,-.006288,1.064965,.254632,.032251,-.008211,1.064795,.25463,.040821,-.010393,1.064802,.254628,.050398,-.01283,1.064758,.254627,.060987,-.015525,1.064731,.254625,.072584,-.018474,1.064615,.254621,.085199,-.021682,1.064672,.254619,.098826,-.025144,1.06463,.254613,.113465,-.02886,1.064515,.254606,.129119,-.032823,1.064416,.254598,.145767,-.036969,1.064347,.254579,.16319,-.040754,1.064132,.254506,.181622,-.044989,1.063951,.254437,.200981,-.049642,1.063745,.25437,.221145,-.054776,1.063547,.254324,.241896,-.060538,1.063289,.254346,.263684,-.066113,1.063013,.254296,.286796,-.070925,1.062625,.254059,.310867,-.076187,1.062216,.253817,.335644,-.081406,1.061703,.253481,.360917,-.086336,1.061066,.253005,.386786,-.09179,1.060454,.252558,.412921,-.09723,1.059568,.252008,.439722,-.102574,1.058706,.251323,.467559,-.106972,1.057682,.250239,.495605,-.111329,1.056612,.248944,.523589,-.115561,1.055101,.247471,.551787,-.119732,1.053745,.245777,.580426,-.122711,1.051829,.243448,.608778,-.125436,1.049642,.240769,.637069,-.127993,1.047749,.237739,.665251,-.129448,1.045244,.233928,.692977,-.130408,1.042279,.22964,.720346,-.130931,1.039693,.224829,.747365,-.130392,1.036675,.219144,.773734,-.12954,1.033719,.212965,.799578,-.127689,1.030774,.206047,.825002,-.125456,1.028551,.198576,.849564,-.122291,1.0258,.190471,.873412,-.11872,1.023657,.181739,.896628,-.114323,1.021381,.172586,.918952,-.109587,1.019674,.162914,.940602,-.104093,1.018126,.153039,.960917,-.098187,1.016339,.142774,.980911,-.091963,1.01544,.132316,.999686,-.085159,1.014377,.121453,1.017538,-.078139,1.013498,.110527,1.033918,-.070797,1.012332,.099437,1.04939,-.063129,1.011368,.088157,1.063402,-.055354,1.010111,.076951,1.076096,-.047522,1.008774,.065616,1.087562,-.039447,1.007202,.05431,1.097591,-.031359,1.005346,.042948,1.106782,-.023393,1.00371,.031799,1.115234,-.015461,1.002116,.020943,1.123166,-.007589,1.000858,.010288,1.130796,104e-6,1.000032,-24e-6,2e-4,-56e-6,1.07878,.281356,504e-6,-142e-6,1.079271,.281355,.002015,-567e-6,1.078635,.281355,.004535,-.001276,1.079164,.281356,.008064,-.002269,1.0793,.281355,.012598,-.003544,1.079149,.281355,.018143,-.005104,1.079329,.281355,.024691,-.006947,1.079073,.281353,.032254,-.009074,1.079253,.281354,.040822,-.011484,1.079176,.281353,.050399,-.014177,1.079057,.281349,.060987,-.017153,1.079007,.281347,.072586,-.020412,1.078998,.281343,.085203,-.023956,1.078962,.281336,.098823,-.027778,1.078839,.281332,.113464,-.031882,1.078783,.281325,.129114,-.036255,1.078633,.281315,.145748,-.04079,1.078545,.281287,.163179,-.045024,1.078311,.281208,.181649,-.049791,1.078135,.281137,.201042,-.054953,1.077845,.281063,.221267,-.060551,1.077576,.281006,.242114,-.066663,1.077257,.280978,.263568,-.072771,1.076897,.280925,.286744,-.078349,1.076405,.280689,.31084,-.084201,1.075898,.280418,.335612,-.089846,1.075287,.28002,.360975,-.095394,1.074482,.279513,.386932,-.10129,1.073617,.278961,.413171,-.107042,1.072719,.278283,.439886,-.113083,1.071698,.277547,.467535,-.11801,1.070213,.276311,.495701,-.122793,1.068857,.274867,.523772,-.127278,1.067037,.273153,.551849,-.131671,1.064923,.271176,.580338,-.135293,1.062749,.268626,.608771,-.138065,1.059944,.265569,.636756,-.140565,1.056851,.262054,.664574,-.142434,1.053461,.257807,.692151,-.143237,1.04991,.25293,.719376,-.143717,1.046426,.247414,.745852,-.143117,1.042377,.241001,.7723,-.141975,1.038789,.233797,.79805,-.140114,1.03529,.226218,.82337,-.137379,1.032374,.217785,.847735,-.134119,1.028853,.208748,.871897,-.129985,1.026395,.198877,.89495,-.125324,1.023787,.188803,.917909,-.120007,1.022073,.178493,.939567,-.114099,1.020098,.167466,.960534,-.107748,1.018851,.156223,.980423,-.100748,1.017362,.144716,.999334,-.093494,1.015961,.133028,1.017561,-.085728,1.015059,.120953,1.034225,-.077627,1.013888,.108943,1.049937,-.069375,1.012898,.096678,1.064265,-.060807,1.011635,.08435,1.077188,-.052052,1.010095,.071964,1.088637,-.043304,1.008399,.059531,1.098766,-.034458,1.006397,.047134,1.107697,-.025637,1.004354,.034887,1.116055,-.016932,1.002611,.022948,1.123819,-.008437,1.001023,.011386,1.131333,87e-6,.999952,-97e-6,2e-4,-62e-6,1.095622,.308458,504e-6,-155e-6,1.094863,.308458,.002016,-622e-6,1.095169,.308458,.004535,-.001399,1.095156,.308458,.008063,-.002487,1.095413,.308455,.012598,-.003886,1.095147,.308458,.018141,-.005596,1.09515,.308457,.024692,-.007616,1.09514,.308457,.032252,-.009947,1.095098,.308456,.040822,-.012589,1.095096,.308453,.050399,-.015541,1.09507,.308451,.060985,-.018803,1.094922,.308448,.072583,-.022375,1.094902,.308444,.085197,-.026258,1.094882,.308438,.098822,-.030448,1.094775,.308429,.11346,-.034944,1.094641,.308419,.129112,-.039731,1.09453,.308403,.145711,-.04461,1.094332,.308365,.163178,-.049362,1.094149,.308285,.181679,-.054666,1.093876,.30821,.201109,-.060336,1.093603,.308132,.221388,-.066414,1.09325,.308047,.242315,-.072881,1.092835,.307985,.263651,-.079453,1.092391,.307902,.28672,-.085882,1.091866,.307688,.310817,-.092274,1.091225,.307379,.335562,-.098306,1.090346,.306906,.361043,-.104572,1.089423,.306374,.387051,-.110843,1.088437,.30571,.413405,-.117062,1.087228,.304906,.440122,-.123501,1.085879,.304017,.467522,-.129245,1.084197,.302783,.495721,-.134285,1.082284,.301104,.523925,-.139143,1.080109,.299142,.551814,-.143638,1.077043,.296825,.579878,-.147774,1.074071,.294071,.608316,-.150724,1.070621,.290519,.636059,-.153168,1.06639,.286424,.663481,-.155139,1.062069,.281559,.690753,-.155944,1.057211,.276024,.717767,-.156176,1.052682,.269622,.743937,-.155783,1.047747,.262532,.770214,-.154245,1.04351,.254609,.795542,-.152192,1.039121,.246007,.821099,-.149256,1.035962,.236663,.845452,-.145605,1.03232,.226751,.86978,-.141186,1.02939,.216165,.893141,-.136137,1.026485,.204937,.916034,-.130332,1.024389,.193624,.938089,-.12404,1.02227,.181756,.959488,-.117011,1.020457,.169339,.979594,-.109617,1.018871,.156875,.998912,-.101562,1.017533,.144288,1.0171,-.093164,1.016445,.13137,1.034413,-.084488,1.015453,.118322,1.050347,-.075377,1.014259,.104963,1.064958,-.066108,1.013057,.091722,1.078045,-.056702,1.011491,.078231,1.089749,-.047106,1.009662,.064797,1.099831,-.037467,1.007417,.051315,1.108789,-.02799,1.005144,.038064,1.116865,-.018464,1.002925,.025008,1.124609,-.009068,1.001221,.01225,1.13204,93e-6,.999984,-71e-6,2e-4,-67e-6,1.112554,.335981,504e-6,-169e-6,1.11266,.335981,.002016,-677e-6,1.112827,.335981,.004533,-.001523,1.112147,.335982,.008063,-.002709,1.112882,.335979,.012598,-.004233,1.112891,.33598,.018141,-.006095,1.112882,.33598,.024693,-.008296,1.112877,.335978,.032252,-.010834,1.11286,.335976,.040824,-.013713,1.112965,.335974,.050398,-.016927,1.112753,.335971,.060991,-.020482,1.112826,.33597,.072587,-.024371,1.112676,.335962,.085199,-.028597,1.112593,.335955,.098822,-.033159,1.112453,.335943,.113461,-.038052,1.112329,.33593,.129108,-.043255,1.112144,.33591,.145665,-.048412,1.111905,.335857,.163185,-.053786,1.111668,.335781,.18171,-.059608,1.111345,.335696,.201166,-.065794,1.110979,.335606,.221489,-.072361,1.110553,.335505,.242471,-.079184,1.110112,.335396,.2639,-.086213,1.109584,.335271,.286688,-.093491,1.108927,.335089,.310773,-.100406,1.108091,.334737,.335573,-.106987,1.107169,.334208,.361117,-.113844,1.106097,.3336,.387175,-.120463,1.104826,.332828,.413665,-.127245,1.103415,.331929,.440386,-.133927,1.101632,.330851,.467527,-.140496,1.099563,.329538,.49563,-.145874,1.096956,.327618,.523864,-.150997,1.094201,.32539,.551705,-.155713,1.090342,.322688,.579383,-.159993,1.08601,.319483,.607301,-.163238,1.081226,.315522,.634873,-.165667,1.076065,.31084,.662028,-.167606,1.070466,.305377,.688755,-.168626,1.064601,.299056,.715612,-.168578,1.059269,.291963,.741604,-.167961,1.053648,.284018,.767757,-.166439,1.048928,.275474,.793264,-.164023,1.044343,.266056,.818165,-.160965,1.039909,.25575,.843255,-.156896,1.03618,.244843,.867249,-.152262,1.032303,.233464,.890994,-.146655,1.029365,.221128,.913829,-.140574,1.026607,.208554,.936508,-.13364,1.024512,.195772,.95772,-.12622,1.022421,.18242,.97894,-.118164,1.021293,.168852,.998285,-.109558,1.019444,.155261,1.016764,-.100562,1.017825,.141395,1.034387,-.091064,1.016996,.127311,1.050916,-.081468,1.015945,.113089,1.065652,-.071463,1.014547,.098879,1.079155,-.06124,1.013066,.084468,1.090822,-.05098,1.010788,.06994,1.1011,-.040549,1.008563,.055475,1.109824,-.030101,1.00595,.041033,1.117828,-.019884,1.003453,.027022,1.125443,-.0099,1.001484,.013306,1.132869,94e-6,1.000004,-46e-6,2e-4,-73e-6,1.132849,.36397,504e-6,-183e-6,1.132155,.363969,.002016,-734e-6,1.132516,.363969,.004535,-.001651,1.132256,.363969,.008062,-.002934,1.132318,.363966,.012597,-.004585,1.132386,.363968,.018141,-.006602,1.132457,.363967,.024693,-.008987,1.132511,.363967,.032252,-.011737,1.132488,.363965,.040819,-.014853,1.132241,.363959,.050398,-.018336,1.132372,.363958,.060988,-.022185,1.132373,.363954,.072582,-.026396,1.132137,.363943,.085195,-.030973,1.132071,.363935,.098822,-.035913,1.131978,.363922,.113461,-.041209,1.131801,.363905,.129116,-.046833,1.131535,.363867,.14564,-.052346,1.13129,.363814,.163199,-.058275,1.131046,.363734,.181742,-.064623,1.130671,.363642,.201227,-.071336,1.130224,.363539,.221587,-.078396,1.129758,.363419,.242625,-.085545,1.129213,.363256,.264183,-.09311,1.128549,.363097,.286668,-.101206,1.127767,.362939,.310745,-.108586,1.126796,.362516,.335602,-.115827,1.125686,.361953,.361202,-.123212,1.124451,.361275,.387298,-.130294,1.122861,.360376,.413918,-.137553,1.121154,.359362,.44068,-.144577,1.118825,.358069,.467667,-.151558,1.116002,.356581,.495449,-.157621,1.112778,.354531,.523514,-.162844,1.108842,.351915,.55125,-.167744,1.104075,.348797,.578629,-.172132,1.098733,.345222,.605757,-.175733,1.092224,.340665,.633392,-.178109,1.086201,.335286,.660783,-.180009,1.08011,.329286,.687219,-.181105,1.073419,.322319,.713873,-.181046,1.06741,.314616,.740094,-.180219,1.061414,.306014,.765233,-.178559,1.055287,.296704,.790885,-.175806,1.049727,.286394,.815464,-.172354,1.044519,.275189,.840259,-.168048,1.040375,.263441,.864285,-.162904,1.03601,.250918,.888806,-.157194,1.033525,.237611,.911682,-.150486,1.02949,.223809,.934481,-.143212,1.026778,.209705,.956337,-.135233,1.024632,.195281,.97738,-.12665,1.022737,.180878,.997427,-.117552,1.02111,.166112,1.016666,-.107814,1.019869,.151231,1.034337,-.097814,1.018543,.136375,1.051082,-.08733,1.017476,.121187,1.066326,-.076614,1.016083,.106043,1.079897,-.065793,1.014227,.090566,1.092136,-.054654,1.012334,.074988,1.102315,-.043516,1.009627,.059577,1.111105,-.032509,1.006808,.044202,1.118861,-.021381,1.003917,.028995,1.126363,-.010489,1.00167,.014269,1.133598,83e-6,.999989,-35e-6,2e-4,-79e-6,1.155026,.39247,504e-6,-198e-6,1.154184,.392469,.002016,-791e-6,1.15399,.392469,.004535,-.00178,1.154045,.392469,.008063,-.003164,1.154007,.392466,.012598,-.004944,1.154022,.392469,.018141,-.007119,1.154015,.392468,.024692,-.00969,1.154017,.392466,.032254,-.012656,1.154069,.392465,.040826,-.016018,1.15398,.392459,.050399,-.019771,1.153911,.392456,.060987,-.023919,1.15386,.392447,.072588,-.028461,1.153777,.392442,.085197,-.033393,1.153582,.392428,.098822,-.038716,1.153434,.392412,.113462,-.044422,1.153271,.39239,.129101,-.050455,1.153019,.392359,.145642,-.056392,1.152721,.392283,.163223,-.062859,1.152404,.392201,.181779,-.069721,1.151941,.392099,.201289,-.076968,1.151422,.391978,.221678,-.084518,1.150861,.391833,.242752,-.092017,1.150156,.391618,.264474,-.100184,1.149402,.391421,.286768,-.108921,1.148545,.391249,.310719,-.116815,1.147388,.390773,.335638,-.124785,1.146042,.390168,.36124,-.13263,1.144529,.389394,.387443,-.140298,1.142602,.388391,.414067,-.147913,1.140361,.387199,.440904,-.155362,1.137612,.385742,.467771,-.162574,1.133659,.383926,.494907,-.169312,1.129246,.381715,.522801,-.174778,1.124228,.378678,.550751,-.179824,1.118697,.375158,.578018,-.184284,1.112019,.370851,.605291,-.188215,1.105151,.365928,.632269,-.19076,1.097677,.360114,.659432,-.192457,1.090816,.353498,.685839,-.193458,1.083286,.346094,.711876,-.193502,1.076245,.337754,.738184,-.192371,1.069684,.328412,.763723,-.190531,1.063249,.318164,.789192,-.187726,1.057265,.3069,.813744,-.183783,1.051177,.295021,.838408,-.179328,1.045902,.282144,.862116,-.173573,1.040853,.268438,.885636,-.16735,1.036515,.254108,.909342,-.160229,1.033269,.239082,.931962,-.152529,1.029627,.224024,.954671,-.14408,1.027507,.208393,.975707,-.135023,1.024657,.19263,.996644,-.125258,1.022998,.176741,1.015817,-.115089,1.021234,.160926,1.034301,-.104317,1.020025,.145042,1.051131,-.093218,1.018739,.129052,1.066836,-.081828,1.017419,.112905,1.081027,-.070132,1.015714,.096578,1.093225,-.058382,1.013465,.080077,1.103691,-.046527,1.010853,.06358,1.112431,-.034624,1.007702,.047118,1.120035,-.022913,1.004551,.031018,1.127336,-.011284,1.001924,.015283,1.13451,17e-5,.999937,-58e-6,2e-4,-84e-6,1.177044,.421534,504e-6,-212e-6,1.177312,.421533,.002016,-85e-5,1.17773,.421533,.004535,-.001912,1.177722,.421533,.008063,-.003399,1.177844,.421529,.012598,-.00531,1.177768,.421533,.018141,-.007646,1.17773,.421531,.024692,-.010407,1.177663,.42153,.032252,-.013592,1.177681,.421527,.040821,-.017201,1.177562,.421524,.050401,-.021234,1.177445,.421516,.060988,-.025688,1.177461,.421509,.07259,-.030565,1.177364,.421498,.0852,-.03586,1.177205,.421482,.098823,-.041572,1.177011,.421462,.113465,-.047694,1.176794,.421436,.129094,-.054122,1.176504,.421396,.145652,-.06053,1.176203,.421311,.163245,-.067517,1.175805,.421218,.181825,-.074919,1.175271,.421108,.20136,-.0827,1.174717,.420974,.221773,-.090727,1.174021,.420795,.242908,-.098719,1.173173,.420536,.264742,-.107417,1.172285,.420296,.287091,-.116601,1.171326,.420065,.310723,-.125265,1.169907,.419582,.335685,-.133876,1.168352,.418912,.361285,-.14214,1.166322,.418006,.387562,-.150436,1.164136,.416899,.414175,-.158388,1.161162,.415513,.441021,-.166258,1.157608,.413836,.467698,-.17372,1.152519,.411702,.49473,-.180843,1.14702,.409102,.522524,-.186906,1.141256,.405789,.550055,-.192004,1.134114,.401759,.577512,-.196588,1.127086,.397153,.604348,-.20042,1.119029,.391767,.63097,-.20332,1.110308,.385573,.658023,-.204883,1.102643,.378245,.684422,-.205716,1.094573,.370191,.710405,-.205767,1.086405,.361231,.736417,-.204513,1.078712,.351106,.761836,-.202281,1.071619,.340096,.78714,-.199395,1.064873,.328139,.812197,-.195185,1.058313,.315044,.836342,-.190191,1.052085,.300933,.860311,-.184343,1.046705,.286411,.883597,-.177415,1.041072,.270897,.906852,-.170003,1.036797,.254825,.929991,-.161592,1.033264,.238176,.952478,-.152792,1.03025,.221581,.974216,-.143032,1.027331,.204378,.995372,-.132922,1.025135,.18747,1.01533,-.122009,1.02325,.170538,1.03407,-.11074,1.022021,.153777,1.051295,-.099016,1.020271,.136916,1.06746,-.08692,1.018948,.11988,1.082022,-.074729,1.017336,.102565,1.094378,-.062036,1.01482,.084994,1.104998,-.049413,1.011999,.06765,1.113773,-.036812,1.008711,.050148,1.121263,-.024274,1.005141,.032976,1.12842,-.012038,1.002196,.016239,1.135496,106e-6,1.000042,-62e-6,2e-4,-9e-5,1.203048,.451217,504e-6,-227e-6,1.203226,.451215,.002016,-909e-6,1.20345,.451215,.004535,-.002046,1.203569,.451215,.008062,-.003638,1.203609,.451209,.012598,-.005684,1.20358,.451214,.018141,-.008185,1.203515,.451212,.024694,-.011141,1.203618,.451211,.032253,-.014549,1.203609,.451207,.040815,-.018409,1.203302,.451203,.050401,-.022727,1.203454,.451195,.06099,-.027495,1.20348,.451188,.072591,-.032713,1.20322,.451172,.085203,-.038378,1.203058,.451154,.098829,-.044489,1.202838,.45113,.113466,-.051031,1.20253,.451098,.129084,-.057808,1.20227,.451041,.145669,-.064769,1.201904,.450956,.163278,-.072278,1.201411,.450853,.18188,-.080224,1.200825,.450721,.201436,-.088537,1.200164,.450566,.221865,-.097009,1.199335,.450351,.243083,-.105591,1.198383,.450062,.265033,-.114818,1.19738,.449769,.287456,-.124372,1.196137,.449438,.310758,-.133892,1.194554,.448974,.335721,-.143052,1.192649,.448216,.361348,-.151868,1.190233,.447202,.387573,-.160644,1.187211,.445926,.414159,-.169028,1.183452,.444313,.44095,-.177169,1.178562,.442315,.467998,-.18509,1.17354,.43996,.494566,-.192396,1.166344,.436989,.52173,-.198915,1.159283,.433439,.549405,-.20424,1.151503,.428984,.576755,-.208861,1.143004,.423839,.603635,-.212734,1.134099,.418012,.629979,-.215712,1.124555,.411445,.656597,-.217385,1.115293,.403628,.683317,-.218093,1.10646,.394639,.70899,-.217835,1.097389,.385012,.734898,-.216774,1.08894,.373999,.760342,-.21412,1.080385,.362128,.785517,-.210821,1.072959,.349184,.809933,-.206443,1.06545,.33508,.834339,-.200942,1.058701,.320257,.858793,-.194938,1.052711,.304133,.8823,-.187615,1.047044,.287771,.90556,-.179626,1.042083,.270571,.927916,-.170753,1.037077,.252741,.950415,-.16127,1.0332,.234656,.97292,-.151239,1.030418,.216652,.993893,-.140358,1.027479,.198252,1.014204,-.128963,1.024897,.180113,1.033878,-.117128,1.023648,.162282,1.051754,-.104678,1.02223,.144366,1.067924,-.092,1.020453,.126455,1.082643,-.078837,1.018518,.108194,1.095503,-.065669,1.016199,.089966,1.10629,-.052345,1.013113,.07153,1.115219,-.039024,1.009636,.053158,1.122587,-.025789,1.005801,.034959,1.129461,-.012622,1.002442,.017222,1.136468,152e-6,.999964,-65e-6,2e-4,-96e-6,1.231156,.481574,504e-6,-243e-6,1.232187,.481572,.002016,-971e-6,1.231948,.481572,.004535,-.002184,1.231919,.481572,.008061,-.003882,1.231453,.481566,.012597,-.006066,1.2318,.481572,.018142,-.008736,1.231756,.481569,.024693,-.011889,1.232062,.48157,.032254,-.015528,1.231915,.481563,.040822,-.01965,1.231863,.481559,.050402,-.024255,1.231737,.48155,.060992,-.029342,1.231678,.481537,.072592,-.034908,1.231537,.481521,.085207,-.040953,1.231336,.481499,.098834,-.047469,1.231071,.481469,.113474,-.054441,1.230757,.481431,.129077,-.061556,1.230424,.481359,.145691,-.069091,1.230022,.481269,.163321,-.077151,1.229461,.481156,.181936,-.085636,1.228718,.481011,.201516,-.094484,1.228023,.48083,.221963,-.103362,1.227057,.480562,.243264,-.112628,1.225997,.480247,.265291,-.122366,1.224744,.479891,.287824,-.132256,1.223255,.479461,.310927,-.142614,1.221348,.478978,.335749,-.152326,1.218953,.478132,.361361,-.161747,1.215806,.476971,.38748,-.170879,1.211853,.475477,.414231,-.179865,1.207783,.473686,.441065,-.188331,1.202051,.471415,.467923,-.196454,1.195463,.468647,.494526,-.204048,1.187542,.465459,.521318,-.21102,1.179235,.46165,.548654,-.21652,1.17011,.456868,.575778,-.221098,1.160163,.451227,.60261,-.224923,1.149751,.444866,.628891,-.227895,1.139169,.437577,.655635,-.23002,1.129736,.429369,.682115,-.230419,1.119516,.419673,.707514,-.229789,1.108277,.409143,.733169,-.22852,1.099159,.397296,.758342,-.225793,1.089839,.384578,.783477,-.222049,1.081428,.370323,.808497,-.217562,1.073742,.355253,.83279,-.211697,1.06585,.339282,.856677,-.204989,1.058834,.322181,.880662,-.197653,1.053291,.30461,.903474,-.188858,1.046822,.286042,.926313,-.179746,1.041663,.267224,.948458,-.169542,1.036532,.247978,.970873,-.159005,1.033008,.228535,.992958,-.147658,1.029844,.208819,1.013413,-.135771,1.02693,.189486,1.033483,-.123256,1.025545,.170422,1.051872,-.110401,1.023935,.152075,1.068396,-.09686,1.022092,.133169,1.083731,-.083259,1.020221,.114022,1.096849,-.069266,1.017663,.094772,1.107864,-.055203,1.014524,.075432,1.1166,-.041097,1.010514,.05598,1.123871,-.027083,1.006313,.036839,1.130718,-.01351,1.002778,.018156,1.137649,154e-6,1.000033,-28e-6,2e-4,-103e-6,1.264025,.51267,504e-6,-258e-6,1.262437,.512667,.002016,-.001033,1.262691,.512668,.004535,-.002325,1.262834,.512667,.008063,-.004133,1.262783,.512659,.012598,-.006458,1.262803,.512666,.018141,-.009299,1.26272,.512665,.024683,-.012652,1.262061,.512655,.032257,-.016532,1.262858,.512656,.040826,-.020919,1.262709,.512649,.050403,-.02582,1.262685,.512639,.060993,-.031233,1.262544,.512625,.072597,-.037157,1.262435,.512607,.085211,-.043587,1.262209,.512581,.098842,-.05052,1.261907,.512544,.113484,-.057926,1.261575,.5125,.129097,-.06546,1.261293,.51242,.145727,-.073543,1.260736,.512316,.163375,-.082134,1.260117,.51219,.182011,-.091173,1.259299,.512024,.201598,-.10054,1.258381,.51181,.222084,-.109931,1.257293,.511505,.243446,-.119838,1.25605,.511151,.265574,-.13009,1.254607,.510724,.28823,-.140421,1.252808,.510191,.311336,-.151343,1.250489,.509627,.335719,-.161689,1.247279,.508688,.361314,-.171748,1.243467,.507393,.387541,-.181399,1.239145,.505758,.414204,-.190768,1.23376,.503676,.441092,-.199659,1.227433,.501129,.467789,-.207934,1.219247,.498078,.494454,-.215747,1.210441,.49463,.52095,-.222869,1.200559,.490467,.547802,-.228881,1.189872,.485444,.575563,-.23376,1.180081,.479268,.602426,-.237566,1.168544,.472272,.628772,-.240447,1.156546,.46439,.654963,-.242427,1.145123,.455345,.681384,-.24298,1.134322,.444885,.707173,-.24215,1.122665,.433338,.732477,-.240435,1.111733,.420647,.757567,-.237806,1.101271,.406799,.782341,-.233503,1.091341,.391761,.80669,-.228346,1.082042,.375576,.830804,-.222386,1.073504,.358545,.85494,-.215141,1.06588,.340431,.878709,-.207207,1.05885,.32169,.901928,-.198273,1.052588,.30193,.924845,-.188476,1.046521,.281513,.946932,-.177996,1.040966,.261234,.969256,-.166644,1.03667,.240356,.991323,-.154968,1.032694,.219748,1.013013,-.142425,1.030061,.199103,1.032845,-.129456,1.027254,.178936,1.051887,-.115763,1.025497,.159243,1.069179,-.101851,1.023807,.13956,1.084499,-.087357,1.021441,.119607,1.097921,-.072796,1.01878,.099501,1.109281,-.058037,1.015566,.079211,1.118194,-.043226,1.011494,.058873,1.125351,-.028633,1.007089,.038736,1.132002,-.013996,1.003014,.019063,1.138951,132e-6,1.000036,-7e-6,2e-4,-109e-6,1.296791,.544571,504e-6,-274e-6,1.296055,.544568,.002016,-.001098,1.297239,.544568,.004535,-.00247,1.2966,.544568,.008062,-.00439,1.296368,.544559,.012597,-.00686,1.296454,.544566,.018141,-.009878,1.296522,.544565,.024693,-.013444,1.296536,.54456,.032256,-.017559,1.296638,.544557,.040824,-.022218,1.296491,.544547,.050408,-.027426,1.296552,.544532,.060997,-.033173,1.296283,.544518,.0726,-.039463,1.296113,.544496,.08522,-.046292,1.295894,.544466,.098851,-.053648,1.295545,.544422,.113496,-.061487,1.295201,.544371,.129112,-.069467,1.294754,.544273,.145765,-.078092,1.294209,.54416,.163431,-.087231,1.293534,.544017,.182088,-.096837,1.29258,.543828,.201698,-.106713,1.291586,.543585,.222231,-.116699,1.290325,.543238,.243653,-.127208,1.288888,.542836,.265855,-.137949,1.287131,.542329,.288623,-.148847,1.284936,.5417,.31183,-.160204,1.282109,.540997,.335728,-.171324,1.278036,.540045,.361403,-.181915,1.273912,.538603,.387647,-.192124,1.268881,.536741,.414217,-.201807,1.262363,.534432,.44109,-.211093,1.254755,.531623,.467823,-.219678,1.245456,.528314,.494361,-.227581,1.234953,.524391,.521264,-.235087,1.224839,.519902,.547881,-.241508,1.213175,.514574,.574965,-.246315,1.200505,.507837,.601847,-.250061,1.187901,.500286,.628207,-.252822,1.174601,.491502,.654445,-.254691,1.161944,.481726,.680175,-.255318,1.149305,.470727,.706168,-.254257,1.136708,.458045,.731458,-.2521,1.124047,.444438,.756378,-.249115,1.112942,.429611,.781311,-.244899,1.1018,.413501,.805755,-.239225,1.091662,.395889,.829867,-.23283,1.082291,.37786,.853067,-.225193,1.07282,.358704,.877084,-.216648,1.065415,.338413,.900123,-.20739,1.058403,.317596,.92337,-.197095,1.051412,.296301,.946021,-.186084,1.045877,.274498,.967669,-.174262,1.040316,.252565,.989761,-.161814,1.035489,.230312,1.012163,-.149076,1.03254,.208746,1.032547,-.135299,1.029598,.18718,1.052032,-.121277,1.027355,.166482,1.069907,-.106582,1.025622,.145939,1.085563,-.091589,1.023244,.125362,1.099447,-.076263,1.020661,.104087,1.110848,-.060825,1.017035,.083036,1.119923,-.045319,1.012675,.061719,1.126805,-.029852,1.007668,.040583,1.133282,-.014846,1.003335,.019969,1.140128,149e-6,1.000024,-37e-6,2e-4,-116e-6,1.334863,.57735,504e-6,-291e-6,1.33335,.577348,.002015,-.001164,1.332853,.577347,.004535,-.002618,1.333295,.577347,.008062,-.004655,1.333189,.577336,.012598,-.007273,1.333309,.577345,.018141,-.010472,1.333274,.577342,.024694,-.014253,1.333231,.577339,.032254,-.018614,1.333265,.577332,.040827,-.023556,1.333261,.577321,.0504,-.029069,1.332893,.577309,.061,-.035166,1.332998,.577288,.072608,-.041833,1.332901,.577263,.085227,-.049067,1.332603,.577226,.098864,-.05686,1.332264,.577177,.113507,-.065114,1.331825,.577109,.129146,-.07361,1.331311,.577005,.145808,-.082766,1.330639,.576872,.163494,-.092458,1.329878,.576709,.182176,-.102639,1.328889,.576501,.201804,-.112983,1.32771,.576207,.222394,-.12365,1.326256,.575823,.243881,-.13478,1.324593,.575363,.266122,-.145931,1.322426,.574751,.289043,-.1575,1.319837,.574033,.31233,-.169208,1.316301,.573181,.33612,-.181125,1.312251,.572188,.361506,-.192232,1.307003,.570631,.387757,-.202981,1.301068,.568558,.414365,-.21316,1.293695,.566027,.440986,-.222617,1.283958,.562942,.467943,-.231583,1.274057,.559219,.494821,-.239881,1.262864,.554913,.521486,-.247336,1.250633,.549953,.547884,-.253921,1.237448,.544251,.574582,-.259099,1.223164,.53712,.601342,-.262695,1.208784,.52865,.627861,-.265337,1.194424,.518978,.653745,-.266872,1.179361,.508525,.679348,-.267403,1.16501,.496705,.705068,-.266429,1.151693,.482926,.730312,-.263829,1.137584,.468519,.755576,-.260491,1.125328,.452213,.780371,-.256166,1.113759,.435127,.804632,-.250079,1.101656,.416833,.828983,-.243181,1.091235,.397009,.852585,-.235383,1.081475,.376647,.875237,-.226031,1.071806,.355506,.899152,-.216343,1.064453,.333133,.922121,-.205772,1.057161,.311073,.944523,-.19398,1.050447,.287781,.967313,-.18192,1.044531,.26435,.989042,-.168822,1.039312,.241128,1.010881,-.15535,1.035298,.218138,1.032368,-.141231,1.032073,.195579,1.052254,-.126521,1.029395,.173399,1.070207,-.111243,1.026938,.151866,1.086528,-.095617,1.024957,.130711,1.10067,-.079687,1.021924,.108865,1.112461,-.063593,1.018281,.08676,1.121588,-.047313,1.013747,.064575,1.128522,-.031385,1.008433,.042499,1.134759,-.015356,1.003569,.02084,1.141448,114e-6,.999978,-56e-6,2e-4,-122e-6,1.372763,.611086,503e-6,-308e-6,1.371456,.611084,.002016,-.001232,1.37344,.611084,.004535,-.002771,1.373387,.611083,.008061,-.004926,1.372916,.611083,.012601,-.0077,1.373956,.611084,.018142,-.011084,1.373419,.611078,.024695,-.015087,1.373492,.611074,.032255,-.019701,1.37336,.611066,.040827,-.02493,1.373327,.611055,.050408,-.030769,1.373222,.611037,.061004,-.037217,1.373079,.611014,.072613,-.04427,1.372895,.610982,.085238,-.051923,1.372624,.610941,.098878,-.060161,1.372252,.610883,.113522,-.068785,1.371785,.610798,.129176,-.077863,1.371103,.610683,.145876,-.087593,1.370541,.610537,.16357,-.097847,1.369496,.610349,.182283,-.108592,1.368477,.610109,.20193,-.11942,1.36698,.609763,.22257,-.130789,1.365375,.609343,.244123,-.142514,1.363456,.608815,.266437,-.154232,1.360916,.608114,.289467,-.16637,1.357909,.607291,.312861,-.178505,1.353588,.606272,.336736,-.19098,1.349211,.605153,.36174,-.202859,1.343319,.603548,.387878,-.213997,1.335908,.601268,.414357,-.224584,1.326676,.598499,.441442,-.234664,1.317331,.595066,.468409,-.243875,1.305818,.590996,.494999,-.252121,1.291863,.586293,.52173,-.259714,1.278212,.58084,.547894,-.266242,1.262656,.574494,.573865,-.271578,1.246364,.567007,.601124,-.275503,1.231274,.557771,.627606,-.277954,1.215252,.547255,.654004,-.279404,1.199977,.535766,.679554,-.279632,1.183995,.522792,.70428,-.278457,1.167428,.508488,.72983,-.275706,1.15276,.492425,.754376,-.27164,1.137942,.475285,.779209,-.266911,1.125222,.456679,.803562,-.260838,1.112179,.437267,.827985,-.253353,1.101439,.416227,.851737,-.245027,1.08989,.394728,.87485,-.235719,1.080018,.372244,.89768,-.225051,1.070807,.348846,.921351,-.214051,1.06318,.324961,.943818,-.202039,1.056148,.300836,.966368,-.189134,1.049277,.276333,.987426,-.175613,1.042176,.251862,1.010162,-.161473,1.038567,.227217,1.031224,-.146866,1.034102,.203582,1.052317,-.131644,1.0316,.180629,1.070879,-.115909,1.028913,.158165,1.087407,-.099638,1.026193,.135905,1.102159,-.083091,1.023567,.113394,1.114006,-.066178,1.019567,.090325,1.123374,-.04943,1.014856,.067302,1.13031,-.032557,1.009141,.044264,1.136334,-.016157,1.003984,.021807,1.142961,172e-6,.999951,-77e-6,2e-4,-129e-6,1.416584,.645866,504e-6,-326e-6,1.417762,.645865,.002016,-.001302,1.417825,.645866,.004535,-.002929,1.417142,.645865,.008062,-.005207,1.416968,.645864,.012598,-.008136,1.417109,.645862,.018141,-.011715,1.417001,.645859,.02469,-.015941,1.416878,.645853,.032257,-.020823,1.417134,.645843,.040827,-.026347,1.416983,.645829,.050411,-.032518,1.416949,.645808,.061007,-.03933,1.416694,.645781,.072621,-.046783,1.416599,.645746,.085249,-.054865,1.416241,.645695,.098897,-.063563,1.415832,.64563,.113546,-.072607,1.415264,.645529,.12922,-.082257,1.414482,.645396,.145888,-.092515,1.413626,.645268,.163659,-.103393,1.41271,.645018,.182385,-.114684,1.411418,.644739,.202078,-.126098,1.409822,.644348,.222772,-.138145,1.407948,.643872,.24437,-.150405,1.405678,.643255,.266787,-.162798,1.402763,.642463,.289844,-.175434,1.398863,.641504,.31354,-.188158,1.394695,.640346,.337489,-.201014,1.389376,.639042,.362008,-.213719,1.382439,.637412,.38799,-.225248,1.373281,.63493,.414728,-.236348,1.363729,.631861,.441635,-.246701,1.352304,.628155,.468588,-.256167,1.339162,.623625,.495337,-.264662,1.323811,.618458,.521886,-.272207,1.30763,.612373,.548355,-.27889,1.291265,.605263,.574535,-.284442,1.273752,.597048,.60087,-.288389,1.256171,.587401,.627715,-.290816,1.238447,.576001,.65383,-.291886,1.221036,.563198,.679175,-.291629,1.202283,.549249,.704539,-.290489,1.185866,.533881,.729126,-.287529,1.168822,.516966,.754297,-.283184,1.152934,.498501,.778678,-.277732,1.137821,.478728,.802473,-.271203,1.123387,.457814,.826596,-.263494,1.110573,.435865,.850835,-.254572,1.099099,.412597,.874203,-.244815,1.088403,.388995,.897271,-.233993,1.078085,.364487,.919667,-.221934,1.068543,.339344,.943001,-.209714,1.061081,.31377,.965688,-.196367,1.054023,.287928,.987598,-.182263,1.047247,.262157,1.00928,-.167775,1.041376,.236855,1.031762,-.15253,1.037647,.211847,1.051965,-.136809,1.033396,.187546,1.071699,-.120418,1.031021,.164186,1.088881,-.103618,1.028403,.141184,1.103482,-.086271,1.024987,.117665,1.115646,-.068973,1.020884,.093896,1.125258,-.051285,1.015966,.069978,1.132045,-.033998,1.00999,.046126,1.138004,-.016696,1.00427,.022635,1.144463,89e-6,.999987,-16e-6,2e-4,-136e-6,1.463614,.681786,504e-6,-344e-6,1.465345,.681785,.002015,-.001374,1.464172,.681783,.004535,-.003092,1.464846,.681784,.008062,-.005496,1.464783,.681784,.012598,-.008588,1.464883,.681781,.018141,-.012366,1.46474,.681777,.024692,-.016829,1.464665,.68177,.032258,-.02198,1.46472,.68176,.040829,-.027811,1.464625,.681742,.050415,-.034324,1.464571,.68172,.061013,-.041513,1.464346,.681688,.072628,-.049375,1.464131,.681644,.085264,-.057903,1.463847,.681588,.098918,-.067067,1.463369,.681509,.113568,-.07657,1.462549,.681389,.129265,-.086782,1.461703,.681239,.145997,-.097637,1.46084,.681047,.163751,-.109101,1.459737,.680806,.182505,-.120922,1.458231,.68048,.202241,-.133007,1.456393,.680042,.222987,-.145693,1.454258,.679503,.244638,-.158488,1.451543,.678792,.267132,-.171585,1.448115,.677907,.290365,-.184746,1.443992,.676796,.314178,-.198101,1.439271,.675498,.338289,-.21137,1.43283,.673922,.362543,-.224489,1.424163,.672151,.38847,-.236914,1.41516,.669601,.415105,-.248342,1.403811,.666255,.441925,-.258957,1.390149,.662166,.468668,-.268556,1.374104,.657229,.49572,-.277359,1.358102,.651347,.522574,-.285078,1.340754,.644598,.548981,-.291718,1.322033,.63682,.574946,-.297087,1.302148,.627812,.600744,-.301079,1.28213,.617485,.627565,-.303566,1.263339,.605047,.653598,-.30433,1.242712,.591167,.679239,-.30382,1.223212,.576025,.704043,-.302064,1.203763,.559649,.728796,-.299095,1.185434,.541271,.753581,-.294392,1.16763,.5218,.778577,-.288603,1.15193,.500628,.80255,-.281604,1.136072,.478434,.825803,-.273472,1.121673,.455384,.849768,-.264011,1.108491,.430811,.87325,-.253653,1.09655,.405524,.896725,-.242642,1.085905,.380038,.919158,-.230191,1.075091,.353482,.942236,-.217145,1.066848,.326605,.965031,-.203555,1.05931,.299842,.987048,-.188777,1.051749,.272859,1.008718,-.173613,1.044999,.24604,1.031097,-.157972,1.040066,.219826,1.052493,-.141589,1.035951,.194278,1.071773,-.124814,1.03252,.16983,1.089646,-.107321,1.029803,.146135,1.104932,-.089726,1.026612,.122127,1.117687,-.071433,1.022391,.097461,1.127188,-.053395,1.017113,.072556,1.13401,-.035151,1.010934,.047749,1.139746,-.017427,1.004633,.02353,1.146205,151e-6,1.00002,-106e-6,2e-4,-144e-6,1.517643,.718949,504e-6,-362e-6,1.516387,.718947,.002016,-.001449,1.516742,.718946,.004536,-.003261,1.517196,.718946,.008063,-.005796,1.516806,.718945,.012598,-.009057,1.516986,.718943,.01814,-.013039,1.516603,.718937,.024694,-.017747,1.516739,.718929,.03226,-.023178,1.516994,.718917,.040831,-.029325,1.516649,.718896,.050419,-.036192,1.516594,.71887,.061019,-.04377,1.516327,.718833,.072638,-.052056,1.516054,.718782,.085274,-.061039,1.515628,.718714,.098938,-.070676,1.515199,.718623,.113607,-.080679,1.514222,.718483,.129329,-.091485,1.513354,.718316,.146077,-.102931,1.512301,.718096,.163856,-.114986,1.510977,.717818,.18264,-.127305,1.509225,.717432,.202432,-.140147,1.507152,.716939,.223229,-.153468,1.50478,.716331,.244943,-.166875,1.501612,.715527,.267559,-.180658,1.497898,.714523,.290926,-.194405,1.493208,.713266,.314863,-.208302,1.487388,.711758,.339053,-.22202,1.479677,.709982,.363627,-.235683,1.47095,.707958,.388887,-.248723,1.459907,.705346,.415474,-.260563,1.446579,.701644,.442065,-.271352,1.429962,.697134,.469418,-.281541,1.414343,.691665,.496419,-.290429,1.395681,.685227,.523071,-.298032,1.375347,.677815,.549641,-.304679,1.354816,.669063,.575489,-.309902,1.332505,.659071,.601108,-.313771,1.309752,.647799,.627199,-.316225,1.288381,.634856,.653243,-.316679,1.265785,.619627,.67896,-.315816,1.244333,.603244,.704055,-.313776,1.223315,.585191,.728713,-.310417,1.203142,.565969,.753301,-.305786,1.184323,.545347,.77789,-.299262,1.16607,.522753,.802354,-.29183,1.149599,.499017,.826005,-.283281,1.133655,.474335,.84892,-.273512,1.118132,.449019,.872765,-.262525,1.105606,.422329,.89595,-.250769,1.093539,.395057,.918816,-.238257,1.082388,.367709,.941089,-.224381,1.072484,.33935,.964514,-.210289,1.064054,.311239,.987128,-.195488,1.056645,.283272,1.009064,-.179491,1.049549,.255163,1.030163,-.163172,1.042741,.227757,1.052502,-.146457,1.03827,.20097,1.072971,-.129054,1.035014,.175767,1.091223,-.111285,1.032231,.151118,1.106518,-.092617,1.028211,.126196,1.119235,-.074168,1.023686,.100828,1.129311,-.055212,1.018311,.07524,1.135983,-.036571,1.011485,.049558,1.141648,-.017954,1.004952,.024273,1.147938,125e-6,1.000009,-48e-6,199e-6,-151e-6,1.566887,.757466,504e-6,-382e-6,1.574111,.757466,.002016,-.001527,1.573735,.757466,.004535,-.003435,1.573737,.757466,.008062,-.006107,1.573782,.757464,.012599,-.009542,1.573796,.75746,.018142,-.013739,1.57371,.757455,.024694,-.018697,1.573562,.757446,.032259,-.024418,1.573667,.757429,.040834,-.030895,1.573555,.757407,.050422,-.038127,1.573383,.757376,.061025,-.046108,1.573086,.757332,.07265,-.054835,1.572833,.757274,.085296,-.064294,1.572395,.757195,.098962,-.074376,1.571729,.757087,.113649,-.084955,1.570571,.756925,.129389,-.096334,1.569582,.756729,.146167,-.108406,1.568444,.756481,.163973,-.121056,1.566905,.756158,.182798,-.13397,1.564939,.755715,.20265,-.147522,1.562666,.755167,.223502,-.161466,1.559877,.754465,.245269,-.175539,1.556008,.753552,.26801,-.189957,1.552013,.75242,.291474,-.204361,1.546509,.751008,.315527,-.218714,1.539575,.749266,.339954,-.233029,1.530968,.747232,.364649,-.247149,1.520994,.744906,.38952,-.260672,1.507748,.742123,.415717,-.272873,1.491777,.738187,.442862,-.284317,1.475658,.733189,.469939,-.294552,1.456572,.727165,.496916,-.303517,1.435237,.720043,.52348,-.311061,1.412192,.71164,.550092,-.317596,1.389033,.702174,.576384,-.322921,1.365086,.691225,.60228,-.326806,1.341317,.678841,.627676,-.329057,1.316518,.664815,.653458,-.329372,1.291877,.648548,.679227,-.328067,1.268126,.630676,.704476,-.325585,1.244424,.611585,.729232,-.321775,1.22301,.590803,.753405,-.316713,1.201297,.568653,.777274,-.309858,1.181071,.544763,.801882,-.301866,1.162826,.519747,.82603,-.292861,1.145704,.493531,.849359,-.282794,1.129629,.4669,.871837,-.271197,1.114155,.43923,.895896,-.258954,1.102334,.41057,.918951,-.245878,1.090163,.381314,.941148,-.231897,1.078738,.352268,.963464,-.216743,1.068862,.322688,.986628,-.201486,1.061077,.293523,1.009289,-.185521,1.053561,.264125,1.030659,-.168429,1.046627,.235706,1.052382,-.15121,1.040953,.208022,1.073476,-.133289,1.036534,.181245,1.092237,-.114768,1.03358,.155661,1.1082,-.095917,1.029997,.130223,1.121435,-.076492,1.025374,.104098,1.131382,-.057204,1.019485,.077776,1.137994,-.037747,1.012188,.05125,1.143441,-.018673,1.005309,.025245,1.149714,216e-6,1.000004,-12e-5,2e-4,-159e-6,1.633988,.797469,504e-6,-402e-6,1.636076,.797469,.002016,-.001607,1.635679,.797467,.004535,-.003617,1.63604,.797468,.008063,-.00643,1.636159,.797467,.012599,-.010046,1.636128,.797462,.018141,-.014464,1.63573,.797457,.024696,-.019685,1.635836,.797445,.032259,-.025705,1.635719,.797426,.040835,-.032523,1.63561,.797401,.050425,-.040135,1.63546,.797363,.061033,-.048536,1.635182,.797313,.072661,-.057718,1.634817,.797243,.085315,-.067666,1.634314,.79715,.098985,-.078179,1.63335,.797016,.113699,-.089383,1.632253,.796839,.129456,-.101364,1.631025,.796623,.146275,-.114081,1.629867,.796331,.164108,-.127318,1.628043,.795956,.182983,-.140901,1.625813,.795458,.202891,-.155174,1.623149,.794834,.223787,-.169654,1.619686,.794015,.245678,-.18454,1.615694,.793013,.268495,-.199543,1.610812,.791727,.292093,-.214639,1.604629,.790107,.316184,-.229499,1.596061,.788154,.340986,-.244407,1.587195,.785797,.365808,-.258907,1.575031,.783093,.390528,-.272746,1.559448,.77997,.41651,-.285845,1.543294,.775852,.443443,-.297404,1.523476,.770323,.470442,-.307757,1.501515,.763721,.497499,-.316846,1.477841,.755889,.524316,-.324561,1.452427,.746662,.551212,-.33106,1.427421,.736004,.577323,-.335956,1.400369,.72381,.602976,-.339501,1.373093,.710184,.628357,-.341577,1.345853,.695017,.653642,-.342031,1.31904,.677972,.67944,-.340342,1.29249,.658877,.704744,-.337356,1.267182,.638085,.729692,-.333042,1.24328,.615615,.75392,-.327504,1.219751,.592054,.777695,-.320537,1.197796,.566967,.801426,-.31188,1.176872,.540643,.825649,-.302211,1.15816,.512906,.849282,-.291665,1.141257,.484587,.872341,-.28005,1.125469,.455556,.89511,-.266978,1.110222,.425652,.918841,-.253326,1.097419,.395015,.941209,-.238899,1.086101,.364948,.963142,-.223523,1.075023,.334151,.985996,-.207346,1.065628,.303708,1.008718,-.190889,1.057256,.273008,1.030554,-.173517,1.04972,.243221,1.053085,-.155645,1.043837,.214426,1.074267,-.137472,1.039312,.187036,1.093591,-.118385,1.035457,.160512,1.10985,-.098883,1.03163,.134384,1.123516,-.07905,1.026762,.107424,1.133578,-.058977,1.02064,.080317,1.140289,-.039013,1.013096,.052944,1.14561,-.019228,1.005694,.025989,1.151704,105e-6,.999981,-19e-6,2e-4,-168e-6,1.704841,.839096,504e-6,-423e-6,1.704242,.839097,.002016,-.001691,1.703821,.839091,.004534,-.003805,1.703804,.839094,.008063,-.006765,1.704224,.839092,.012598,-.01057,1.704013,.839087,.018142,-.015219,1.703889,.839079,.024697,-.020712,1.704023,.839066,.032261,-.027046,1.703836,.839045,.040837,-.034218,1.703608,.839014,.050429,-.042224,1.703414,.838972,.061041,-.051061,1.703148,.838912,.072676,-.060717,1.702744,.838831,.08534,-.071175,1.702223,.838724,.099023,-.082182,1.700984,.838567,.113759,-.094007,1.699764,.838367,.129546,-.106621,1.698462,.838112,.146382,-.119956,1.696938,.837782,.16426,-.13376,1.694868,.837346,.183188,-.148108,1.692262,.83678,.203158,-.163075,1.689251,.836073,.224147,-.178255,1.685408,.835148,.246147,-.1939,1.680946,.833992,.269072,-.209553,1.675277,.832546,.292718,-.225226,1.667626,.830727,.317159,-.240836,1.658952,.82851,.341979,-.256103,1.647624,.825843,.366844,-.270887,1.633014,.82276,.392043,-.285324,1.617191,.819159,.417356,-.298817,1.597501,.814788,.444093,-.310711,1.575184,.808751,.471379,-.32141,1.55159,.801294,.498267,-.330421,1.524134,.792711,.525401,-.338331,1.496672,.78248,.551846,-.34443,1.467062,.770659,.578009,-.349047,1.436943,.757348,.604054,-.35249,1.407611,.742541,.629387,-.354158,1.377441,.726071,.654435,-.354422,1.347651,.707524,.679845,-.352663,1.318769,.687067,.704892,-.348994,1.2906,.664637,.729763,-.344105,1.263997,.640663,.754345,-.338129,1.239273,.615484,.778629,-.330905,1.215858,.58921,.801939,-.322113,1.192318,.56155,.825723,-.311673,1.17138,.532175,.849387,-.30041,1.152991,.502055,.872792,-.288328,1.136139,.471308,.895083,-.275087,1.119534,.440427,.918335,-.2607,1.105542,.40926,.941577,-.245717,1.09307,.377142,.963992,-.230079,1.081207,.345289,.98651,-.213523,1.071488,.313508,1.008806,-.196157,1.062011,.281962,1.030724,-.178467,1.05324,.251177,1.053782,-.160291,1.047057,.220986,1.075451,-.141308,1.041842,.192256,1.094947,-.121975,1.037704,.165023,1.111783,-.101744,1.0333,.138228,1.125525,-.081476,1.028234,.110679,1.135873,-.06077,1.021695,.082672,1.142478,-.040207,1.013838,.054506,1.147889,-.019908,1.006166,.026938,1.153852,204e-6,.999983,-123e-6,199e-6,-176e-6,1.771601,.882501,504e-6,-445e-6,1.779195,.882504,.002016,-.001779,1.779635,.882498,.004536,-.004003,1.779586,.882499,.008062,-.007115,1.778613,.882496,.012598,-.011116,1.778678,.882492,.018142,-.016005,1.778531,.882481,.024696,-.021782,1.778556,.882466,.032262,-.028444,1.778507,.882442,.040842,-.035987,1.778385,.882408,.050436,-.044404,1.778034,.882364,.061053,-.053695,1.777761,.882287,.072692,-.063842,1.777256,.88219,.085364,-.074821,1.776518,.882067,.099064,-.086368,1.77508,.881884,.113828,-.098805,1.773836,.881657,.129649,-.11209,1.77237,.881361,.146518,-.126067,1.770594,.880982,.16444,-.140493,1.768089,.880484,.183437,-.155646,1.765301,.879843,.203468,-.171266,1.761698,.879035,.224562,-.187231,1.757518,.877982,.246665,-.20354,1.752318,.876667,.269652,-.219916,1.745356,.875028,.293531,-.236255,1.737186,.872977,.318048,-.25241,1.726709,.870448,.342963,-.268192,1.713109,.8674,.368336,-.283587,1.698087,.863882,.393512,-.298186,1.678638,.859724,.418602,-.311882,1.655604,.854835,.44508,-.3245,1.63225,.848353,.472289,-.335295,1.605069,.840218,.499128,-.344256,1.573846,.830556,.525834,-.351716,1.54112,.819269,.553177,-.358241,1.511385,.806222,.57948,-.36264,1.477866,.791647,.605205,-.365513,1.444218,.775398,.630617,-.366822,1.410954,.757144,.65573,-.366785,1.37901,.737323,.680529,-.364904,1.34728,.715601,.7058,-.36099,1.316416,.691547,.73055,-.355397,1.286344,.666141,.75497,-.348664,1.258954,.638929,.779042,-.340774,1.232965,.611015,.802839,-.331767,1.209775,.581877,.825793,-.321054,1.185813,.551509,.849512,-.309016,1.16508,.519698,.87312,-.296369,1.147091,.487506,.895942,-.282704,1.129658,.45532,.917996,-.268007,1.113463,.422605,.941281,-.252329,1.10004,.389347,.964584,-.236203,1.087973,.35643,.986371,-.219209,1.075983,.323089,1.009522,-.201588,1.06694,.290806,1.031976,-.183296,1.057999,.258682,1.053461,-.164509,1.049542,.227722,1.076121,-.145165,1.043718,.197439,1.096597,-.125199,1.039607,.169578,1.113908,-.104921,1.035528,.142222,1.127939,-.083623,1.029807,.113802,1.138391,-.062589,1.023312,.085164,1.14511,-.041376,1.014806,.056186,1.150141,-.020433,1.006501,.027654,1.156069,97e-6,.999949,-46e-6,2e-4,-185e-6,1.858268,.927857,504e-6,-468e-6,1.861583,.927859,.002016,-.00187,1.860659,.927855,.004535,-.004208,1.860963,.927867,.008063,-.00748,1.860766,.927855,.012594,-.011683,1.859996,.927851,.018142,-.016828,1.860739,.927839,.024698,-.022901,1.860763,.927818,.032263,-.029903,1.860501,.927791,.040846,-.037834,1.860431,.927751,.05044,-.04668,1.859827,.92769,.061066,-.056446,1.859624,.92761,.072713,-.067109,1.859039,.927505,.085393,-.078613,1.858144,.927357,.09912,-.090747,1.856618,.927145,.11391,-.10385,1.855221,.926884,.129755,-.117777,1.85347,.926546,.146669,-.132441,1.851413,.926104,.164648,-.147565,1.848498,.92553,.183708,-.16347,1.845281,.924802,.203832,-.179763,1.841273,.923871,.225029,-.196564,1.836481,.922691,.247221,-.213537,1.830273,.921198,.270343,-.230662,1.822374,.91932,.294399,-.24774,1.812975,.917008,.31904,-.264448,1.800693,.914141,.344269,-.280831,1.785923,.910707,.369625,-.296478,1.767203,.906585,.394925,-.311287,1.744434,.901918,.420583,-.325578,1.720938,.89624,.4462,-.338384,1.693005,.889335,.472969,-.349187,1.660901,.880394,.50049,-.358687,1.628806,.869705,.527312,-.366042,1.593001,.857145,.554207,-.372045,1.557046,.842943,.58062,-.376134,1.520192,.826837,.60648,-.378636,1.482947,.808891,.631815,-.379414,1.445954,.789119,.657021,-.378972,1.410833,.767564,.681686,-.376728,1.376575,.744338,.706498,-.372844,1.342935,.718799,.731258,-.366649,1.311052,.691756,.755937,-.359354,1.280478,.662683,.779259,-.350487,1.250585,.632892,.803295,-.340941,1.225722,.60216,.82657,-.330174,1.201003,.57052,.849954,-.317854,1.178488,.537651,.873696,-.304426,1.158302,.503799,.896695,-.29012,1.139886,.469645,.919149,-.275106,1.122884,.435625,.942121,-.259282,1.107691,.401228,.964627,-.242123,1.093661,.367086,.986614,-.224575,1.08158,.332885,1.009623,-.206837,1.071375,.299209,1.033126,-.188092,1.062241,.266187,1.054954,-.168637,1.052912,.233733,1.07766,-.149166,1.047047,.203192,1.097983,-.128587,1.041607,.173918,1.115586,-.107339,1.03685,.145531,1.13017,-.086203,1.031427,.11689,1.141018,-.064171,1.024395,.087388,1.147681,-.04253,1.015719,.057733,1.15256,-.021011,1.006883,.028413,1.158406,158e-6,.999897,-106e-6,2e-4,-195e-6,1.950982,.975366,504e-6,-491e-6,1.950207,.975365,.002015,-.001966,1.950675,.975362,.004535,-.004423,1.951281,.97537,.008062,-.007863,1.951045,.975362,.012597,-.012285,1.951199,.975356,.018145,-.017692,1.951528,.97534,.024699,-.024074,1.951194,.975321,.032266,-.031434,1.950865,.975288,.040853,-.039771,1.951038,.975244,.050452,-.049067,1.950336,.975173,.061077,-.059324,1.949805,.975078,.072736,-.070526,1.949133,.974951,.085431,-.082528,1.947947,.974777,.099182,-.095345,1.946337,.97454,.113999,-.109118,1.944725,.974241,.129888,-.123741,1.942857,.973852,.146842,-.139071,1.940251,.973342,.16489,-.154986,1.937086,.972684,.184025,-.171661,1.933404,.971856,.204245,-.188672,1.92877,.970785,.225528,-.206252,1.923041,.969448,.247841,-.223972,1.915788,.967742,.271157,-.241827,1.907008,.965607,.295297,-.259562,1.895854,.963007,.320121,-.276909,1.881289,.959722,.345566,-.293883,1.864528,.955831,.371012,-.309816,1.842062,.951127,.396834,-.325157,1.818068,.945725,.422277,-.339357,1.788874,.939318,.447928,-.352387,1.758283,.93147,.474315,-.36368,1.723668,.9219,.50156,-.372963,1.686081,.909996,.528391,-.380159,1.645816,.896244,.554754,-.385545,1.603709,.880326,.581888,-.389778,1.565475,.862716,.607791,-.391839,1.524196,.843146,.633511,-.392331,1.483921,.821554,.658621,-.391193,1.445013,.798336,.68316,-.388424,1.406963,.773299,.707429,-.384104,1.370996,.746668,.732212,-.377945,1.335879,.717502,.756871,-.369856,1.302489,.686954,.781065,-.360707,1.271815,.655372,.804167,-.350091,1.242416,.622683,.827948,-.338941,1.217208,.589185,.850901,-.326427,1.192354,.555005,.873589,-.312199,1.169639,.519594,.897085,-.297374,1.150181,.484105,.920459,-.281932,1.132858,.448661,.942637,-.265625,1.115401,.413051,.965341,-.248332,1.101078,.377329,.98753,-.229983,1.087377,.342349,1.010739,-.211647,1.076582,.307824,1.033449,-.192725,1.0659,.273368,1.055618,-.172726,1.056958,.240238,1.079345,-.15264,1.04962,.208322,1.100058,-.131931,1.044084,.178242,1.118547,-.110351,1.039387,.149493,1.132748,-.088128,1.033049,.119673,1.143419,-.066069,1.025521,.089728,1.150316,-.043513,1.016378,.059253,1.155208,-.021593,1.007506,.02914,1.160871,111e-6,.999916,-35e-6,201e-6,-206e-6,2.061,1.025243,504e-6,-516e-6,2.049647,1.025237,.002015,-.002066,2.050169,1.025237,.004535,-.00465,2.051254,1.025255,.008063,-.008266,2.051302,1.025236,.0126,-.012915,2.051508,1.025226,.018144,-.018594,2.050981,1.025215,.0247,-.025304,2.050841,1.02519,.032267,-.033038,2.050537,1.025152,.040852,-.041795,2.05066,1.02509,.05046,-.05157,2.049921,1.025017,.061094,-.062347,2.04935,1.024908,.072762,-.074111,2.048517,1.02476,.085475,-.086661,2.047009,1.024555,.099249,-.10016,2.045261,1.024278,.114106,-.114628,2.043508,1.023941,.130032,-.130002,2.041321,1.023488,.14705,-.145985,2.038299,1.022905,.165164,-.162762,2.034658,1.022151,.18438,-.180172,2.030312,1.0212,.204704,-.198022,2.024944,1.019966,.226129,-.216359,2.018546,1.018424,.248582,-.234923,2.010153,1.016519,.272011,-.253474,1.999659,1.014072,.296259,-.27182,1.986076,1.011071,.321423,-.289959,1.970618,1.007389,.346897,-.307283,1.949667,1.002955,.37275,-.323817,1.925287,.997633,.398603,-.339241,1.896006,.991354,.424351,-.353633,1.863658,.983937,.449887,-.36666,1.82743,.975254,.475715,-.378213,1.789521,.964753,.502204,-.387133,1.745632,.951594,.530179,-.394976,1.705347,.936344,.556732,-.400134,1.658928,.918907,.583123,-.403439,1.613077,.899504,.609477,-.405285,1.567884,.878172,.634927,-.405055,1.523507,.854396,.660357,-.403494,1.481712,.829259,.684851,-.400104,1.439,.802359,.709654,-.395536,1.400956,.773534,.733472,-.388996,1.362156,.74323,.757502,-.380263,1.325113,.71109,.782249,-.370594,1.292913,.677166,.806017,-.359509,1.262088,.642527,.828687,-.347126,1.232059,.607589,.852372,-.334474,1.20716,.571938,.874266,-.320074,1.181978,.535518,.898168,-.304719,1.161156,.498375,.920456,-.288246,1.140667,.461179,.942832,-.271311,1.12278,.424533,.966458,-.254154,1.108743,.387784,.988907,-.235659,1.093872,.351689,1.011557,-.216322,1.081959,.315743,1.035099,-.197007,1.070885,.280402,1.056354,-.176878,1.059968,.246472,1.079854,-.156058,1.051815,.212818,1.101494,-.134772,1.045757,.182143,1.120587,-.113071,1.041169,.152867,1.135399,-.090411,1.034844,.122796,1.146612,-.067477,1.026974,.091888,1.153168,-.044849,1.017303,.060779,1.157912,-.021998,1.007735,.029919,1.163607,121e-6,.999959,3e-6,2e-4,-216e-6,2.163956,1.077737,504e-6,-543e-6,2.161128,1.077732,.002016,-.002173,2.162732,1.077729,.004535,-.004887,2.161402,1.077749,.008066,-.008692,2.163252,1.077732,.012599,-.013576,2.1613,1.077727,.018145,-.019546,2.161151,1.077702,.024702,-.026599,2.161223,1.077675,.032272,-.034729,2.160949,1.077632,.040862,-.043936,2.160967,1.077575,.05047,-.054203,2.160035,1.077473,.061113,-.065528,2.15949,1.077348,.072794,-.077882,2.158517,1.077178,.085528,-.09103,2.156605,1.076937,.099337,-.105251,2.154828,1.076631,.114228,-.120456,2.152812,1.076229,.130202,-.136573,2.150298,1.075713,.147284,-.153306,2.146752,1.075031,.16548,-.170931,2.142744,1.074173,.184793,-.189083,2.137475,1.073063,.205224,-.20784,2.13132,1.071683,.226743,-.226939,2.123154,1.069914,.249401,-.246344,2.114086,1.067718,.272955,-.26564,2.101599,1.064924,.297494,-.284846,2.086612,1.061512,.322731,-.303452,2.067356,1.057359,.348451,-.32133,2.043711,1.052294,.374451,-.338201,2.015033,1.046153,.400454,-.353816,1.981139,1.039003,.426434,-.368216,1.944128,1.030498,.452088,-.381251,1.903094,1.020454,.477901,-.392833,1.860402,1.008793,.504173,-.402408,1.814402,.994791,.53152,-.409545,1.766273,.977733,.558049,-.414351,1.714119,.958625,.584778,-.417437,1.664612,.937189,.610808,-.418519,1.613793,.913543,.636915,-.418094,1.565942,.888137,.662204,-.415742,1.518783,.860728,.686848,-.411746,1.473306,.831793,.710992,-.406153,1.430153,.800862,.735382,-.399519,1.389824,.768768,.759079,-.390927,1.350744,.734825,.782912,-.380111,1.313559,.69945,.806746,-.368383,1.280028,.663191,.830269,-.355606,1.249814,.625927,.853305,-.341988,1.221138,.588644,.876326,-.327545,1.195837,.550849,.898322,-.311779,1.171844,.512694,.921811,-.294944,1.150671,.474225,.944563,-.277333,1.132224,.435772,.967089,-.25934,1.115422,.398001,.989754,-.240836,1.100405,.360802,1.01247,-.221293,1.086533,.323566,1.036426,-.201191,1.075496,.287387,1.058709,-.18059,1.064233,.252184,1.081593,-.15981,1.055296,.218441,1.103146,-.137772,1.047978,.186223,1.122814,-.115347,1.042693,.156019,1.13779,-.092582,1.036049,.125579,1.149184,-.069152,1.027944,.093986,1.156062,-.045661,1.018039,.062122,1.160733,-.022719,1.008072,.03065,1.166487,231e-6,1.000063,-12e-5,201e-6,-228e-6,2.308308,1.133128,504e-6,-571e-6,2.283756,1.133123,.002016,-.002284,2.283756,1.133123,.004535,-.005138,2.28331,1.133144,.008048,-.009119,2.266192,1.133138,.0126,-.014274,2.284377,1.13311,.018147,-.020553,2.284204,1.133093,.024702,-.027964,2.283517,1.13306,.032272,-.03651,2.282997,1.133007,.040866,-.046188,2.282986,1.13293,.050481,-.056979,2.28226,1.132824,.061133,-.068881,2.281533,1.132678,.07283,-.08185,2.280504,1.132481,.085592,-.095657,2.278304,1.132202,.099431,-.110594,2.276269,1.131845,.11436,-.12659,2.27389,1.131383,.130388,-.143454,2.270761,1.130784,.147547,-.161029,2.266794,1.130003,.165836,-.179523,2.262332,1.129016,.185269,-.198527,2.256326,1.127738,.205822,-.218138,2.249031,1.126156,.227527,-.238141,2.239993,1.124132,.250325,-.258302,2.228878,1.121594,.27407,-.278329,2.214204,1.118449,.298793,-.29831,2.196654,1.114528,.324131,-.317462,2.173394,1.109783,.350101,-.335853,2.146395,1.103901,.376293,-.353064,2.112341,1.096954,.402547,-.36895,2.0737,1.088642,.428791,-.383462,2.031152,1.078946,.454976,-.396635,1.986661,1.067536,.480566,-.407873,1.937038,1.054403,.506154,-.417303,1.885155,1.038894,.532862,-.424194,1.830369,1.020535,.560354,-.429344,1.776976,.999295,.587114,-.431949,1.721214,.97599,.613345,-.432547,1.665739,.950239,.639335,-.431338,1.6122,.922467,.664996,-.428473,1.561035,.892593,.688947,-.423355,1.50824,.861325,.713403,-.417235,1.461776,.828289,.737649,-.409848,1.418888,.793863,.761275,-.400901,1.376807,.758074,.784778,-.390174,1.337204,.721974,.808762,-.377683,1.301527,.682718,.831993,-.364037,1.267144,.644001,.854696,-.349494,1.236023,.605478,.877933,-.334499,1.209284,.565588,.90018,-.318435,1.183967,.526138,.923039,-.301669,1.161513,.486524,.945895,-.283298,1.140838,.446747,.968069,-.264438,1.122475,.408041,.991179,-.245463,1.106968,.369477,1.012926,-.22568,1.091435,.331626,1.036995,-.205401,1.079561,.294288,1.060909,-.18431,1.068215,.257696,1.083531,-.162846,1.058133,.223343,1.105644,-.14104,1.050851,.190541,1.125691,-.117965,1.045001,.15931,1.141297,-.094377,1.038028,.128238,1.152672,-.070831,1.029694,.096282,1.159333,-.046853,1.019136,.06372,1.163819,-.022991,1.008518,.031234,1.169564,125e-6,1.000069,-24e-6,202e-6,-241e-6,2.458341,1.191742,504e-6,-6e-4,2.418738,1.19174,.002015,-.002401,2.418821,1.19173,.004535,-.005405,2.421986,1.191756,.008071,-.009618,2.424988,1.191753,.0126,-.015012,2.420242,1.191727,.018145,-.021612,2.419937,1.191703,.024704,-.02941,2.419746,1.191662,.032278,-.038398,2.419409,1.191604,.040874,-.048574,2.418995,1.191515,.050496,-.05992,2.41819,1.191389,.06116,-.072432,2.417487,1.191221,.072871,-.086009,2.415853,1.190984,.085664,-.100559,2.413669,1.190664,.099543,-.116283,2.411423,1.190256,.11452,-.133071,2.408711,1.189719,.130616,-.15067,2.4049,1.189019,.147856,-.169197,2.400512,1.188125,.166235,-.188545,2.394939,1.186972,.185804,-.20848,2.388232,1.185515,.206488,-.228883,2.37919,1.183673,.228383,-.249897,2.369208,1.181382,.251305,-.270851,2.355459,1.178478,.275349,-.29178,2.339142,1.174857,.300106,-.312257,2.316655,1.170411,.325849,-.332225,2.29154,1.164883,.351782,-.350862,2.257242,1.158196,.378248,-.368431,2.218671,1.150173,.404674,-.384428,2.17368,1.140703,.431385,-.39923,2.127083,1.129555,.457407,-.411875,2.073236,1.116436,.483275,-.423013,2.018223,1.101373,.509278,-.432624,1.962674,1.084257,.534751,-.439261,1.900814,1.064592,.561895,-.443801,1.839558,1.040881,.588677,-.445872,1.777763,1.015208,.6149,-.445896,1.71655,.987252,.641051,-.444148,1.657984,.957271,.666409,-.440299,1.600832,.924841,.691872,-.435318,1.548237,.891185,.716638,-.428631,1.497572,.855929,.739864,-.419872,1.447043,.819676,.763707,-.410456,1.403648,.781455,.786744,-.39939,1.360844,.742965,.809585,-.386381,1.320529,.70326,.834164,-.372622,1.286467,.662385,.856713,-.357177,1.252306,.621379,.87982,-.341458,1.22307,.580238,.902721,-.325024,1.197115,.539028,.92465,-.307543,1.172314,.498592,.947613,-.289557,1.151171,.45798,.96959,-.269799,1.129986,.417696,.992961,-.250111,1.113321,.377529,1.014582,-.229761,1.097149,.339096,1.038069,-.209375,1.083913,.301119,1.061661,-.188038,1.071241,.263506,1.085069,-.165874,1.060508,.227921,1.107744,-.143437,1.05293,.194062,1.127982,-.120574,1.046396,.162506,1.144541,-.096569,1.03988,.130788,1.155876,-.072039,1.030946,.098057,1.162719,-.047888,1.020124,.064956,1.167089,-.02374,1.008953,.031966,1.172775,277e-6,1.000067,-111e-6,2e-4,-251e-6,2.573709,1.253951,504e-6,-632e-6,2.572401,1.25394,.002015,-.002527,2.571267,1.253927,.004535,-.005687,2.572481,1.253948,.008062,-.010108,2.571851,1.253941,.012588,-.01578,2.568431,1.253934,.018139,-.022731,2.569765,1.253893,.024709,-.030948,2.572115,1.253853,.032283,-.040401,2.571456,1.253785,.040883,-.051105,2.571041,1.253683,.050514,-.063041,2.570153,1.253538,.061188,-.076195,2.569085,1.253336,.072926,-.090402,2.567184,1.253065,.085746,-.105745,2.564731,1.252697,.099661,-.122296,2.561995,1.252218,.114699,-.139912,2.559019,1.25159,.130882,-.158362,2.555017,1.250766,.148202,-.177856,2.549419,1.249744,.166706,-.198049,2.542908,1.248423,.186404,-.219014,2.535205,1.246741,.207272,-.240376,2.524893,1.244596,.229345,-.26223,2.512804,1.241917,.252494,-.284134,2.496923,1.23861,.27669,-.305828,2.476583,1.234474,.301798,-.327107,2.451548,1.229292,.327423,-.3473,2.41863,1.222997,.353848,-.366699,2.381002,1.215366,.380342,-.384421,2.334413,1.206199,.40739,-.400855,2.28566,1.195374,.433913,-.415241,2.228604,1.18229,.460837,-.428275,2.171532,1.167385,.486381,-.438573,2.105639,1.150401,.511959,-.447348,2.040835,1.13099,.537586,-.454152,1.974797,1.109302,.564035,-.458684,1.907895,1.084131,.59069,-.460058,1.839482,1.055803,.61725,-.459662,1.772332,1.025103,.643406,-.45726,1.707313,.992502,.668794,-.452666,1.644722,.957657,.69393,-.446641,1.586832,.92134,.718708,-.439121,1.531197,.883841,.743469,-.430429,1.480765,.844931,.76608,-.419622,1.430338,.804786,.789801,-.408368,1.386295,.764206,.812718,-.395392,1.343758,.722565,.835453,-.380699,1.304655,.680585,.858801,-.364834,1.269287,.637235,.881537,-.348092,1.237493,.594579,.904656,-.331087,1.208862,.552313,.926357,-.312966,1.182365,.51008,.949001,-.294684,1.159452,.468677,.971598,-.275361,1.138706,.426723,.994905,-.254947,1.120552,.385875,1.017981,-.234109,1.104215,.345751,1.04084,-.21304,1.089276,.306762,1.063893,-.191616,1.075845,.269066,1.086907,-.169272,1.063788,.232171,1.109937,-.146076,1.054977,.197826,1.130808,-.122544,1.048572,.165272,1.146831,-.098492,1.040742,.13328,1.158955,-.07371,1.031818,.100262,1.166161,-.04861,1.020747,.066165,1.170491,-.024209,1.00938,.032741,1.176111,1e-5,1.000042,56e-6,202e-6,-267e-6,2.786357,1.320169,504e-6,-665e-6,2.741889,1.320168,.002015,-.00266,2.74,1.320143,.004536,-.005987,2.744276,1.320161,.008063,-.010644,2.743432,1.320162,.0126,-.016628,2.741741,1.320148,.018144,-.023937,2.741314,1.320127,.024708,-.032577,2.741916,1.320061,.03229,-.042536,2.742132,1.319976,.040894,-.053799,2.741199,1.319861,.050533,-.066361,2.740258,1.319691,.061223,-.080202,2.739045,1.319458,.072985,-.095109,2.736519,1.319138,.085841,-.111296,2.733903,1.318715,.099808,-.128685,2.730944,1.318156,.114903,-.147202,2.727293,1.317424,.131164,-.166575,2.722169,1.316485,.148599,-.187019,2.716148,1.315274,.167245,-.20824,2.708701,1.313733,.187078,-.230151,2.698998,1.311792,.208153,-.252538,2.687341,1.309343,.230418,-.275295,2.672621,1.306247,.253802,-.298066,2.653619,1.302374,.278261,-.320673,2.629943,1.297573,.303527,-.342528,2.599228,1.291625,.329571,-.363531,2.562226,1.284374,.355939,-.382963,2.515491,1.275478,.382987,-.401306,2.464858,1.264866,.409917,-.417455,2.404877,1.252184,.437015,-.432067,2.341408,1.237415,.463474,-.444204,2.271837,1.220687,.489835,-.454631,2.200593,1.200973,.516054,-.463338,2.129733,1.179346,.541397,-.469425,2.055635,1.155039,.566798,-.473526,1.980812,1.127866,.593114,-.474632,1.904723,1.097304,.619945,-.473597,1.832456,1.063603,.646325,-.470656,1.761501,1.027971,.67232,-.465675,1.694248,.990692,.697163,-.458527,1.629227,.951582,.721472,-.449904,1.568132,.911197,.745855,-.44014,1.512084,.869745,.770089,-.429338,1.460694,.827648,.792546,-.416701,1.410739,.784728,.815161,-.403151,1.365438,.741884,.837994,-.388714,1.324811,.6978,.86122,-.372573,1.287723,.653341,.883737,-.355024,1.252491,.609455,.906784,-.337092,1.221844,.565275,.928493,-.31837,1.192881,.521558,.951495,-.299605,1.169131,.478149,.973586,-.280067,1.146316,.436325,.9964,-.259823,1.12786,.394409,1.01978,-.238313,1.110521,.353045,1.042775,-.216506,1.093915,.312803,1.066822,-.194695,1.080326,.2741,1.089869,-.17229,1.067722,.236657,1.113606,-.149264,1.058471,.201603,1.134229,-.124814,1.050701,.168398,1.150922,-.10007,1.043051,.135616,1.163224,-.075155,1.033742,.102144,1.169965,-.049933,1.021818,.067532,1.1742,-.024461,1.009916,.033215,1.179766,188e-6,1.000045,-14e-6,202e-6,-281e-6,2.964186,1.39088,505e-6,-702e-6,2.945157,1.390903,.002015,-.002802,2.931184,1.390863,.004535,-.006307,2.935673,1.3909,.008063,-.011213,2.934274,1.39089,.012598,-.017516,2.932216,1.390876,.018147,-.025221,2.933324,1.390832,.024711,-.034322,2.933945,1.390769,.032295,-.04481,2.933496,1.390674,.040904,-.056673,2.932487,1.390538,.050555,-.069906,2.931571,1.390342,.061259,-.084468,2.929914,1.390064,.073053,-.100152,2.927039,1.389695,.085948,-.117202,2.924241,1.389201,.099968,-.135531,2.92076,1.388548,.115135,-.154906,2.915998,1.387692,.131496,-.175352,2.910285,1.386611,.149049,-.196783,2.903174,1.38519,.167848,-.219066,2.894584,1.383407,.187879,-.241983,2.883171,1.381148,.209143,-.265398,2.869102,1.378261,.231689,-.289254,2.852238,1.37469,.255223,-.312776,2.828264,1.370166,.279952,-.33626,2.800175,1.364591,.305572,-.358865,2.764282,1.357758,.33165,-.380223,2.717845,1.349413,.358491,-.400252,2.665326,1.339084,.385445,-.418422,2.602293,1.326773,.412947,-.434993,2.536973,1.312141,.439681,-.448757,2.459463,1.295205,.467272,-.461427,2.38625,1.275573,.493568,-.471102,2.303225,1.2534,.519743,-.47893,2.221945,1.22889,.544882,-.484098,2.136425,1.20173,.57069,-.488125,2.057093,1.172022,.595905,-.489185,1.975334,1.139312,.622747,-.487535,1.895055,1.103038,.648695,-.483482,1.815995,1.064364,.675159,-.478096,1.744272,1.024098,.700714,-.470492,1.675257,.982186,.725641,-.461398,1.609135,.939137,.748552,-.449825,1.545091,.894791,.772808,-.438185,1.489394,.850373,.795928,-.425073,1.437026,.805287,.8189,-.411028,1.389654,.760003,.841633,-.396047,1.345873,.714914,.863213,-.379637,1.305185,.669271,.886662,-.362227,1.269147,.622935,.908504,-.343068,1.234714,.577757,.931425,-.323982,1.204997,.532922,.953835,-.304347,1.178871,.488154,.975813,-.284219,1.155019,.444885,.997662,-.263544,1.133941,.402224,1.021167,-.242611,1.1161,.36053,1.044038,-.220065,1.098348,.318968,1.068837,-.19758,1.084605,.279107,1.092548,-.174779,1.071217,.241111,1.116157,-.151596,1.060486,.204913,1.137486,-.127478,1.052751,.17141,1.154694,-.101915,1.044807,.137999,1.166867,-.076246,1.034824,.103807,1.173715,-.050661,1.022501,.068802,1.178236,-.025355,1.010324,.034155,1.183545,205e-6,1.000059,-11e-5,201e-6,-294e-6,3.16108,1.466721,505e-6,-74e-5,3.155526,1.466737,.002016,-.002957,3.152852,1.466688,.004537,-.006655,3.150654,1.466667,.008066,-.011828,3.153109,1.466694,.012604,-.018479,3.152143,1.466721,.01815,-.026598,3.151025,1.466636,.024714,-.036191,3.1503,1.466562,.032301,-.047249,3.149861,1.46645,.040924,-.059766,3.149548,1.466289,.050579,-.073703,3.147516,1.466055,.061306,-.089022,3.14568,1.465738,.073135,-.105563,3.142428,1.465301,.086075,-.123544,3.139113,1.464715,.100153,-.142853,3.135064,1.463956,.115411,-.163183,3.129509,1.462962,.131876,-.18476,3.122959,1.46167,.14957,-.207172,3.114153,1.460045,.168523,-.230578,3.103626,1.457945,.188784,-.254658,3.090818,1.455279,.210264,-.279114,3.073352,1.451998,.23303,-.30393,3.052592,1.44778,.256959,-.328517,3.025187,1.442568,.281901,-.352755,2.990341,1.436026,.307728,-.375894,2.94682,1.427979,.334197,-.397924,2.892845,1.418249,.360966,-.417914,2.827937,1.40637,.388478,-.436526,2.758006,1.392134,.415567,-.452366,2.674696,1.375244,.443518,-.466917,2.595136,1.35566,.470631,-.478417,2.504173,1.333123,.497419,-.487825,2.413227,1.308181,.523961,-.495064,2.321239,1.280227,.549708,-.499844,2.228911,1.249894,.575296,-.502844,2.138834,1.21713,.600168,-.503368,2.04903,1.181412,.625874,-.501622,1.962267,1.142648,.652164,-.496936,1.8769,1.101268,.678029,-.490319,1.796344,1.057782,.703248,-.481575,1.718925,1.012884,.72852,-.471822,1.648358,.966487,.752577,-.460134,1.581989,.91988,.776163,-.447164,1.520109,.873087,.800016,-.433601,1.465081,.825803,.822176,-.418388,1.412564,.778249,.844873,-.402704,1.366184,.730849,.865955,-.385633,1.321865,.684037,.888173,-.368255,1.283464,.637192,.910994,-.349332,1.249215,.590131,.93427,-.329612,1.218366,.543213,.956653,-.309228,1.189808,.497752,.978476,-.28831,1.163674,.452837,1.000755,-.267243,1.141389,.409481,1.023827,-.246015,1.122012,.367354,1.045572,-.223777,1.103303,.325171,1.070445,-.200837,1.08801,.284442,1.094268,-.177211,1.07365,.245138,1.118639,-.153531,1.063051,.208289,1.139786,-.129074,1.053921,.173607,1.157848,-.104051,1.045968,.140467,1.170697,-.077694,1.035782,.105594,1.177874,-.051393,1.023483,.069898,1.182242,-.025392,1.01062,.034532,1.187612,-32e-6,1.000062,-35e-6,202e-6,-313e-6,3.450327,1.548291,504e-6,-78e-5,3.396162,1.548289,.002015,-.00312,3.395621,1.54826,.004533,-.007019,3.394299,1.548217,.008066,-.012486,3.398803,1.548274,.0126,-.0195,3.396363,1.548245,.018151,-.028076,3.396805,1.548192,.024722,-.038209,3.396384,1.548109,.032306,-.049868,3.395158,1.547979,.040936,-.063077,3.394303,1.547785,.05061,-.077791,3.392979,1.547513,.06136,-.093869,3.38991,1.547134,.073227,-.11138,3.386669,1.546619,.086217,-.130371,3.382974,1.545938,.100364,-.150684,3.378046,1.545039,.115733,-.172116,3.371719,1.54388,.132309,-.194809,3.363764,1.54238,.150174,-.218431,3.353699,1.540462,.16934,-.242954,3.341397,1.538002,.189788,-.268175,3.324957,1.534894,.211581,-.293776,3.304776,1.530954,.234561,-.319619,3.278192,1.526033,.258776,-.345089,3.24491,1.519926,.284059,-.370176,3.203338,1.512296,.310312,-.394171,3.152477,1.502956,.336748,-.416137,3.083616,1.491463,.364029,-.436752,3.010481,1.477493,.391575,-.455102,2.925454,1.460933,.419409,-.471378,2.83438,1.441554,.446811,-.484714,2.733329,1.418861,.474489,-.496021,2.63363,1.393405,.501751,-.504991,2.530935,1.364633,.528488,-.511392,2.426653,1.333234,.554428,-.515395,2.323633,1.299138,.580434,-.517761,2.224964,1.262462,.605474,-.517598,2.127228,1.223784,.629888,-.514946,2.030545,1.182321,.655579,-.510177,1.93907,1.138515,.68194,-.503097,1.852355,1.091502,.707228,-.493537,1.768084,1.043464,.731894,-.482372,1.69084,.994242,.756741,-.470312,1.619277,.944749,.78016,-.456412,1.55343,.894816,.803384,-.441492,1.493357,.845202,.826347,-.425944,1.43783,.795954,.849145,-.409532,1.388578,.746915,.870617,-.391988,1.341527,.698025,.892943,-.374229,1.302188,.649579,.913828,-.355148,1.262877,.601833,.93683,-.335238,1.230136,.554521,.958687,-.313939,1.199596,.507208,.982008,-.292741,1.173619,.461357,1.003691,-.27094,1.149015,.416031,1.027223,-.249102,1.128689,.372457,1.050048,-.226899,1.109444,.330281,1.074105,-.204329,1.092943,.288987,1.098971,-.18056,1.078591,.249075,1.123324,-.155987,1.066885,.211519,1.145445,-.130929,1.057617,.176506,1.162856,-.105269,1.048453,.142345,1.17536,-.079267,1.037439,.107452,1.182514,-.052547,1.024393,.071252,1.186575,-.025744,1.011093,.035019,1.19205,318e-6,1.000013,-152e-6,204e-6,-334e-6,3.909175,1.636412,504e-6,-825e-6,3.678647,1.63641,.002015,-.003298,3.678315,1.636387,.004533,-.007417,3.674126,1.63631,.008062,-.01319,3.676771,1.636376,.012603,-.020613,3.678135,1.636369,.018153,-.029675,3.677315,1.636299,.024723,-.040378,3.676872,1.636196,.032318,-.052708,3.67575,1.636038,.040955,-.06666,3.674803,1.63581,.050645,-.082203,3.672735,1.635494,.061429,-.09915,3.669047,1.635048,.073333,-.117679,3.665401,1.634437,.086388,-.137725,3.661315,1.633634,.10062,-.159081,3.654992,1.632571,.116087,-.181721,3.647341,1.631202,.13282,-.205611,3.637877,1.629432,.150867,-.230542,3.626333,1.627161,.170234,-.256239,3.610671,1.624266,.190981,-.282751,3.591685,1.620589,.213013,-.30943,3.565864,1.615999,.236387,-.336427,3.534826,1.610216,.260943,-.362931,3.493984,1.603047,.286497,-.388644,3.442075,1.59392,.312769,-.412912,3.375973,1.582961,.339832,-.435635,3.299355,1.569343,.367214,-.456181,3.208994,1.553137,.394935,-.474325,3.10891,1.533791,.422935,-.490318,3.001767,1.511093,.451166,-.503827,2.891735,1.485145,.478695,-.514185,2.77343,1.455617,.506313,-.522502,2.657639,1.422946,.533427,-.528119,2.541132,1.387843,.559942,-.53143,2.42695,1.349542,.58515,-.531978,2.312437,1.309303,.6105,-.531054,2.205966,1.26628,.63538,-.528058,2.101993,1.221709,.659852,-.522751,2.00295,1.175062,.685151,-.515026,1.908647,1.125078,.71092,-.50502,1.819389,1.074296,.736066,-.493268,1.735806,1.02242,.760503,-.480032,1.658607,.97023,.785091,-.465986,1.589424,.917077,.807523,-.449721,1.522533,.864888,.830974,-.433461,1.465416,.813006,.852659,-.415808,1.409076,.761689,.874841,-.397855,1.360758,.711258,.896322,-.379041,1.316829,.661721,.918134,-.360048,1.278574,.612263,.939356,-.340108,1.2422,.564369,.961025,-.318877,1.210305,.516506,.984371,-.29713,1.183689,.469342,1.006905,-.274661,1.157466,.42308,1.029941,-.252234,1.135066,.378315,1.052751,-.229268,1.114518,.335169,1.077981,-.206662,1.09776,.293336,1.102542,-.183331,1.082051,.252984,1.126539,-.158797,1.068935,.21499,1.149023,-.133014,1.058996,.178903,1.16755,-.106641,1.050245,.144559,1.179994,-.079952,1.038648,.108667,1.187104,-.053316,1.025284,.072209,1.191406,-.026826,1.011453,.035833,1.196748,226e-6,1.000034,-61e-6,2e-4,-346e-6,3.996419,1.732034,504e-6,-873e-6,4.000138,1.732038,.002016,-.003492,4.002078,1.732012,.004538,-.007859,4.005626,1.731962,.008064,-.013963,3.9985,1.731999,.01259,-.021794,3.995024,1.732004,.018154,-.031406,3.999233,1.731901,.024727,-.042733,3.998497,1.731774,.032327,-.055781,3.997064,1.731599,.040974,-.070543,3.995856,1.731325,.050685,-.086984,3.993839,1.730945,.061506,-.104897,3.989519,1.730417,.073458,-.124506,3.985313,1.729697,.086573,-.145706,3.979984,1.728747,.100909,-.168211,3.972562,1.727491,.116509,-.192198,3.963836,1.725854,.133404,-.21728,3.951919,1.723749,.151659,-.243556,3.937734,1.721093,.171288,-.270611,3.919021,1.71764,.192301,-.298389,3.895171,1.713272,.214683,-.326338,3.864171,1.707825,.238392,-.354394,3.824682,1.700956,.263151,-.381636,3.771168,1.692392,.289155,-.408266,3.709961,1.681769,.315832,-.43307,3.630302,1.668539,.342942,-.455741,3.534719,1.652513,.370892,-.476655,3.431531,1.633428,.398985,-.494692,3.314933,1.610694,.427206,-.510313,3.189741,1.58424,.455266,-.52276,3.058325,1.554195,.483472,-.532872,2.927213,1.520805,.511192,-.540229,2.794112,1.484026,.538706,-.545105,2.663786,1.443796,.565422,-.547251,2.534841,1.401429,.59127,-.547115,2.408437,1.356231,.616787,-.545113,2.291284,1.308887,.64138,-.540853,2.177478,1.260447,.665344,-.534561,2.069265,1.210634,.690147,-.527115,1.969776,1.158569,.714578,-.516171,1.870847,1.104593,.740349,-.504048,1.782674,1.049578,.764563,-.489683,1.698614,.994458,.78871,-.474541,1.624447,.938612,.812154,-.458099,1.554453,.883694,.834566,-.440345,1.490045,.83022,.857486,-.422491,1.432889,.776499,.879224,-.403588,1.380669,.724257,.899971,-.383819,1.333124,.673311,.922111,-.36425,1.292648,.622999,.942842,-.343873,1.253933,.573304,.964398,-.323206,1.221027,.52509,.98686,-.301711,1.191806,.47758,1.00976,-.278695,1.165162,.430624,1.033347,-.255591,1.141715,.384482,1.055937,-.232039,1.119739,.340532,1.081178,-.208664,1.102117,.297311,1.105696,-.184935,1.085062,.256227,1.129575,-.160673,1.070918,.217709,1.152135,-.135414,1.060642,.181471,1.171221,-.108462,1.051041,.14638,1.184412,-.081008,1.039694,.11012,1.19182,-.05371,1.025903,.073052,1.196195,-.026625,1.011816,.036129,1.201677,-175e-6,.999945,98e-6,196e-6,-36e-5,4.100786,1.83629,504e-6,-925e-6,4.370184,1.836295,.002018,-.003706,4.385247,1.836243,.004534,-.008324,4.370146,1.83621,.008064,-.014805,4.372335,1.836256,.012597,-.023116,4.359918,1.836259,.018158,-.033299,4.371503,1.836123,.024732,-.045301,4.370533,1.835988,.032344,-.059143,4.369649,1.835768,.040999,-.074779,4.367861,1.835454,.050739,-.092178,4.364322,1.834974,.061594,-.111161,4.359221,1.834355,.073604,-.131958,4.35462,1.833499,.086796,-.154393,4.347915,1.832355,.101246,-.178201,4.339152,1.83088,.11699,-.203531,4.328327,1.828936,.134086,-.230043,4.31424,1.826442,.152589,-.257718,4.296795,1.82323,.172514,-.286176,4.273985,1.819124,.193853,-.315295,4.244136,1.813909,.216582,-.344507,4.205152,1.80741,.240668,-.373646,4.154781,1.799084,.265904,-.401897,4.091563,1.788905,.292226,-.429136,4.013199,1.776206,.319045,-.454057,3.912886,1.7605,.346721,-.477219,3.800927,1.741586,.374849,-.497883,3.675652,1.718818,.403078,-.515504,3.536892,1.692138,.431597,-.530621,3.391351,1.661434,.460246,-.542852,3.242817,1.626989,.488899,-.552238,3.093685,1.588582,.517215,-.559045,2.944163,1.5463,.54448,-.562351,2.794189,1.501299,.571542,-.563394,2.650239,1.453758,.598167,-.56259,2.513757,1.403321,.624104,-.559636,2.384203,1.352431,.648789,-.554148,2.259149,1.298758,.672715,-.546779,2.14025,1.244943,.696258,-.537896,2.030401,1.189971,.720048,-.527401,1.928311,1.134526,.744078,-.514142,1.830175,1.076504,.768895,-.499352,1.740731,1.018032,.792551,-.482982,1.658911,.96025,.817007,-.466406,1.586579,.903029,.839035,-.447616,1.516969,.846484,.862742,-.429261,1.458675,.79142,.884307,-.409479,1.402989,.737125,.905641,-.389303,1.352817,.683912,.926185,-.368344,1.306684,.63269,.947229,-.347366,1.267395,.581739,.969502,-.32672,1.233192,.532305,.990758,-.304973,1.201017,.484166,1.012749,-.282816,1.173018,.437385,1.035533,-.259084,1.147184,.390755,1.059915,-.235239,1.125388,.345399,1.084348,-.211044,1.105859,.301356,1.109544,-.186698,1.088888,.259708,1.13377,-.1619,1.073848,.220324,1.157553,-.136604,1.06319,.183857,1.176461,-.110428,1.05311,.148521,1.190137,-.082898,1.041484,.112124,1.197215,-.054554,1.026844,.07416,1.201654,-.026744,1.012264,.036527,1.207085,399e-6,1.000034,-201e-6,191e-6,-373e-6,4.194318,1.950551,504e-6,-983e-6,4.80435,1.950552,.002015,-.003931,4.80282,1.950518,.004536,-.008847,4.805254,1.950472,.008064,-.015725,4.804152,1.950517,.012693,-.02474,4.826828,1.949914,.018159,-.035365,4.803103,1.950349,.02474,-.048122,4.80322,1.950183,.032361,-.062822,4.801522,1.949917,.041034,-.07943,4.799593,1.949538,.050815,-.097841,4.797179,1.948972,.061702,-.118026,4.789557,1.948246,.073766,-.140112,4.783293,1.947204,.087066,-.163819,4.775698,1.945855,.101637,-.189122,4.764612,1.944052,.117558,-.215884,4.751486,1.94171,.134884,-.243968,4.734791,1.938727,.153637,-.27317,4.712078,1.934891,.17389,-.303146,4.683575,1.929976,.195643,-.333704,4.646766,1.92374,.218767,-.36417,4.596814,1.915888,.243337,-.39453,4.535509,1.90597,.26886,-.423512,4.452006,1.893623,.295173,-.450609,4.345682,1.878286,.322784,-.476488,4.231632,1.859391,.350616,-.49942,4.093553,1.836912,.379127,-.519862,3.944127,1.809625,.40786,-.537373,3.782223,1.778529,.436717,-.551802,3.615563,1.742684,.465345,-.562951,3.440672,1.702289,.494158,-.571334,3.26807,1.658666,.522896,-.577227,3.100668,1.611027,.551379,-.580514,2.937615,1.559742,.578992,-.58061,2.778703,1.507257,.605095,-.577729,2.621626,1.451941,.630653,-.573,2.476506,1.395218,.656175,-.566944,2.341592,1.337862,.681036,-.558988,2.216478,1.279275,.704713,-.549211,2.096972,1.220526,.726894,-.53719,1.983311,1.161709,.749865,-.524167,1.8811,1.102095,.773553,-.508991,1.785637,1.042039,.797102,-.491658,1.697234,.981588,.821187,-.474093,1.62025,.921265,.843848,-.45498,1.547071,.862757,.866662,-.435421,1.482008,.8047,.888696,-.41499,1.424116,.749432,.910945,-.394472,1.372658,.694767,.9323,-.373239,1.325157,.641106,.95285,-.351347,1.282217,.589689,.974718,-.329809,1.244897,.539322,.996445,-.307902,1.212306,.490083,1.01758,-.285392,1.181402,.442702,1.040342,-.262782,1.155996,.395911,1.064399,-.238995,1.131708,.350206,1.089464,-.214297,1.111215,.305175,1.115565,-.189293,1.093094,.262686,1.14064,-.163843,1.077994,.223078,1.163824,-.137789,1.066014,.185651,1.182577,-.111087,1.055615,.150045,1.195775,-.083945,1.04294,.113457,1.203175,-.056145,1.028015,.075453,1.207282,-.027685,1.012552,.037217,1.213019,362e-6,.999938,-293e-6,187e-6,-388e-6,4.316009,2.0765,504e-6,-.001048,5.317799,2.076499,.002014,-.004182,5.306557,2.076523,.004539,-.009425,5.317505,2.076453,.008063,-.016737,5.312143,2.07641,.012614,-.026171,5.316434,2.076389,.018158,-.037641,5.307836,2.076265,.024767,-.051266,5.315297,2.076044,.032372,-.066859,5.307433,2.075743,.041066,-.084538,5.304809,2.07527,.050871,-.104062,5.299277,2.074622,.061821,-.125613,5.293419,2.073708,.07397,-.149085,5.286629,2.072457,.087375,-.174214,5.275937,2.070804,.102105,-.201136,5.263267,2.068647,.118223,-.229505,5.246309,2.065846,.135814,-.259217,5.225496,2.062189,.154887,-.28999,5.19658,2.057566,.17551,-.321618,5.160716,2.051593,.197636,-.353632,5.112202,2.043949,.221168,-.385303,5.046981,2.034445,.246099,-.416511,4.965386,2.022368,.27207,-.446377,4.860735,2.00716,.29909,-.474279,4.73514,1.988598,.326702,-.499809,4.584962,1.965865,.355017,-.52279,4.420447,1.938705,.383856,-.542755,4.241942,1.90637,.413059,-.559903,4.053302,1.869455,.441882,-.573174,3.852753,1.827946,.471516,-.584151,3.660377,1.781652,.500872,-.591843,3.466027,1.730885,.529677,-.596253,3.272812,1.676821,.557683,-.597604,3.084286,1.620064,.585652,-.596591,2.906111,1.560909,.612819,-.593138,2.738258,1.500318,.639848,-.588245,2.584172,1.438127,.664758,-.58014,2.430697,1.375746,.688754,-.570189,2.290701,1.312727,.712848,-.55942,2.162679,1.250063,.735111,-.54657,2.042186,1.18784,.757521,-.532944,1.933435,1.125513,.780056,-.517981,1.833524,1.063827,.802513,-.500724,1.739053,1.002154,.825462,-.481625,1.652381,.939811,.848973,-.462327,1.57756,.878279,.871521,-.441928,1.509291,.8192,.892325,-.420297,1.443799,.761607,.914935,-.399072,1.389647,.705351,.936429,-.377232,1.339903,.650213,.957614,-.355091,1.295467,.597773,.979578,-.332767,1.256692,.545914,1.00086,-.310147,1.221666,.495661,1.02255,-.287395,1.190775,.448026,1.045005,-.264582,1.162641,.40049,1.068703,-.241464,1.138358,.354088,1.093098,-.217504,1.115973,.309812,1.11923,-.19214,1.096284,.266297,1.144608,-.165975,1.080042,.225831,1.168599,-.139174,1.067749,.187761,1.18797,-.11191,1.056635,.151322,1.20124,-.083978,1.043566,.114337,1.208895,-.056089,1.028366,.076083,1.213344,-.028369,1.013074,.037735,1.21922,-534e-6,.999968,76e-6,182e-6,-404e-6,4.433519,2.216201,504e-6,-.001117,5.911693,2.216198,.002017,-.004469,5.919142,2.21619,.004536,-.010051,5.913172,2.21613,.008065,-.017867,5.911791,2.216145,.012467,-.027603,5.785357,2.216447,.018156,-.040159,5.901121,2.215958,.024758,-.05467,5.908781,2.215654,.032395,-.071352,5.906098,2.215283,.041108,-.090201,5.902558,2.214715,.050955,-.111004,5.895707,2.213905,.061968,-.134002,5.888736,2.212807,.074206,-.159038,5.880633,2.211303,.087742,-.185801,5.867001,2.209297,.102652,-.214368,5.851446,2.206657,.119006,-.244573,5.830722,2.203232,.136883,-.276067,5.802688,2.198778,.156335,-.30866,5.767185,2.193091,.177396,-.34194,5.719726,2.185858,.20007,-.375591,5.658792,2.176584,.224067,-.408564,5.573508,2.164759,.24942,-.440668,5.465696,2.149777,.275879,-.471138,5.332207,2.131225,.303307,-.499204,5.173339,2.108794,.331189,-.524547,4.985102,2.080585,.359932,-.547256,4.785788,2.047792,.389063,-.566479,4.569344,2.009518,.418725,-.583031,4.349557,1.965601,.448181,-.595809,4.121278,1.916911,.477703,-.605102,3.892291,1.86353,.507999,-.612462,3.676557,1.806286,.536889,-.615451,3.456241,1.745841,.565778,-.616029,3.249464,1.681137,.593863,-.613644,3.050273,1.615238,.62077,-.608268,2.859599,1.548003,.647171,-.601116,2.683287,1.480447,.673458,-.59284,2.524036,1.412084,.698064,-.581973,2.371046,1.34513,.721011,-.568963,2.229104,1.27844,.744293,-.555642,2.103213,1.212448,.766314,-.540934,1.98537,1.146287,.788164,-.525271,1.878842,1.0826,.809019,-.507986,1.779821,1.019978,.830947,-.489717,1.69163,.956931,.853732,-.469345,1.607513,.894207,.874904,-.447618,1.531176,.833436,.897289,-.426124,1.467302,.773611,.919226,-.404025,1.408321,.716016,.94086,-.381454,1.356209,.659515,.962764,-.358901,1.310082,.604629,.984322,-.335983,1.268485,.552335,1.005343,-.312533,1.230662,.501591,1.028153,-.289452,1.199168,.452032,1.049283,-.265754,1.168575,.404347,1.073687,-.242571,1.143533,.357445,1.097546,-.218681,1.119859,.312534,1.12334,-.194465,1.099634,.269437,1.148166,-.168797,1.081968,.228586,1.172518,-.141552,1.068789,.189866,1.19293,-.113325,1.057548,.152772,1.206816,-.0848,1.044145,.11539,1.215045,-.056019,1.028938,.076493,1.220048,-.027733,1.013338,.037767,1.225852,5e-5,.999927,-16e-5,178e-6,-422e-6,4.587902,2.372253,504e-6,-.001195,6.624675,2.372248,.002016,-.004782,6.626884,2.372187,.004531,-.010746,6.607379,2.372318,.008081,-.019161,6.640102,2.372084,.012637,-.029945,6.653708,2.372128,.018167,-.042999,6.623837,2.371902,.024769,-.058516,6.624484,2.371595,.032421,-.07637,6.620877,2.37112,.041164,-.096474,6.615235,2.370428,.051057,-.118786,6.607844,2.36944,.062136,-.14339,6.599216,2.368075,.07449,-.170034,6.588018,2.366218,.088179,-.198717,6.572526,2.363747,.103307,-.229147,6.551868,2.360517,.119964,-.261253,6.526089,2.356304,.138173,-.294703,6.489593,2.350797,.158072,-.329261,6.443573,2.343783,.179592,-.364298,6.379764,2.334673,.202709,-.399375,6.295845,2.323125,.227335,-.433616,6.184929,2.308547,.25323,-.466794,6.045905,2.28998,.2801,-.497509,5.871803,2.266964,.308146,-.525956,5.672422,2.239074,.336544,-.551101,5.443256,2.204809,.365223,-.572471,5.188034,2.164827,.395484,-.592088,4.943783,2.119489,.424416,-.606026,4.6664,2.067262,.455641,-.619671,4.418961,2.009937,.485298,-.627583,4.152737,1.9489,.514774,-.632072,3.893344,1.882692,.544172,-.634033,3.645332,1.814073,.573283,-.633239,3.414651,1.742717,.602155,-.630008,3.195712,1.669703,.63052,-.62455,2.994536,1.596021,.657121,-.615749,2.799373,1.522572,.682071,-.604738,2.616102,1.448978,.707605,-.593301,2.456112,1.37625,.731492,-.579628,2.303517,1.305297,.754139,-.564473,2.16534,1.235548,.776505,-.548787,2.041646,1.167051,.796833,-.531415,1.923334,1.100534,.817565,-.513778,1.818176,1.035144,.837981,-.495167,1.72383,.971583,.858513,-.47569,1.638448,.908841,.879892,-.454099,1.55942,.846701,.902258,-.432038,1.491471,.785332,.924114,-.409316,1.428878,.726409,.94423,-.385618,1.370785,.668588,.967001,-.362604,1.323529,.612943,.988579,-.339117,1.279679,.559038,1.01021,-.315355,1.240104,.506867,1.032084,-.291408,1.205261,.456934,1.054671,-.267387,1.175197,.407792,1.078314,-.243346,1.148153,.360992,1.102443,-.219205,1.123799,.315577,1.128524,-.194996,1.102624,.271742,1.153989,-.169897,1.085134,.230702,1.17942,-.14396,1.071699,.192146,1.200098,-.116173,1.060179,.155164,1.214837,-.086655,1.04629,.117071,1.222749,-.056956,1.03004,.07745,1.227273,-.027883,1.01365,.038092,1.233293,831e-6,1.000043,-462e-6,173e-6,-442e-6,4.741539,2.547922,504e-6,-.001284,7.491127,2.547919,.002014,-.005132,7.484889,2.547844,.004523,-.011521,7.439875,2.547587,.008059,-.020524,7.483694,2.547725,.012586,-.032029,7.470912,2.547685,.018081,-.045948,7.422534,2.547686,.024783,-.062844,7.487581,2.547107,.032451,-.082011,7.483603,2.546522,.041233,-.10354,7.475124,2.545684,.051181,-.127537,7.467521,2.544438,.062347,-.153921,7.456266,2.542744,.074829,-.182427,7.440422,2.540459,.088703,-.213134,7.420694,2.53738,.10408,-.24575,7.394875,2.533347,.12105,-.279941,7.358515,2.528069,.139697,-.315591,7.313001,2.521237,.160036,-.35198,7.246342,2.512378,.182147,-.388993,7.163688,2.500993,.205799,-.42557,7.048339,2.48645,.231091,-.461093,6.902586,2.468174,.257405,-.494668,6.712721,2.444774,.284956,-.525889,6.491261,2.415538,.31318,-.553693,6.232833,2.38061,.342327,-.578724,5.953834,2.338525,.371689,-.599706,5.649698,2.290256,.401919,-.617615,5.3479,2.235157,.432204,-.631632,5.036417,2.173932,.463151,-.643082,4.735976,2.107298,.493388,-.64997,4.432044,2.036121,.524128,-.654188,4.145472,1.961595,.55393,-.654671,3.866877,1.883602,.583856,-.653051,3.607848,1.804521,.611762,-.646994,3.356237,1.724047,.639117,-.63886,3.122531,1.643016,.666279,-.629093,2.913178,1.563932,.692936,-.617862,2.722675,1.484614,.716498,-.603279,2.536926,1.406734,.742273,-.589878,2.381054,1.331469,.764031,-.572744,2.228312,1.256796,.786601,-.555933,2.095451,1.18529,.807776,-.537992,1.972866,1.11594,.8284,-.519596,1.863394,1.048371,.847412,-.499847,1.76063,.982934,.86685,-.47992,1.670998,.919972,.88634,-.459434,1.587962,.8581,.906933,-.437767,1.515505,.796714,.92749,-.414068,1.448243,.736162,.950217,-.39091,1.390505,.677613,.971545,-.366964,1.337865,.620477,.992901,-.342603,1.291104,.565807,1.01546,-.318596,1.251138,.513086,1.037859,-.294242,1.214291,.461573,1.060535,-.269601,1.182517,.411838,1.086885,-.245608,1.1553,.363221,1.111237,-.220589,1.129715,.317174,1.138718,-.196008,1.108103,.273213,1.164223,-.170408,1.08964,.231968,1.187256,-.144205,1.074145,.192987,1.207851,-.116945,1.061615,.156118,1.222217,-.088852,1.047599,.118674,1.230315,-.059381,1.030869,.078993,1.235052,-.029145,1.014126,.038924,1.241359,479e-6,1.000114,-211e-6,169e-6,-465e-6,4.953966,2.747437,504e-6,-.001384,8.54453,2.74743,.002015,-.005537,8.545147,2.747339,.004542,-.012477,8.557734,2.747125,.008064,-.022143,8.530193,2.747341,.012543,-.034411,8.465151,2.747411,.018178,-.049792,8.543328,2.746874,.02481,-.067784,8.547247,2.746396,.032489,-.088416,8.537436,2.74573,.041313,-.11158,8.526655,2.744596,.051332,-.137462,8.517438,2.743082,.062603,-.16586,8.502803,2.74095,.07524,-.196548,8.481507,2.738057,.089341,-.22944,8.454287,2.734174,.105021,-.264395,8.420289,2.729086,.122399,-.30102,8.373503,2.72242,.141526,-.338997,8.309059,2.713686,.162451,-.377589,8.221539,2.702492,.185098,-.416349,8.100116,2.687893,.209406,-.454284,7.941704,2.669386,.235098,-.49045,7.733318,2.64559,.2621,-.524592,7.48612,2.615709,.290103,-.555558,7.193498,2.579231,.319135,-.583516,6.874796,2.534957,.348286,-.606714,6.516118,2.483017,.37884,-.62785,6.163912,2.424214,.409608,-.644715,5.801404,2.357563,.440553,-.657657,5.435955,2.285835,.470599,-.665621,5.063481,2.20794,.503172,-.673767,4.743532,2.12644,.533884,-.676009,4.413409,2.040694,.563808,-.674536,4.092169,1.953979,.591849,-.668913,3.787057,1.865897,.621474,-.663159,3.520578,1.777762,.6505,-.655018,3.275065,1.689902,.678011,-.643949,3.043141,1.603528,.70349,-.63003,2.827104,1.519484,.72825,-.61491,2.63262,1.436677,.752165,-.598649,2.45557,1.355753,.775894,-.581771,2.295932,1.278884,.79765,-.563193,2.152291,1.202767,.818505,-.54375,2.022099,1.130338,.838596,-.524017,1.903562,1.060263,.858396,-.504064,1.797204,.993077,.877088,-.483418,1.701208,.928606,.896606,-.462786,1.617736,.866039,.914342,-.440943,1.539227,.804293,.93355,-.419129,1.470383,.745206,.955237,-.3961,1.4091,.685832,.9767,-.371743,1.35493,.627953,.997681,-.346882,1.305249,.572127,1.020784,-.322391,1.262603,.517941,1.04384,-.297564,1.225115,.466188,1.067224,-.272639,1.190817,.415499,1.092358,-.247664,1.161265,.366782,1.117573,-.22226,1.133935,.319377,1.14573,-.196933,1.11175,.275293,1.170822,-.170577,1.091981,.233306,1.194559,-.143878,1.07581,.19395,1.214819,-.116347,1.062438,.156724,1.22983,-.088233,1.048092,.118984,1.238185,-.059408,1.031325,.079385,1.243527,-.030703,1.014698,.039893,1.249724,-.00152,.999819,76e-5,164e-6,-489e-6,5.157359,2.9763,505e-6,-.001502,9.891415,2.976286,.002016,-.006,9.85773,2.976197,.004543,-.013519,9.870651,2.975832,.008064,-.023985,9.85578,2.97617,.012611,-.037471,9.850209,2.975941,.018162,-.053866,9.827134,2.974968,.02482,-.07339,9.849955,2.97501,.032545,-.095758,9.842021,2.974073,.041418,-.120834,9.829989,2.9727,.051511,-.148861,9.817421,2.970736,.06292,-.179456,9.797347,2.968033,.075744,-.212674,9.771533,2.964371,.090131,-.248193,9.735924,2.959437,.106187,-.285748,9.687707,2.952881,.124035,-.325017,9.622684,2.944273,.143733,-.365463,9.531452,2.933093,.165262,-.406157,9.401732,2.918484,.188622,-.446833,9.232451,2.899529,.213693,-.486209,9.013432,2.875137,.239987,-.522925,8.725671,2.844166,.267796,-.557452,8.400028,2.805649,.296547,-.588266,8.023041,2.75872,.325838,-.614837,7.606773,2.702676,.355479,-.63676,7.16068,2.638483,.386984,-.65723,6.736765,2.566849,.418853,-.673592,6.313742,2.488091,.450302,-.684966,5.884479,2.402458,.481149,-.691591,5.455771,2.311816,.512177,-.695337,5.055698,2.21733,.543437,-.69637,4.681506,2.121285,.574309,-.694186,4.334716,2.02416,.604787,-.689158,4.008524,1.927738,.633483,-.68058,3.703505,1.830456,.660766,-.669088,3.418386,1.734934,.688471,-.656673,3.168101,1.642316,.715729,-.64282,2.941735,1.550744,.740435,-.626155,2.73057,1.463345,.764114,-.608299,2.537561,1.378151,.787028,-.589519,2.364323,1.29763,.807985,-.569257,2.20797,1.21783,.830663,-.550055,2.076646,1.142746,.850416,-.528812,1.948085,1.070757,.869609,-.507478,1.834684,1.001282,.888324,-.486131,1.734879,.934987,.907482,-.46491,1.645974,.871203,.924829,-.442742,1.56355,.80926,.942958,-.420777,1.491264,.750037,.961999,-.398842,1.428069,.691715,.981043,-.375967,1.369668,.635669,1.002371,-.351469,1.318588,.578689,1.025343,-.326601,1.273628,.524424,1.048511,-.301395,1.234572,.471403,1.072242,-.275835,1.198354,.41995,1.096758,-.2502,1.166392,.370733,1.122781,-.224474,1.138991,.322864,1.150871,-.198592,1.114313,.277723,1.177319,-.171805,1.093534,.23495,1.201765,-.144291,1.077462,.195376,1.222629,-.115949,1.063288,.157315,1.237334,-.08714,1.048366,.118843,1.246153,-.058094,1.031224,.079207,1.25257,-.029194,1.014695,.039376,1.25906,-418e-6,.999881,307e-6,159e-6,-515e-6,5.393984,3.241865,505e-6,-.001636,11.548038,3.241848,.002016,-.006534,11.50664,3.241718,.004537,-.014706,11.51346,3.241196,.008068,-.026134,11.510533,3.241693,.012573,-.040676,11.428978,3.24103,.018212,-.058794,11.510745,3.240924,.024847,-.079926,11.497339,3.240201,.032603,-.10416,11.484607,3.238994,.041543,-.131552,11.470801,3.237182,.051738,-.162012,11.453219,3.234635,.063313,-.19526,11.427244,3.231153,.076381,-.231205,11.388534,3.226361,.091096,-.269678,11.340406,3.219943,.1076,-.31017,11.270127,3.211448,.126017,-.352435,11.178583,3.200168,.146411,-.395551,11.046559,3.185328,.168663,-.438627,10.858624,3.165972,.19273,-.48066,10.606379,3.140735,.218497,-.520987,10.288093,3.108388,.245752,-.558483,9.90748,3.067586,.273993,-.59209,9.453246,3.016931,.303495,-.622416,8.966138,2.956444,.333717,-.648303,8.443776,2.885116,.363928,-.66864,7.894122,2.805963,.39624,-.687748,7.385728,2.718338,.427161,-.699903,6.838511,2.622346,.460175,-.71121,6.356371,2.522476,.492593,-.717734,5.878312,2.417984,.524449,-.719956,5.423285,2.310941,.55601,-.719127,4.997909,2.201885,.587032,-.715077,4.600426,2.09333,.61703,-.707574,4.235885,1.986585,.644684,-.695781,3.881712,1.881279,.674483,-.685313,3.59096,1.777918,.70029,-.669619,3.303138,1.678004,.727892,-.654728,3.057771,1.581162,.751694,-.635727,2.826642,1.487769,.776271,-.617343,2.622178,1.399628,.799502,-.597683,2.441265,1.313195,.821768,-.57709,2.276954,1.232316,.84196,-.555165,2.125744,1.153914,.861582,-.532983,1.991236,1.079598,.88146,-.510933,1.874027,1.008883,.899952,-.488321,1.766812,.940802,.918954,-.466405,1.673436,.875653,.93613,-.443623,1.586986,.81313,.954799,-.421532,1.513558,.752241,.972435,-.398897,1.445787,.694711,.990147,-.376302,1.384382,.63877,1.009189,-.353623,1.331934,.583826,1.029687,-.330635,1.284478,.530476,1.052604,-.305698,1.243632,.477187,1.076524,-.279917,1.204997,.425349,1.101701,-.253951,1.17175,.375165,1.127264,-.227541,1.142519,.326869,1.156397,-.201265,1.116817,.280912,1.18302,-.173943,1.095289,.237447,1.208448,-.14586,1.078296,.196694,1.230417,-.116901,1.064416,.158409,1.248617,-.087507,1.050504,.119483,1.25731,-.057353,1.032796,.079092,1.263076,-.027785,1.015128,.038883,1.26987,.001331,.999935,-557e-6,154e-6,-549e-6,5.705205,3.554136,506e-6,-.001797,13.703335,3.554133,.002014,-.007156,13.614074,3.553937,.004544,-.016145,13.657344,3.553096,.00807,-.028652,13.627997,3.553894,.012584,-.044617,13.606235,3.554,.01818,-.064288,13.581339,3.549637,.024887,-.087627,13.608851,3.552006,.03269,-.114134,13.599099,3.550341,.041705,-.144154,13.579829,3.547982,.052035,-.1774,13.552845,3.544641,.06381,-.213813,13.515619,3.539941,.077171,-.252978,13.46046,3.533696,.092329,-.294852,13.393559,3.524977,.10939,-.338688,13.292376,3.513655,.128455,-.384018,13.147332,3.498484,.149661,-.42996,12.945774,3.478323,.172694,-.475024,12.658979,3.451862,.19765,-.518614,12.289564,3.417602,.224156,-.559298,11.828307,3.372913,.252008,-.59611,11.285162,3.317454,.281165,-.629292,10.684922,3.251171,.311434,-.658379,10.052939,3.172222,.342741,-.683455,9.405296,3.082825,.373543,-.701674,8.716078,2.983976,.407008,-.719664,8.108425,2.876244,.438623,-.729882,7.461252,2.763279,.471872,-.738696,6.880182,2.64559,.5047,-.743136,6.324308,2.52468,.537118,-.743676,5.808302,2.402723,.569412,-.741181,5.332306,2.281437,.598202,-.732348,4.857402,2.161401,.62964,-.724832,4.465554,2.043872,.659239,-.713435,4.093661,1.930129,.686547,-.698539,3.752593,1.817654,.715529,-.684471,3.457593,1.712567,.739456,-.664983,3.17122,1.610687,.764892,-.646322,2.929674,1.512031,.789301,-.626393,2.710719,1.419033,.809881,-.603498,2.506139,1.330115,.833385,-.582934,2.336089,1.245859,.854254,-.560419,2.17847,1.165042,.873964,-.537294,2.040087,1.086633,.893433,-.514264,1.911969,1.015028,.911756,-.490657,1.79984,.944938,.930894,-.467601,1.703188,.878743,.948078,-.444043,1.612092,.815356,.966162,-.421155,1.534444,.753883,.984166,-.398238,1.462397,.695534,1.002184,-.375278,1.400793,.638806,1.019669,-.352159,1.344172,.584549,1.039571,-.329651,1.295227,.53166,1.059989,-.306804,1.251281,.480529,1.081116,-.283345,1.211504,.430071,1.105742,-.258568,1.1764,.380277,1.13308,-.232146,1.144519,.331076,1.161888,-.205244,1.118059,.28404,1.192408,-.177932,1.097561,.239958,1.221043,-.149532,1.082021,.198751,1.244141,-.120046,1.067634,.160114,1.259465,-.089542,1.051626,.121101,1.268124,-.058593,1.033296,.079898,1.27433,-.028011,1.015382,.039038,1.28159,.00233,1.000087,-.001259,149e-6,-587e-6,6.059834,3.927143,507e-6,-.001992,16.5604,3.927149,.002014,-.00791,16.406326,3.926821,.004549,-.017856,16.545532,3.927027,.008064,-.031632,16.375853,3.925487,.01245,-.048749,15.928564,3.928272,.01803,-.070371,16.072989,3.917862,.024964,-.096897,16.458925,3.924489,.032807,-.126073,16.377851,3.921896,.041917,-.159205,16.351561,3.91886,.052416,-.195762,16.307037,3.914339,.064464,-.235784,16.255514,3.907954,.078225,-.278812,16.176226,3.899254,.0939,-.324457,16.06653,3.887455,.111657,-.372174,15.913818,3.871777,.131478,-.42053,15.669197,3.850776,.153574,-.46933,15.355453,3.822348,.177505,-.516029,14.908978,3.785168,.203383,-.560585,14.352687,3.736602,.230569,-.600607,13.666022,3.675046,.259188,-.636296,12.900244,3.599811,.289272,-.668312,12.111226,3.51055,.32049,-.695986,11.292102,3.408535,.353031,-.719848,10.493485,3.295667,.385228,-.737073,9.661955,3.171998,.419219,-.752419,8.909942,3.042428,.452096,-.761179,8.155107,2.907108,.484909,-.766166,7.450609,2.769858,.518306,-.768596,6.811866,2.631935,.550067,-.765683,6.205275,2.49287,.582562,-.761197,5.663215,2.358645,.61445,-.753834,5.165358,2.227377,.644563,-.74286,4.712554,2.097547,.673658,-.729294,4.306101,1.97492,.702857,-.714839,3.943352,1.857613,.72935,-.696774,3.609432,1.743601,.754958,-.677394,3.308389,1.636607,.779575,-.657018,3.043803,1.533841,.800491,-.633342,2.793592,1.437092,.82503,-.612471,2.590307,1.344272,.847535,-.589882,2.406477,1.256436,.865979,-.56485,2.231999,1.173938,.886254,-.541357,2.083556,1.094722,.905566,-.517353,1.950928,1.021107,.924607,-.49332,1.835979,.948941,.943365,-.469366,1.731417,.88106,.960405,-.444745,1.635838,.816479,.977893,-.420493,1.552981,.754604,.996573,-.39715,1.481595,.694917,1.014,-.373483,1.41407,.638445,1.031807,-.349985,1.356031,.584035,1.051877,-.327062,1.305041,.53001,1.071701,-.304134,1.258836,.479439,1.093109,-.280962,1.217297,.429763,1.116681,-.258121,1.182063,.38105,1.143886,-.235365,1.150039,.333395,1.175163,-.211621,1.125074,.287477,1.203675,-.184061,1.102339,.243301,1.230477,-.154815,1.083927,.201826,1.253134,-.124513,1.067989,.162271,1.270092,-.093383,1.052032,.122855,1.279576,-.06177,1.033685,.081639,1.286472,-.030317,1.015583,.040411,1.294476,964e-6,1.000206,-454e-6,144e-6,-63e-5,6.467978,4.381146,504e-6,-.002208,20.193617,4.381151,.002017,-.008834,20.206446,4.380687,.004536,-.019864,20.183254,4.38055,.008174,-.035759,20.564249,4.381247,.012608,-.055034,20.111612,4.38239,.018198,-.079119,20.106096,4.379815,.025057,-.108067,20.215635,4.376874,.032962,-.14063,20.153549,4.374143,.042199,-.17735,20.084061,4.369558,.052928,-.218094,20.026609,4.363287,.065327,-.262407,19.940054,4.354386,.079568,-.309833,19.806814,4.342127,.095961,-.360074,19.641878,4.325533,.114516,-.411747,19.370914,4.30295,.135349,-.463726,18.9839,4.271991,.158293,-.514211,18.433926,4.230856,.183348,-.562511,17.733471,4.17625,.209959,-.60631,16.864214,4.105895,.238736,-.646958,15.935207,4.020104,.268543,-.681574,14.890014,3.916094,.299996,-.712458,13.846786,3.798239,.33193,-.73713,12.758296,3.664191,.365222,-.758156,11.73294,3.521867,.399061,-.774364,10.741743,3.369831,.43348,-.786412,9.812527,3.212079,.467002,-.792373,8.91513,3.053715,.500754,-.79541,8.094276,2.894526,.534023,-.794617,7.342067,2.735959,.566988,-.790689,6.664186,2.58116,.59996,-.784433,6.052983,2.432318,.630599,-.773378,5.486277,2.28763,.660807,-.760334,4.982516,2.150183,.690103,-.74543,4.531104,2.017266,.717315,-.727511,4.120734,1.891699,.743819,-.708376,3.759599,1.77268,.770147,-.688632,3.441912,1.66062,.79351,-.665931,3.1526,1.553166,.816535,-.643045,2.898883,1.45208,.839163,-.619917,2.674488,1.355544,.859066,-.594923,2.469262,1.267232,.879489,-.570343,2.292209,1.181702,.898525,-.544975,2.131086,1.102089,.918359,-.520585,1.994526,1.024744,.937502,-.496044,1.873079,.951712,.955573,-.47101,1.761232,.883374,.972957,-.445712,1.661604,.818008,.991248,-.421201,1.577169,.754446,1.008997,-.396444,1.499653,.694518,1.028127,-.372362,1.43203,.637259,1.04571,-.347895,1.36987,.581515,1.065977,-.324409,1.317341,.527713,1.087469,-.301181,1.270447,.476281,1.109943,-.277866,1.228398,.426403,1.13444,-.254849,1.190986,.377822,1.160986,-.231754,1.157681,.33074,1.188458,-.207973,1.128665,.286014,1.214405,-.183424,1.103711,.2436,1.239504,-.157972,1.084253,.203686,1.262961,-.130607,1.068258,.165214,1.28034,-.099652,1.051919,.126067,1.292129,-.067363,1.034016,.084791,1.299876,-.035026,1.015775,.042786,1.308328,-.002944,.999963,.001385,138e-6,-681e-6,6.943771,4.946556,503e-6,-.002486,25.346689,4.946532,.002016,-.009973,25.49432,4.946311,.004539,-.02244,25.484949,4.945823,.008069,-.039836,25.420902,4.945311,.012628,-.062172,25.394403,4.945041,.018294,-.089609,25.440279,4.943295,.025079,-.121584,25.399988,4.939368,.033142,-.158595,25.356537,4.9362,.042596,-.199971,25.295067,4.929842,.053628,-.245624,25.196465,4.920586,.066496,-.29524,25.055311,4.9077,.081434,-.348006,24.84617,4.889647,.09864,-.403167,24.527803,4.86468,.118231,-.459106,24.051735,4.830574,.140139,-.513907,23.352467,4.78353,.164198,-.565953,22.418245,4.72053,.190502,-.614858,21.324049,4.638075,.21853,-.658304,20.038671,4.535464,.248094,-.696133,18.639786,4.411646,.279435,-.729388,17.234526,4.268872,.312002,-.757534,15.830426,4.109603,.346173,-.781866,14.495901,3.938782,.379435,-.797579,13.136444,3.756138,.414945,-.812334,11.946491,3.571258,.449991,-.821119,10.811908,3.384217,.484636,-.825066,9.763482,3.198076,.518675,-.824728,8.796811,3.015808,.552559,-.82171,7.932528,2.836886,.587272,-.817478,7.185156,2.664995,.61696,-.804441,6.445302,2.502223,.648054,-.792063,5.818812,2.345851,.678575,-.777793,5.264731,2.19715,.707287,-.760476,4.766033,2.056042,.735851,-.742541,4.335871,1.922805,.760594,-.720503,3.928021,1.798585,.784534,-.697719,3.579153,1.680605,.811029,-.677036,3.285307,1.568942,.831809,-.651479,3.001423,1.465496,.854364,-.627376,2.760672,1.367849,.872639,-.600496,2.540697,1.275644,.894296,-.576297,2.355273,1.188638,.913123,-.550377,2.188563,1.105652,.932025,-.52464,2.040739,1.028614,.949876,-.498402,1.910315,.954421,.968933,-.47322,1.79575,.884061,.985366,-.447086,1.690336,.817765,1.00494,-.422394,1.599626,.753295,1.022217,-.396726,1.519055,.69338,1.04149,-.371854,1.448745,.635747,1.05992,-.346769,1.384292,.579508,1.080408,-.322343,1.328798,.525045,1.101632,-.297979,1.279898,.473773,1.124812,-.274059,1.234005,.422949,1.148503,-.249954,1.195373,.374609,1.174554,-.225988,1.160362,.32735,1.202931,-.201932,1.131307,.283494,1.229335,-.176886,1.105885,.241092,1.254254,-.151225,1.085802,.201514,1.275743,-.124282,1.068524,.162866,1.292929,-.097122,1.051493,.124991,1.305805,-.068939,1.03389,.085521,1.314991,-.040082,1.015927,.045247,1.324033,-.009923,.999893,.004738,131e-6,-745e-6,7.562414,5.671075,473e-6,-.002681,27.216688,5.670949,.002021,-.011462,32.962402,5.670177,.00454,-.025728,33.183949,5.670197,.008087,-.045746,33.185688,5.667313,.012673,-.071427,33.170441,5.668396,.018358,-.102673,33.145138,5.665252,.025299,-.13978,33.303326,5.653404,.033469,-.181718,33.107243,5.652829,.043139,-.228698,32.859524,5.645676,.054622,-.280648,32.694893,5.631547,.068115,-.336524,32.422569,5.611561,.083957,-.395671,32.035511,5.583449,.102259,-.456164,31.415047,5.543651,.123021,-.515765,30.47044,5.488278,.146127,-.572309,29.186451,5.413118,.171749,-.62571,27.653852,5.312369,.199549,-.673853,25.902435,5.185774,.229188,-.715905,23.978609,5.030582,.260421,-.751533,21.999035,4.853484,.293421,-.782309,20.087366,4.656137,.327077,-.806332,18.186535,4.443975,.361892,-.825818,16.418409,4.223844,.397146,-.840019,14.774344,3.998959,.434169,-.852434,13.321097,3.775443,.469288,-.856632,11.929448,3.552818,.504319,-.85713,10.675201,3.338825,.540067,-.855903,9.5919,3.130547,.575404,-.851565,8.607655,2.93293,.606782,-.839818,7.69056,2.743876,.63866,-.827508,6.900781,2.565115,.670577,-.814154,6.216821,2.395215,.696718,-.793162,5.551886,2.238233,.72599,-.775291,5.015406,2.090264,.75414,-.755758,4.546843,1.950834,.775992,-.729824,4.094254,1.820582,.80299,-.708909,3.732984,1.699191,.828291,-.686483,3.413194,1.583805,.847406,-.659162,3.103861,1.478093,.864951,-.631051,2.832976,1.378496,.887154,-.60659,2.616645,1.282127,.906337,-.580124,2.413988,1.194643,.927184,-.554835,2.24438,1.110354,.94381,-.527583,2.081964,1.031996,.96363,-.502243,1.948979,.956718,.979691,-.475006,1.822701,.886957,.99769,-.448815,1.715714,.819006,1.01646,-.423044,1.621868,.754892,1.035485,-.397637,1.539537,.693707,1.053165,-.371775,1.462285,.634867,1.072394,-.346372,1.396193,.578574,1.093397,-.321291,1.338344,.524341,1.115194,-.296102,1.287594,.472059,1.137943,-.271023,1.240495,.421674,1.164163,-.246367,1.201224,.371963,1.191457,-.221414,1.164472,.32504,1.220253,-.196228,1.134325,.280343,1.245456,-.169991,1.108214,.238098,1.270647,-.143314,1.087277,.197886,1.292124,-.115881,1.069397,.15956,1.309091,-.087816,1.051426,.120547,1.32113,-.059301,1.032904,.080834,1.332484,-.030912,1.015767,.040933,1.342834,-.002172,.999591,.001185,125e-6,-83e-5,8.392562,6.634228,443e-6,-.002936,29.687805,6.634032,.002016,-.013374,45.025234,6.633008,.00454,-.030089,45.020294,6.633056,.008092,-.053499,45.066029,6.626466,.01271,-.08361,44.810101,6.63033,.018485,-.12026,45.216747,6.614516,.025134,-.161031,44.674168,6.600349,.033897,-.212161,44.819195,6.610186,.043978,-.266661,44.450245,6.593605,.056094,-.326582,44.134544,6.570142,.070528,-.390342,43.591648,6.536712,.087498,-.456162,42.70816,6.488329,.107138,-.521609,41.365093,6.420198,.129461,-.584225,39.525822,6.323702,.154245,-.641931,37.186111,6.193606,.181228,-.692829,34.47847,6.026897,.210711,-.73844,31.680904,5.825769,.242181,-.777397,28.828054,5.595428,.275337,-.80998,26.042755,5.342321,.309698,-.83599,23.376804,5.073076,.345702,-.858077,20.965754,4.794572,.382135,-.874122,18.710079,4.516676,.419871,-.887133,16.713011,4.241767,.455609,-.891199,14.819674,3.972124,.492617,-.894082,13.187921,3.717271,.528186,-.89127,11.708584,3.471719,.563462,-.885719,10.422834,3.23776,.596013,-.874241,9.237741,3.01906,.629455,-.862814,8.248549,2.813572,.66111,-.848126,7.358398,2.621046,.690314,-.829798,6.569392,2.441627,.720589,-.812314,5.905934,2.274629,.745631,-.788704,5.2768,2.119423,.771488,-.766133,4.752773,1.97438,.798704,-.744726,4.306095,1.839482,.820172,-.718062,3.889792,1.713244,.844368,-.693972,3.545456,1.594809,.863128,-.665748,3.212762,1.487512,.880094,-.637003,2.926572,1.386724,.904252,-.613728,2.70426,1.288131,.920506,-.585217,2.483164,1.199845,.940919,-.559603,2.300348,1.114958,.957044,-.531597,2.130516,1.034754,.972648,-.503583,1.979313,.960912,.994318,-.478813,1.859664,.889786,1.008754,-.450943,1.742705,.820833,1.028667,-.425516,1.64522,.756332,1.046145,-.398977,1.557184,.693921,1.067212,-.373657,1.480814,.635955,1.084111,-.346657,1.408762,.578832,1.106749,-.321392,1.350468,.523561,1.12844,-.295773,1.294865,.471146,1.151073,-.270028,1.246118,.420298,1.178601,-.244816,1.204226,.370575,1.206845,-.219027,1.166896,.323716,1.235963,-.192622,1.135756,.278058,1.26303,-.165331,1.10924,.235743,1.288937,-.137489,1.088379,.19539,1.310681,-.108685,1.068987,.156439,1.334352,-.07971,1.054273,.117096,1.344847,-.049947,1.034598,.076554,1.354943,-.020272,1.016079,.035585,1.365515,.00917,.999969,-.004771,117e-6,-935e-6,9.424866,7.979243,41e-5,-.003275,33.013195,7.979422,.002009,-.016024,64.370331,7.977156,.004541,-.036176,64.655952,7.976128,.008109,-.064384,64.864494,7.964988,.012694,-.099984,64.487198,7.971348,.018554,-.143991,64.63797,7.923116,.025303,-.19204,61.930538,7.953975,.035297,-.259442,66.274422,7.921861,.045226,-.31837,63.33469,7.909609,.05837,-.388821,62.686401,7.864696,.074083,-.461667,61.332054,7.801843,.092537,-.533744,59.125607,7.708949,.113781,-.601905,55.997845,7.575799,.137786,-.664409,52.177567,7.393524,.16477,-.721193,48.019485,7.161756,.193894,-.768842,43.460278,6.882018,.225586,-.810332,39.08659,6.564607,.259311,-.845096,34.896049,6.221983,.294517,-.872849,30.952213,5.865831,.331163,-.895159,27.375792,5.507064,.368964,-.91286,24.21331,5.149763,.407255,-.925338,21.364958,4.806172,.444704,-.930956,18.791691,4.472272,.482041,-.932576,16.52116,4.160864,.519572,-.931547,14.589918,3.865206,.556236,-.926554,12.887797,3.590445,.590431,-.915839,11.352402,3.332747,.622723,-.901266,10.00266,3.093264,.657029,-.888747,8.90521,2.873842,.686164,-.868666,7.876704,2.66674,.719168,-.853152,7.051816,2.479017,.742294,-.826169,6.226034,2.306498,.77032,-.804936,5.590831,2.141328,.792337,-.777772,4.984083,1.994663,.81905,-.755478,4.507655,1.85395,.837684,-.726072,4.049884,1.72559,.861324,-.701424,3.678201,1.606303,.880741,-.673615,3.337163,1.495452,.903335,-.648506,3.05572,1.391162,.920311,-.61964,2.792068,1.294734,.935769,-.590245,2.554566,1.204518,.956592,-.564944,2.366468,1.11863,.972424,-.536842,2.187863,1.038323,.986269,-.50802,2.02348,.963803,1.006122,-.482411,1.895137,.890986,1.022504,-.45511,1.775886,.820936,1.037905,-.42745,1.665951,.758556,1.059281,-.402198,1.577363,.696126,1.076613,-.375156,1.493391,.636676,1.097828,-.349577,1.421129,.579947,1.116671,-.322955,1.355205,.52514,1.140514,-.297406,1.299979,.47146,1.166473,-.271786,1.249847,.420473,1.192591,-.245461,1.204625,.371118,1.223349,-.219412,1.166686,.3226,1.254833,-.19266,1.134121,.277572,1.285808,-.165167,1.108617,.234417,1.322015,-.137236,1.093841,.19464,1.342172,-.106871,1.074616,.155001,1.357238,-.075759,1.05355,.114648,1.367725,-.044279,1.033851,.073254,1.379461,-.013001,1.015713,.031895,1.391625,.018075,1.000203,-.009397,109e-6,-.001093,10.98682,9.992467,378e-6,-.003779,37.989063,9.992861,.002028,-.020252,101.850441,9.988345,.004557,-.045429,101.10675,9.983879,.008115,-.080453,100.646606,9.953411,.012864,-.125836,101.366592,9.943727,.018734,-.17935,100.786118,9.908408,.026314,-.24368,99.779343,9.821631,.0355,-.313552,98.608231,9.78245,.047562,-.394644,97.689568,9.845875,.062065,-.476697,95.177795,9.755218,.079552,-.557933,91.095581,9.615121,.099905,-.632818,85.110382,9.408299,.123231,-.699926,77.948921,9.120996,.14998,-.760671,70.491119,8.764173,.17955,-.812251,62.821407,8.341752,.211839,-.855909,55.51289,7.876337,.246434,-.892023,48.744549,7.386268,.282317,-.9192,42.462059,6.886009,.31958,-.940333,36.901031,6.400318,.360135,-.962176,32.353752,5.937503,.397805,-.969755,27.996445,5.489783,.437077,-.976494,24.359192,5.072855,.474388,-.975265,21.1243,4.684682,.513695,-.975335,18.476677,4.326597,.551542,-.970264,16.167391,3.999049,.587525,-.960365,14.143442,3.696317,.621251,-.945944,12.374341,3.414176,.654738,-.930709,10.877112,3.160455,.685794,-.911702,9.580887,2.921461,.717135,-.892948,8.481939,2.707478,.740798,-.865086,7.435941,2.510382,.77092,-.845137,6.650625,2.329648,.792303,-.815956,5.879976,2.163206,.818363,-.792225,5.274404,2.008042,.837362,-.762396,4.70096,1.867576,.862266,-.738465,4.254798,1.735819,.880069,-.70889,3.828697,1.61469,.896021,-.678588,3.451655,1.503477,.920156,-.654832,3.168722,1.3958,.934948,-.62474,2.879533,1.299955,.949686,-.595203,2.628258,1.208597,.970989,-.570041,2.433689,1.12231,.985606,-.541116,2.241461,1.042168,1.000819,-.512835,2.075567,.966543,1.012209,-.483024,1.919932,.895758,1.03532,-.459125,1.807884,.825668,1.052077,-.432333,1.695689,.760812,1.070459,-.406131,1.595491,.699897,1.088704,-.379721,1.508512,.640575,1.103817,-.352104,1.428159,.583765,1.131711,-.328122,1.366565,.52824,1.156448,-.302568,1.306843,.473988,1.181821,-.276487,1.252861,.422189,1.211347,-.25054,1.205265,.372005,1.243636,-.224264,1.165943,.324184,1.283038,-.198289,1.137772,.278419,1.316722,-.170179,1.115057,.235425,1.342715,-.140095,1.092994,.195084,1.363288,-.108794,1.071875,.155439,1.380656,-.076774,1.052475,.114636,1.394826,-.044509,1.032525,.07289,1.40883,-.011968,1.015459,.031101,1.42237,.020555,.999808,-.011002,1e-4,-.001334,13.377127,13.342275,342e-6,-.004563,45.758434,13.34271,.002026,-.027004,179.672058,13.331846,.004559,-.060563,179.294235,13.314877,.008232,-.108154,181.242035,13.222856,.013031,-.16759,179.684509,13.15386,.019526,-.242041,181.004608,12.986094,.026364,-.309289,159.606293,13.247752,.03767,-.409755,179.468521,12.368877,.051804,-.512051,167.955582,12.981333,.068214,-.601994,156.278793,12.704532,.088295,-.686849,143.096878,12.316531,.111478,-.75867,127.423111,11.793048,.138336,-.821348,111.763031,11.157992,.168447,-.873616,96.887924,10.447472,.201411,-.916322,83.225327,9.696606,.237443,-.95309,71.403137,8.949244,.274234,-.977751,60.739277,8.225874,.314566,-1.003135,52.115578,7.547433,.353932,-1.016312,44.341869,6.910326,.393858,-1.024848,37.827263,6.324401,.433805,-1.02895,32.380932,5.790555,.475812,-1.034084,27.955982,5.312826,.513254,-1.026743,23.977417,4.866118,.549965,-1.01674,20.628025,4.468437,.5903,-1.01203,18.036856,4.105483,.62642,-.998919,15.669224,3.780593,.658897,-.979874,13.603898,3.482054,.687252,-.955238,11.788331,3.211213,.718941,-.935663,10.355552,2.962083,.749877,-.915206,9.131123,2.741382,.772094,-.884837,7.973935,2.536501,.799495,-.861214,7.08623,2.347282,.820136,-.830976,6.240769,2.179332,.846715,-.807408,5.604792,2.018005,.865176,-.776657,4.975034,1.877021,.8811,-.744657,4.442767,1.743528,.907637,-.722088,4.035177,1.621563,.922239,-.690432,3.63316,1.506158,.936558,-.65965,3.281798,1.403606,.950047,-.629105,2.974179,1.304276,.961959,-.598277,2.704483,1.213888,.98741,-.576085,2.510453,1.125569,.999996,-.546494,2.304016,1.045567,1.014127,-.518186,2.127867,.970718,1.036275,-.494009,1.985804,.897557,1.049695,-.465659,1.845074,.830584,1.064617,-.438159,1.72513,.766083,1.077131,-.409813,1.613818,.705101,1.101054,-.385632,1.528694,.644828,1.122361,-.360045,1.447086,.587878,1.147359,-.335186,1.377588,.53213,1.169881,-.30904,1.313673,.478843,1.200554,-.28459,1.257256,.426855,1.232047,-.259332,1.208431,.376125,1.275402,-.235215,1.174692,.326614,1.306595,-.207508,1.141042,.281524,1.334304,-.17829,1.111778,.238694,1.364678,-.14853,1.090976,.198549,1.387168,-.117114,1.069308,.158529,1.408657,-.084977,1.050625,.118042,1.426214,-.052052,1.031444,.076541,1.444257,-.018653,1.014298,.034061,1.460618,.015206,.999413,-.008132,1e-4,-.002003,20.052612,20.032721,297e-6,-.005947,59.540512,20.033842,.002022,-.040439,404.848511,20.032743,.004588,-.090999,403.741241,19.910591,.008769,-.169802,441.471558,19.572552,.013708,-.253629,411.667816,19.145721,.020331,-.349396,371.322571,18.591049,.030259,-.468121,385.816498,18.331083,.04519,-.611444,391.924133,15.807686,.058476,-.676875,319.638641,16.947781,.079894,-.781421,278.80426,17.512903,.103871,-.855116,235.999786,16.290295,.131756,-.915747,197.168076,14.956566,.163487,-.966333,163.452347,13.60801,.198693,-1.008386,135.632706,12.299661,.236157,-1.039862,111.919281,11.08879,.274579,-1.059988,92.136581,9.983883,.317164,-1.084069,77.063034,9.008505,.357624,-1.092124,63.963051,8.127298,.399009,-1.09756,53.483341,7.347628,.441182,-1.100981,45.052429,6.658191,.481606,-1.097318,37.93264,6.047333,.524253,-1.09657,32.395638,5.505878,.564351,-1.088739,27.67938,5.018494,.600843,-1.073396,23.611519,4.58077,.635527,-1.055024,20.207081,4.194785,.672045,-1.039775,17.469036,3.847436,.698372,-1.009545,14.928226,3.532546,.729336,-.987168,12.95317,3.248834,.761147,-.966299,11.346271,2.994166,.78227,-.932841,9.813129,2.762244,.811832,-.910431,8.672224,2.549933,.832053,-.878369,7.578633,2.363132,.849383,-.844673,6.648379,2.189266,.86602,-.811703,5.850784,2.031716,.893083,-.789181,5.273372,1.88448,.909212,-.757541,4.700618,1.750298,.923169,-.725157,4.19664,1.62759,.937112,-.693769,3.764841,1.514906,.961901,-.670828,3.444598,1.406839,.975245,-.64024,3.120745,1.307873,.989696,-.611032,2.840732,1.216417,1.002057,-.581144,2.591596,1.132553,1.014022,-.55162,2.37382,1.051695,1.025307,-.522268,2.177992,.9775,1.05219,-.500826,2.042511,.904301,1.064408,-.472355,1.891934,.837557,1.077876,-.444815,1.761054,.773004,1.088939,-.416531,1.638939,.713958,1.118551,-.395057,1.555724,.652485,1.134469,-.368289,1.46549,.59633,1.162778,-.345095,1.390977,.539703,1.185298,-.319527,1.321225,.48625,1.208419,-.29359,1.259318,.434178,1.261013,-.273471,1.219767,.382032,1.297811,-.248226,1.176422,.33419,1.326591,-.220354,1.139881,.289075,1.357918,-.191937,1.111418,.246259,1.38759,-.162282,1.086511,.205129,1.415797,-.131515,1.067072,.165601,1.440194,-.099555,1.047799,.125462,1.4656,-.066957,1.030406,.084082,1.487714,-.033496,1.013889,.041981,1.509947,663e-6,.998773,-485e-6,1e-4,-.004009,40.102047,40.087105,228e-6,-.009141,91.431366,40.074432,.001522,-.060544,605.651733,39.918827,.004919,-.188871,1712.9823,38.873421,.009053,-.320325,1583.453125,39.715633,.015375,-.471415,1486.033691,39.162876,.029306,-.735111,1751.70105,28.0832,.04345,-.859759,1392.47522,24.599945,.079075,-1.220033,1629.972656,18.507019,.09013,-1.091255,940.347351,17.961655,.098008,-.945965,425.901093,24.47801,.138246,-1.084105,416.823944,20.003433,.174489,-1.133148,302.730042,18.550846,.207969,-1.138483,242.853577,15.923334,.249132,-1.168197,191.649445,13.940813,.291391,-1.187038,152.910309,12.263267,.332856,-1.192793,121.905075,10.822873,.377473,-1.202846,99.145561,9.618412,.422601,-1.208871,81.343315,8.591735,.465276,-1.204545,66.742569,7.692911,.50471,-1.190839,54.787876,6.915612,.544909,-1.178827,45.507313,6.242786,.582125,-1.16059,37.819912,5.65169,.620694,-1.145481,31.926588,5.12366,.659127,-1.130178,27.14731,4.669475,.684358,-1.093728,22.650702,4.258717,.719453,-1.074591,19.454103,3.901225,.751695,-1.051678,16.735672,3.57687,.775082,-1.017716,14.281039,3.287471,.796233,-.982759,12.261332,3.023708,.827404,-.961227,10.767912,2.78774,.848149,-.928433,9.37135,2.570737,.864891,-.892838,8.142364,2.379204,.880979,-.858193,7.118954,2.20447,.910434,-.837281,6.389041,2.041554,.925396,-.803638,5.643217,1.893353,.942463,-.772925,5.031223,1.757331,.955217,-.73972,4.486978,1.633572,.96857,-.708048,4.014621,1.520414,.981672,-.677109,3.617768,1.412506,.992829,-.645712,3.258773,1.317079,1.02127,-.625746,3.00664,1.222611,1.031247,-.594628,2.733073,1.137911,1.043581,-.56554,2.498495,1.058439,1.05593,-.536962,2.289843,.984428,1.066727,-.508076,2.108603,.912794,1.081225,-.481297,1.951454,.845536,1.088198,-.451563,1.801891,.782718,1.123316,-.433247,1.704316,.721664,1.133206,-.404812,1.586153,.662761,1.152889,-.379901,1.490958,.606866,1.188158,-.359421,1.41573,.550666,1.217064,-.336049,1.344172,.496748,1.257727,-.314816,1.283196,.443538,1.286647,-.28953,1.225903,.394018,1.308729,-.262053,1.173928,.346255,1.351453,-.237704,1.139992,.300393,1.380284,-.209733,1.105997,.256661,1.414621,-.181613,1.082109,.215429,1.453045,-.152797,1.063853,.177098,1.481066,-.121803,1.043185,.137203,1.514113,-.09025,1.027072,.096998,1.547317,-.057603,1.012551,.055328,1.577983,-.023799,.999267,.013094,108e-6,-.12497,1249.704346,1249.703491,14e-5,-.119585,1195.855469,1195.85437,.003995,-.927433,9274.246094,232.443573,.012013,-1.13158,11315.999023,98.211105,.023892,-1.216018,12162.739258,67.2145,.047506,-1.517865,15186.294922,42.410069,.082523,-1.812564,18145.71875,24.421545,.112452,-1.805072,11112.966797,18.450365,.16446,-2.016784,8086.032715,14.043465,.19587,-1.898199,4245.658203,13.178202,.197797,-1.556158,1315.561768,30.760096,.21954,-1.433455,802.380371,25.037956,.268696,-1.483235,579.715515,20.975695,.265968,-1.261051,386.583649,12.017023,.325369,-1.343349,316.795959,12.612406,.387968,-1.411606,232.491623,13.29694,.435543,-1.411236,181.515228,11.646996,.482729,-1.405722,143.425354,10.265131,.531742,-1.402782,114.920082,9.114828,.559383,-1.346165,88.589005,8.089214,.607851,-1.342407,73.05661,7.249064,.656928,-1.338238,60.826897,6.531094,.681212,-1.285692,48.727219,5.868711,.729238,-1.279951,41.256016,5.324553,.751172,-1.230045,33.72826,4.816513,.773107,-1.184288,27.913816,4.377203,.815726,-1.171653,24.065962,3.999965,.837886,-1.130636,20.25486,3.658493,.857674,-1.089071,17.138168,3.34793,.87612,-1.048303,14.572968,3.072666,.893935,-1.00904,12.496377,2.825165,.927998,-.989064,11.040731,2.60552,.928445,-.935017,9.365102,2.401481,.945279,-.899993,8.177711,2.222282,.959378,-.863854,7.155303,2.059342,.971761,-.827684,6.284632,1.909314,.987812,-.795878,5.583837,1.771094,1.001958,-.76354,4.962345,1.645968,1.014357,-.730897,4.435898,1.527438,1.025946,-.698675,3.973241,1.421337,1.036435,-.666662,3.568025,1.323677,1.046807,-.635466,3.218647,1.232678,1.052974,-.60266,2.902273,1.147675,1.086089,-.585364,2.694939,1.068352,1.09466,-.554784,2.454491,.993445,1.117131,-.5315,2.270746,.923758,1.114009,-.496581,2.063934,.858381,1.137328,-.473914,1.91799,.79498,1.158671,-.450127,1.786523,.735697,1.177878,-.425306,1.662454,.677498,1.20751,-.403797,1.559058,.621762,1.244496,-.383812,1.466801,.56619,1.240412,-.35108,1.366853,.514288,1.321257,-.3412,1.309808,.464621,1.336512,-.31271,1.241822,.413228,1.365047,-.286935,1.186612,.366092,1.418984,-.265184,1.15212,.321528,1.388864,-.22775,1.089937,.271827,1.464383,-.207168,1.077271,.232838,1.473125,-.17577,1.041835,.193289,1.542908,-.150424,1.036794,.156153,1.563005,-.118748,1.013029,.114866,1.637048,-.089604,1.013493,.076804,1.670777,-.056398,.999208,.032691],THREE.PolyLight.ltcMagData=[1,4.9723599302549885e-34,1,8.871365657047213e-24,1,9.253802688709342e-18,1,2.998832735953694e-14,1,8.825863651029664e-12,.9999993443489075,6.643000594053206e-10,.9999925494194031,1.9913889204303814e-8,.9999614953994751,2.984031084451999e-7,.9998213648796082,2561353085184237e-21,.9988022446632385,13457865861710161e-21,.9795094728469849,11896545402123593e-22,.9785933494567871,5169624273548834e-21,.9750710129737854,16189613234018907e-21,.95542311668396,9889836292131804e-21,.9470353722572327,2295730882906355e-20,.9251033067703247,21790827304357663e-21,.9039908051490784,30495604733005166e-21,.8773829340934753,351582420989871e-19,.8458513617515564,38647187466267496e-21,.8101488947868347,41614777728682384e-21,.7705395221710205,4331504533183761e-20,.7285891175270081,4555909617920406e-20,.6844283938407898,47463865485042334e-21,.6383334398269653,4731946319225244e-20,.5921696424484253,47633071517338976e-21,.5460947155952454,46813282096991315e-21,.500735342502594,4492110019782558e-20,.45738598704338074,434852008766029e-19,.4160003960132599,4142210673308e-17,.37686944007873535,3876877963193692e-20,.3404451310634613,36174835258862004e-21,.3069041669368744,33757041819626465e-21,1,3.484353461275869e-15,1,3.676718455245583e-15,1,1.2571829868638935e-14,1,6.409696449820312e-13,.9999998807907104,3.9094654596949496e-11,.9999992251396179,1.4388235047846365e-9,.9999923706054688,3.060469211391137e-8,.9999598860740662,3.86157296361489e-7,.9998152256011963,30248768325691344e-22,.9986841082572937,14877443391014822e-21,.9957596659660339,5883387530047912e-21,.9906166195869446,1118690943258116e-20,.9820987582206726,2040820982074365e-20,.9651585817337036,25617177016101778e-21,.9424709677696228,14907192962709814e-21,.929432213306427,22906311642145738e-21,.9093611240386963,3298077717772685e-20,.8809629678726196,424117170041427e-19,.8440450429916382,4300312866689637e-20,.8062857985496521,38192250940483063e-21,.7707816958427429,4511761653702706e-20,.7289775609970093,4817411536350846e-20,.6849337220191956,5019790114602074e-20,.6383635997772217,5059950490249321e-20,.5916448831558228,48434238124173135e-21,.5462520122528076,49303402192890644e-21,.5007233619689941,46784385631326586e-21,.4574684202671051,45121712901163846e-21,.41607901453971863,4273800732335076e-20,.3770703971385956,4004369839094579e-20,.34077027440071106,3741792534128763e-20,.30720973014831543,34707252780208364e-21,1,3.555587031398022e-12,1,3.6016847056868917e-12,1,4.555361296509908e-12,.9999998807907104,1.8482996383406558e-11,.9999998807907104,2.962420586616332e-10,.999998927116394,5.3636171060134075e-9,.999991238117218,7.324008777231938e-8,.9999642372131348,5.106547291688912e-7,.9996134042739868,26343850549892522e-22,.998034656047821,2950551561298198e-21,.9957220554351807,7269138677656883e-21,.9905380606651306,13763788047072012e-21,.9819369316101074,2431732718832791e-20,.9648937582969666,29587748940684833e-21,.9423127174377441,17692509572952986e-21,.9292111396789551,2705379665712826e-20,.9090583920478821,3848519190796651e-20,.8805898427963257,4879530388279818e-20,.8436343669891357,4946756234858185e-20,.8059477806091309,44421936763683334e-21,.770418107509613,5189147123019211e-20,.7286810874938965,55194806918734685e-21,.6847314834594727,56741271691862494e-21,.638262927532196,57250112149631605e-21,.5917738676071167,5477243030327372e-20,.5463683605194092,5509306356543675e-20,.5011235475540161,5246519867796451e-20,.45787563920021057,5003271871828474e-20,.4166870713233948,4757062197313644e-20,.3777269124984741,4410088149597868e-20,.34149447083473206,41352835978614166e-21,.3078345060348511,37733345379820094e-21,1,2.0392437738436797e-10,1,2.050830338884424e-10,1,2.2526711052073267e-10,.9999998807907104,3.883267596371809e-10,.9999998211860657,1.9945427531808946e-9,.9999982714653015,1.9617473867583612e-8,.9999914765357971,8.676927620854258e-8,.9999576210975647,6.843680466772639e-7,.9995915293693542,32147545425686985e-22,.9979994297027588,4158150204602862e-21,.9956579804420471,997109691525111e-20,.9904067516326904,1862859062384814e-20,.9816834926605225,31560084607917815e-21,.9644421935081482,3663621100713499e-20,.9420456886291504,23040682208375074e-21,.9288370013237,3486980858724564e-20,.9085549116134644,48680340114515275e-21,.8799675703048706,6045426562195644e-20,.8429601788520813,6116852455306798e-20,.8053827881813049,55800206610001624e-21,.7698301076889038,6418847624445334e-20,.7282079458236694,6779727118555456e-20,.6843969821929932,6844157906016335e-20,.6381362080574036,6908563227625564e-20,.5919710397720337,6608713010791689e-20,.546595573425293,6525012577185407e-20,.5017878413200378,6249842408578843e-20,.45859867334365845,5843830876983702e-20,.41762855648994446,5582111407420598e-20,.3787376880645752,5128803240950219e-20,.3427509665489197,4793655170942657e-20,.3091078996658325,4390078902360983e-20,1,3.5941150056117976e-9,1,3.6055098906473404e-9,.9999998807907104,3.7921492612724705e-9,.9999998807907104,4.9590247463981996e-9,.9999995827674866,1.2430871443314118e-8,.9999980330467224,2.8987333422492156e-8,.9999876022338867,1.743084965255548e-7,.9999457001686096,10401091685707797e-22,.9995582103729248,4292543962947093e-21,.9979528188705444,63808747654547915e-22,.9955669641494751,14677651051897556e-21,.9902148246765137,26741456167655997e-21,.9813223481178284,4322859240346588e-20,.9637941122055054,4751081360154785e-20,.9416635036468506,3217334233340807e-20,.9283020496368408,4786436693393625e-20,.9078357219696045,6520551687572151e-20,.8790907263755798,7903506048023701e-20,.842024028301239,7966245175339282e-20,.8045891523361206,7394397107418627e-20,.7690172791481018,835330574773252e-19,.7275615334510803,873752505867742e-19,.6839832663536072,8674211130710319e-20,.6380016803741455,8727407112019137e-20,.5922262072563171,8344028901774436e-20,.5470587611198425,8089735638350248e-20,.5026577115058899,7756722334306687e-20,.45977509021759033,7220609404612333e-20,.41891151666641235,6785998266423121e-20,.3802843391895294,626364562776871e-19,.3443710207939148,57524121075402945e-21,.31088417768478394,525497853232082e-19,1,3.315136254400386e-8,1,3.321820329915681e-8,.9999998807907104,3.428135997296522e-8,.9999998807907104,4.0122937861042374e-8,.9999993443489075,6.884137349061348e-8,.999997079372406,1.153320567937044e-7,.9999822378158569,4.1366322989233595e-7,.9999264478683472,17887547301143059e-22,.9995124936103821,62861768128641415e-22,.9978879690170288,10372253200330306e-21,.9954444169998169,2259549728478305e-20,.9899566173553467,39708666008664295e-21,.9808306694030762,6105979991843924e-20,.9629612565040588,6358415703289211e-20,.9411571025848389,4716955663752742e-20,.927593469619751,6851855869172141e-20,.906886637210846,9070617670658976e-20,.8779544830322266,.00010712965740822256,.8408229351043701,.00010736460535554215,.8035710453987122,.0001013750588754192,.7679961323738098,.00011226818605791777,.7267556190490723,.00011612738308031112,.6835330724716187,.0001139894375228323,.6378693580627441,.00011361506039975211,.5925200581550598,.00010833039414137602,.5477656722068787,.00010326132905902341,.5037316679954529,9865148604148999e-20,.4612429141998291,9166631934931502e-20,.4206485450267792,8449579763691872e-20,.38223329186439514,7804275082889944e-20,.34656456112861633,718433948350139e-19,.3131188154220581,6461292650783435e-20,1,2.028580752266862e-7,1,2.0313970594543207e-7,.9999998807907104,2.0755510377057362e-7,.9999998807907104,2.3010673544376914e-7,.9999992251396179,2.752639431946591e-7,.9999939203262329,4.518161915711971e-7,.9999713897705078,10922479987129918e-22,.9998999238014221,3428180207265541e-21,.9994540810585022,10047225259768311e-21,.9978080987930298,1752028038026765e-20,.9952890872955322,35787354136118665e-21,.9896163940429688,6013278471073136e-20,.9801874756813049,877630736795254e-19,.9619150161743164,8684329077368602e-20,.9405182600021362,7141684181988239e-20,.9266974329948425,.00010072087025037035,.9056936502456665,.0001292046217713505,.8765460848808289,.00014860687952023,.8393606543540955,.00014789306442253292,.802323043346405,.0001417738531017676,.766758918762207,.0001538011129014194,.7258138060569763,.00015715895278844982,.6830078959465027,.000152826018165797,.6377876996994019,.00015078099386300892,.5928740501403809,.0001430046686436981,.5487264394760132,.00013505709648597986,.5050747394561768,.00012746566790156066,.4630185663700104,.00011816729238489643,.4228866696357727,.00010843645577551797,.3846159279346466,9818199760047719e-20,.3492530882358551,9076905553229153e-20,.3159977197647095,81846650573425e-18,1,9.345664579996082e-7,1,9.355123324894521e-7,.9999998807907104,9.501987960902625e-7,.9999998211860657,10219027899438515e-22,.9999986290931702,11567085493879858e-22,.9999909400939941,16173099766092491e-22,.9999564290046692,298959616884531e-20,.9998655319213867,7109597845555982e-21,.9993844032287598,1730209078232292e-20,.9977094531059265,30375405913218856e-21,.9950905442237854,5776531179435551e-20,.9891849756240845,9219977800967172e-20,.9793606400489807,.00012746801075991243,.9606325030326843,.00012038017302984372,.9397254586219788,.00011030882888007909,.9255924820899963,.00015041654114611447,.9042379856109619,.00018665830430109054,.8748508095741272,.0002090869384119287,.8376354575157166,.00020647814380936325,.8008498549461365,.00020041796960867941,.7653152346611023,.00021292836754582822,.7247453331947327,.0002148216444766149,.6824364066123962,.00020713670528493822,.6377478241920471,.00020206280169077218,.5933591723442078,.00019054950098507106,.5499100685119629,.00017878308426588774,.5066502690315247,.00016553698515053838,.46514052152633667,.00015346206782851368,.42561981081962585,.00014112971257418394,.38764286041259766,.0001266445469809696,.3523785173892975,.0001141603133874014,.31935131549835205,.00010346704948460683,1,3495762484817533e-21,1,34984550438821316e-22,.9999998807907104,3539881845426862e-21,.9999995827674866,37362340208346723e-22,.9999979734420776,4087012257514289e-21,.9999836683273315,5188031536818016e-21,.9999328255653381,8041374712774996e-21,.9998289346694946,15386283848783933e-21,.9993001818656921,3149425538140349e-20,.9975883960723877,53596031648339704e-21,.9948448538780212,9449828212382272e-20,.9886416792869568,.00014262743934523314,.9783145785331726,.00018643679504748434,.9591134786605835,.000169582839589566,.9387755990028381,.00017240847228094935,.92425537109375,.00022653627092950046,.9024949073791504,.0002717370225582272,.8728576302528381,.00029659003484994173,.8356517553329468,.00029074528720229864,.799156129360199,.00028466666117310524,.7636834979057312,.0002963131701108068,.7235600352287292,.0002950532070826739,.6818390488624573,.0002820825029630214,.6377801895141602,.0002719080075621605,.5940210223197937,.0002549737982917577,.5513138771057129,.00023767948732711375,.5085931420326233,.00021696648036595434,.46760013699531555,.00019950199930462986,.4287278950214386,.00018330931197851896,.39123567938804626,.00016490917187184095,.35627874732017517,.00014828784333076328,.32335159182548523,.00013188539014663547,1,11146606993861496e-21,1,11153327250212897e-21,.9999998807907104,11256202014919836e-21,.9999995827674866,11566048669919837e-21,.9999958276748657,12548099221021403e-21,.9999750852584839,14970674783398863e-21,.9999067187309265,2064961699943524e-20,.9997859597206116,33625008654780686e-21,.9992002844810486,59298097767168656e-21,.9974387884140015,9556706208968535e-20,.9945343732833862,.00015605863882228732,.9879552721977234,.00022214680211618543,.9770373106002808,.0002748904225882143,.9573721885681152,.00024368167214561254,.9376460909843445,.0002709526161197573,.9226574301719666,.00034227679134346545,.9004448056221008,.0003969359095208347,.8705503940582275,.0004225193988531828,.8334026336669922,.0004111567104700953,.7972437739372253,.0004045880923513323,.761879026889801,.0004128344589844346,.7222740054130554,.00040566097595728934,.6812437176704407,.0003847752814181149,.6378998756408691,.0003661027003545314,.5948634147644043,.0003410204080864787,.5529966950416565,.00031651140307076275,.5110486149787903,.00028767294134013355,.47047552466392517,.00025893637211993337,.4322490692138672,.00023695049458183348,.39531901478767395,.00021366923465393484,.36068305373191833,.0001916612673085183,.3280943036079407,.00017114455113187432,1,313225100398995e-19,1,313375931000337e-19,.9999998807907104,3156844832119532e-20,.9999995231628418,3224074680474587e-20,.9999942183494568,34340238926233724e-21,.9999635815620422,3928444129996933e-20,.9998784065246582,5004906779504381e-20,.9997355341911316,7247707253554836e-20,.9990777373313904,.00011317530879750848,.99725741147995,.00017103416030295193,.9941516518592834,.00025919973268173635,.9871675968170166,.00034929794492200017,.9754965901374817,.0004084361426066607,.9554405212402344,.0003582572389859706,.9362972378730774,.00042549887439236045,.9207638502120972,.000516805041115731,.8980605602264404,.0005799091886729002,.8679356575012207,.0006031727534718812,.8309044241905212,.0005826879059895873,.795112133026123,.0005737107712775469,.759913980960846,.0005742605426348746,.7209106087684631,.0005569281638599932,.6806814670562744,.0005242460174486041,.6381562948226929,.0004924500244669616,.5959593057632446,.0004556169151328504,.5549776554107666,.00042054057121276855,.5139293670654297,.0003811741480603814,.47398316860198975,.00034024062915705144,.43628886342048645,.0003061612951569259,.399902880191803,.0002744085795711726,.3656311631202698,.0002456617949064821,.333377480506897,.00021885032765567303,1,7942884258227423e-20,.9999998807907104,7946020923554897e-20,.9999998807907104,7993690087459981e-20,.9999988079071045,8127414912451059e-20,.999991774559021,8541991701349616e-20,.999937891960144,948517772485502e-19,.999845027923584,.00011427410936448723,.9996801614761353,.00015192673890851438,.9989284873008728,.00021545625349972397,.9970328211784363,.0003051866660825908,.9936702847480774,.0004312041273806244,.9861934781074524,.0005509073962457478,.9735866189002991,.0006089170346967876,.9534494876861572,.0005429650191217661,.9346889853477478,.0006651540170423687,.9185329079627991,.0007774252444505692,.8953306674957275,.0008457021904177964,.8649731278419495,.0008597435662522912,.8281720876693726,.0008257927838712931,.7928025722503662,.0008103349828161299,.7578296661376953,.0007963153184391558,.7195484638214111,.0007630019681528211,.6802068948745728,.0007120147929526865,.6385806798934937,.0006603786023333669,.5973770022392273,.0006074856501072645,.557275652885437,.0005564765306189656,.5172183513641357,.0005025688442401588,.4781257212162018,.0004483155207708478,.4410014748573303,.0004001616616733372,.4051946699619293,.0003555190342012793,.3711559474468231,.000313900934997946,.3393208086490631,.000278926600003615,1,.00018497688870411366,.9999998807907104,.00018503708997741342,.9999998807907104,.0001859551848610863,.9999986290931702,.00018842339341063052,.9999825954437256,.00019606415298767388,.999917209148407,.00021299757645465434,.9998063445091248,.00024639617186039686,.9996086955070496,.00030754972249269485,.9987448453903198,.00040451722452417016,.9967576265335083,.0005396826309151947,.9930658340454102,.0007153602782636881,.9849414825439453,.0008673097472637892,.9712895750999451,.0009115047287195921,.9519128799438477,.0008648194489069283,.9327709674835205,.0010319059947505593,.9159188270568848,.0011622296879068017,.8922213912010193,.0012280362425372005,.8616902232170105,.0012228479608893394,.8252346515655518,.0011685527861118317,.7903201580047607,.0011380502255633473,.7556473612785339,.0010988099966198206,.7182032465934753,.0010407502995803952,.6798734664916992,.0009630543645471334,.6392568945884705,.0008829478174448013,.5991494059562683,.0008068376337178051,.5599762201309204,.000732983578927815,.5210378170013428,.0006603185320273042,.48287108540534973,.0005880913231521845,.44637465476989746,.000522624934092164,.41127538681030273,.0004637721576727927,.3776545524597168,.00040908646769821644,.3461458086967468,.00036203028867021203,1,.0004009077965747565,.9999998807907104,.0004010170523542911,.9999998807907104,.0004026854585390538,.9999982714653015,.000406946666771546,.9999787211418152,.0004201953997835517,.9998985528945923,.0004489627026487142,.9997645616531372,.0005038040108047426,.9995216727256775,.0005996969412080944,.9985226392745972,.0007436821470037103,.9964115023612976,.000941126374527812,.9922924637794495,.00117833586409688,.9833220839500427,.0013582039391621947,.9685819149017334,.0013688340550288558,.9503327012062073,.0013813228579238057,.9304899573326111,.0015847831964492798,.9128994941711426,.0017245045164600015,.8886758089065552,.0017711715772747993,.8580658435821533,.0017315082950517535,.8222084045410156,.0016523832455277443,.7876880764961243,.001587021630257368,.7534105777740479,.0015069965738803148,.7169104218482971,.0014114828081801534,.6797063946723938,.0012949994998052716,.6402789354324341,.0011761130299419165,.6013129949569702,.0010653268545866013,.5630807280540466,.0009596236050128937,.5253864526748657,.000862580316606909,.4882074296474457,.0007652285858057439,.4523884654045105,.0006779665709473193,.41806817054748535,.0006002774462103844,.38496294617652893,.0005286975065246224,.353765070438385,.0004661277635022998,1,.0008170487126335502,.9999998807907104,.0008172377711161971,.9999998211860657,.0008201166056096554,.9999958872795105,.000827036565169692,.9999712705612183,.0008487752638757229,.999868631362915,.0008952107164077461,.999718964099884,.000981343211606145,.9994185566902161,.0011263363994657993,.9982463121414185,.001333469757810235,.9959758520126343,.0016124547692015767,.9912904500961304,.0019195264903828502,.9813029170036316,.002113644964993,.9654432535171509,.002058587968349457,.9484148621559143,.0021744167897850275,.9277746081352234,.002404476050287485,.9094065427780151,.00253373384475708,.8847052454948425,.002535954350605607,.8541228771209717,.0024380881804972887,.819056510925293,.002323688007891178,.7849671244621277,.0021957301069051027,.7511888742446899,.0020529241301119328,.7157456278800964,.0019018709426745772,.6798288822174072,.0017322935163974762,.6417125463485718,.0015609883703291416,.6039620637893677,.0013985446421429515,.5667142868041992,.001250682515092194,.5302678942680359,.0011172611266374588,.4942619204521179,.0009905664483085275,.4590606093406677,.0008704899810254574,.42557626962661743,.0007690446218475699,.39304670691490173,.0006750519969500601,.36205917596817017,.0005897301016375422,1,.0015786398435011506,.9999998807907104,.001578951021656394,.9999997019767761,.0015837071696296334,.9999949932098389,.0015943063190206885,.9999446272850037,.0016281814314424992,.9998370409011841,.001699594664387405,.9996569156646729,.0018291180022060871,.999291181564331,.002040265128016472,.9979047775268555,.002327719470486045,.9954121112823486,.002707430860027671,.9899663329124451,.003081965958699584,.9786978363990784,.0032518126536160707,.9620490074157715,.0031087531242519617,.9460811614990234,.0033676314633339643,.9245449304580688,.0035980006214231253,.9053626656532288,.003679088316857815,.8802715539932251,.0035975826904177666,.8499215841293335,.0034114234149456024,.8157170414924622,.003235634183511138,.7822147011756897,.0030118071008473635,.7490512728691101,.002775391563773155,.7148115038871765,.0025447786320000887,.6803180575370789,.00230251788161695,.643667995929718,.0020621786825358868,.6072387099266052,.0018297929782420397,.5708948969841003,.0016184179112315178,.5358534455299377,.00143984064925462,.500960111618042,.0012685820693150163,.466646283864975,.0011119474656879902,.4337874948978424,.0009760607499629259,.4019894599914551,.0008569401688873768,.3714294731616974,.0007520686485804617,1,.0029108307790011168,.9999998807907104,.0029113292694091797,.9999995827674866,.0029188790358603,.9999939203262329,.0029341757763177156,.9999232292175293,.002984406426548958,.9997974634170532,.0030891753267496824,.9995762705802917,.0032756298314779997,.9991302490234375,.003571221837773919,.9974761009216309,.003953914158046246,.9946742057800293,.0044480860233306885,.9882583022117615,.004869313444942236,.9754138588905334,.0049394769594073296,.9593328237533569,.00478742178529501,.9432409405708313,.005124739371240139,.9207090735435486,.00530279241502285,.9007392525672913,.005275663919746876,.8754144310951233,.005053830333054066,.8455151319503784,.004738631658256054,.8122400045394897,.004457577131688595,.7794992327690125,.004092161078006029,.7470912337303162,.0037206581328064203,.7142261862754822,.003380086040124297,.6812762022018433,.003039485076442361,.6462566256523132,.0027081393636763096,.6113574504852295,.0023940110113471746,.5761368274688721,.002102465834468603,.5422928929328918,.0018580463947728276,.5086895227432251,.0016355352709069848,.4753577709197998,.0014335776213556528,.4431697130203247,.0012596339220181108,.4121963381767273,.001109234057366848,.38215652108192444,.0009733971673995256,1,.00514982920140028,.9999998807907104,.0051505835726857185,.9999995827674866,.005156354513019323,.9999896287918091,.0051828715950250626,.9999085664749146,.005253704264760017,.9997556805610657,.005400160793215036,.9994800090789795,.005656661000102758,.9989307522773743,.006053065415471792,.9969843626022339,.00654215645045042,.9936774373054504,.0071439314633607864,.9860166311264038,.007553808391094208,.9713460803031921,.007397466339170933,.9569413065910339,.0073686097748577595,.9397642612457275,.007654766086488962,.9162077307701111,.007692985702306032,.8954983353614807,.007463844493031502,.8701610565185547,.007024289574474096,.8410991430282593,.00654118787497282,.8087263703346252,.006071383133530617,.7769513130187988,.005505856592208147,.7454173564910889,.004944223910570145,.7141332030296326,.004456194117665291,.6828809976577759,.0039864880964159966,.6495635509490967,.0035339398309588432,.6162917017936707,.0031144339591264725,.5824683308601379,.0027307888958603144,.5497102737426758,.0023994878865778446,.517501950263977,.00211310270242393,.4853088855743408,.0018530820962041616,.4536786675453186,.00162035773973912,.423523485660553,.001423511654138565,.39414113759994507,.0012478313874453306,1,.008781113661825657,.9999998807907104,.008782250806689262,.9999995231628418,.008789858780801296,.9999810457229614,.008825347758829594,.9998871088027954,.008919996209442616,.9997116327285767,.009114330634474754,.9993581771850586,.009449927136301994,.9986737370491028,.009955829940736294,.9964500069618225,.010553664527833462,.9922869205474854,.011210176162421703,.9828514456748962,.011462666094303131,.966590404510498,.010942341759800911,.9539383053779602,.011102051474153996,.9355066418647766,.01121359970420599,.9109336137771606,.010973316617310047,.8896371126174927,.01041148230433464,.8645746111869812,.00965377688407898,.8366612195968628,.008939074352383614,.8053125143051147,.008173693902790546,.7746899724006653,.007331684231758118,.7442728281021118,.00651463633403182,.7146793603897095,.005829517729580402,.6851472854614258,.005182467866688967,.6537533402442932,.0045829638838768005,.6221988201141357,.004027039278298616,.5898833274841309,.003525900188833475,.5582146644592285,.003083770629018545,.5273421406745911,.002709123305976391,.4963016211986542,.002371974289417267,.4656708538532257,.002071167342364788,.43599048256874084,.0018063206225633621,.4073277413845062,.0015753306215628982,1,.014484788291156292,.9999998807907104,.014486453495919704,.9999987483024597,.014495768584311008,.9999776482582092,.014540332369506359,.9998500943183899,.014659006148576736,.9996382594108582,.01490150298923254,.9992026090621948,.015315020456910133,.998336911201477,.01592146046459675,.995718240737915,.016593143343925476,.9902902245521545,.0171788539737463,.9785705804824829,.017021413892507553,.9626328945159912,.016236452385783195,.9501498341560364,.016367292031645775,.9303038120269775,.01610034890472889,.9047937393188477,.015376884490251541,.8831865191459656,.014312634244561195,.8588321208953857,.013121667318046093,.8321588039398193,.012045647017657757,.8021290302276611,.010870425030589104,.7729312777519226,.009663310833275318,.7440451979637146,.00851679127663374,.7160144448280334,.007560419384390116,.6883515119552612,.006690638139843941,.6589763164520264,.005896061658859253,.6292344331741333,.005173892714083195,.598577618598938,.004521057941019535,.5681574940681458,.003936563618481159,.53830885887146,.0034439379815012217,.5085618495941162,.0030091004446148872,.4790176749229431,.0026174471713602543,.4498245120048523,.0022649490274488926,.42175745964050293,.0019711104687303305,1,.02318751998245716,.9999998807907104,.023189831525087357,.9999986290931702,.02320014126598835,.9999673962593079,.023251373320817947,.9998109340667725,.023388182744383812,.9995402097702026,.023666987195611,.9989989995956421,.024136699736118317,.9978742003440857,.024800801649689674,.9946720600128174,.025450238958001137,.9875483512878418,.025734124705195427,.9728531241416931,.024720782414078712,.9594616889953613,.023991674184799194,.9453520774841309,.023601805791258812,.9240635633468628,.022656673565506935,.8977890610694885,.02116716280579567,.8763020634651184,.01939302869141102,.8533101677894592,.017666829749941826,.8278051018714905,.01600640080869198,.7994223237037659,.014282339252531528,.7719488143920898,.012605263851583004,.7448646426200867,.011039326898753643,.7183104753494263,.009716251865029335,.6926193237304688,.008567593060433865,.6653493046760559,.007526721339672804,.6374363899230957,.0065890830010175705,.6085887551307678,.005747430957853794,.5795894861221313,.004994467366486788,.5504584312438965,.0043333000503480434,.5221819877624512,.003773026168346405,.4937811493873596,.0032880280632525682,.4656572639942169,.0028842499013990164,.43822285532951355,.0025385343469679356,1,.036119915544986725,.9999998807907104,.036123037338256836,.9999983310699463,.03613238036632538,.999925971031189,.03618348389863968,.9997624158859253,.036321040242910385,.9994243383407593,.036602236330509186,.9987225532531738,.03706963360309601,.9972200393676758,.03768647462129593,.9930840730667114,.03810041397809982,.9832266569137573,.037559669464826584,.9661542773246765,.03529861569404602,.9552278518676758,.03461970388889313,.9393109083175659,.033278755843639374,.9165701866149902,.03121091052889824,.889992356300354,.028621654957532883,.8692442178726196,.025907745584845543,.8478714823722839,.02343318983912468,.8238598704338074,.020967595279216766,.7974788546562195,.018537262454628944,.7719876170158386,.016262907534837723,.7469906806945801,.014174382202327251,.7219353318214417,.012376618571579456,.6982242465019226,.010873598046600819,.6731786131858826,.009528286755084991,.6469571590423584,.008320010267198086,.6200631856918335,.0072359321638941765,.5924756526947021,.006272470578551292,.5646946430206299,.005448717158287764,.537643551826477,.004783661104738712,.5106642246246338,.004218283575028181,.48378950357437134,.003716002218425274,.4571387767791748,.0032691305968910456,1,.054877735674381256,.9999998807907104,.054881878197193146,.999995231628418,.05488637089729309,.9999129772186279,.05492263287305832,.9997130632400513,.055023614317178726,.9992547035217285,.0552348867058754,.998328685760498,.05557789281010628,.9962402582168579,.055930595844984055,.990487813949585,.055661577731370926,.9766780138015747,.05339629948139191,.9620794653892517,.05062970146536827,.949517011642456,.04875345900654793,.9316648244857788,.04582635313272476,.9078508615493774,.04209979251027107,.8816372156143188,.03802478685975075,.8626100420951843,.03419625759124756,.8427760004997253,.030579833313822746,.8207062482833862,.027078259736299515,.7968108057975769,.02378470078110695,.7733734250068665,.020749632269144058,.7508492469787598,.018033595755696297,.7273937463760376,.015642531216144562,.7052904963493347,.013674733228981495,.682493269443512,.01193926390260458,.6581026911735535,.010401400737464428,.6333559155464172,.00907706469297409,.607593297958374,.007949341088533401,.5816879868507385,.00696500763297081,.5553980469703674,.006108662113547325,.5296545624732971,.005376973655074835,.5040144920349121,.004737631417810917,.4783157706260681,.00416637072339654,1,.08148409426212311,.9999998807907104,.08148957043886185,.9999942183494568,.08148171007633209,.999882698059082,.08147498965263367,.9996143579483032,.08146817982196808,.9990149140357971,.08147260546684265,.9977524280548096,.08146005868911743,.9946437478065491,.08111938834190369,.985908567905426,.07922664284706116,.9677019715309143,.07408709079027176,.9568265676498413,.07101979106664658,.9418231248855591,.06693457812070847,.9221896529197693,.06159081310033798,.8980724811553955,.05560671538114548,.8733835816383362,.0497000552713871,.8563596606254578,.044376302510499954,.8384827971458435,.039259593933820724,.818854808807373,.03448687866330147,.7977358102798462,.030135253444314003,.7766509652137756,.02620469592511654,.7566617727279663,.0226997472345829,.7353000044822693,.01962413266301155,.7140952348709106,.017016500234603882,.6937720775604248,.014878773130476475,.6717890501022339,.01306450366973877,.6491398215293884,.011481668800115585,.6253446340560913,.010085390880703926,.6009864807128906,.008852623403072357,.5760692954063416,.007759853266179562,.5511251091957092,.006795078050345182,.5264513492584229,.005966846365481615,.5020902752876282,.005241612438112497,1,.11845015734434128,.9999998807907104,.11845692247152328,.9999839663505554,.11842353641986847,.9998346567153931,.11832276731729507,.9994792938232422,.11807908862829208,.9986546039581299,.11762857437133789,.9968227744102478,.11683618277311325,.9917505979537964,.11492409557104111,.9777219891548157,.10955154150724411,.9621626138687134,.10287504643201828,.949332058429718,.09705906361341476,.9316338896751404,.08946692198514938,.9109919667243958,.08079186081886292,.8878742456436157,.07198622822761536,.8661704063415527,.06400766968727112,.8510252237319946,.05652714893221855,.8356629014015198,.04960061237215996,.819007396697998,.04332910105586052,.8009445667266846,.037703968584537506,.782430112361908,.03270804136991501,.7648444771766663,.028282418847084045,.7459982633590698,.024462224915623665,.7264190316200256,.021256163716316223,.7078356742858887,.01863222010433674,.6882588863372803,.0163962934166193,.6672788858413696,.014421883039176464,.6456640362739563,.01267970260232687,.6228654384613037,.011134385131299496,.5996813178062439,.009758916683495045,.5759059190750122,.008535985834896564,.5521543025970459,.007453986443579197,.5284970998764038,.006514128763228655,1,.1688302755355835,.9999998807907104,.16883879899978638,.9999790787696838,.16875533759593964,.9997648596763611,.16846884787082672,.9992637634277344,.16775725781917572,.998065710067749,.16640785336494446,.9951513409614563,.1640273928642273,.9860142469406128,.15865765511989594,.9660518765449524,.14764997363090515,.954704999923706,.1395324319601059,.9385280013084412,.12884680926799774,.9188490509986877,.1163267195224762,.8987041115760803,.10347608476877213,.8788196444511414,.09163937717676163,.8600752949714661,.0807318240404129,.8475458025932312,.07072216272354126,.8353716731071472,.06171669811010361,.821943461894989,.053687602281570435,.8071359395980835,.0465904138982296,.7915299534797668,.04041082784533501,.7765632271766663,.03514613211154938,.7605788707733154,.030588174238801003,.7432041168212891,.026636673137545586,.725105345249176,.023224472999572754,.7074119448661804,.02037244476377964,.6884443163871765,.017911456525325775,.6685107946395874,.015741297975182533,.6478361487388611,.013823072426021099,.6261966824531555,.012119917199015617,.6042677164077759,.010611855424940586,.5818374752998352,.009283081628382206,.559741735458374,.008231556974351406,1,.23626625537872314,.9999997019767761,.2362765371799469,.9999340772628784,.23610058426856995,.9996722936630249,.2354590892791748,.998900294303894,.23385630548000336,.9969972372055054,.2307794690132141,.9914978742599487,.22503536939620972,.9735234379768372,.21185773611068726,.9586296081542969,.19842229783535004,.9428296089172363,.183420330286026,.923704206943512,.1656544953584671,.9041783213615417,.1470605731010437,.8875536918640137,.12988513708114624,.8715113997459412,.11415597051382065,.8566660284996033,.09978459030389786,.8473064303398132,.08695197850465775,.8386282324790955,.0755869522690773,.8287517428398132,.06567428261041641,.8179552555084229,.05724557489156723,.8057219386100769,.049928825348615646,.7926202416419983,.04355546087026596,.7792407274246216,.0379716120660305,.7640332579612732,.03308714181184769,.7474016547203064,.02881506085395813,.7301750779151917,.025099053978919983,.7127180695533752,.021926019340753555,.6947205066680908,.019262216985225677,.6758882999420166,.016926946118474007,.6569411754608154,.015049583278596401,.637305736541748,.013472186401486397,.6174024939537048,.012106116861104965,.5973087549209595,.010902498848736286,1,.32501813769340515,.9999995827674866,.32499584555625916,.9999033212661743,.3246780037879944,.9994678497314453,.323353111743927,.9981954097747803,.3200335204601288,.9945827126502991,.3134599030017853,.9810848832130432,.29922086000442505,.9611642360687256,.2784349322319031,.9451319575309753,.2576608657836914,.9250714778900146,.23240454494953156,.9058858156204224,.20599548518657684,.8910742998123169,.18154340982437134,.8792330026626587,.15922942757606506,.8681660890579224,.13899770379066467,.8583075404167175,.12097477912902832,.8523272275924683,.10522552579641342,.8479938507080078,.0917801484465599,.8422219753265381,.08011527359485626,.8346062302589417,.06995224207639694,.8250599503517151,.06106135994195938,.8139487504959106,.053273048251867294,.8018507957458496,.04646903648972511,.7889829277992249,.040514878928661346,.7745019793510437,.03531218320131302,.7588183879852295,.03077462688088417,.742843747138977,.027125027030706406,.7268459796905518,.024080947041511536,.710379421710968,.021507613360881805,.6937799453735352,.0193832665681839,.6767339110374451,.017515895888209343,.659289538860321,.015847407281398773,.6412655711174011,.014354811049997807,.9999998807907104,.4399769604206085,.9999985098838806,.439930260181427,.9998032450675964,.43927568197250366,.9990205764770508,.4365485906600952,.9964376091957092,.4296136796474457,.9862276315689087,.4139145016670227,.962151288986206,.384680837392807,.9444311261177063,.3556208312511444,.9222219586372375,.3197406232357025,.9029309749603271,.2827257513999939,.8911056518554688,.2490660399198532,.8830918073654175,.21813452243804932,.8775331974029541,.1903085708618164,.8730635046958923,.1659218966960907,.8695764541625977,.14492221176624298,.8668751120567322,.12655852735042572,.865445613861084,.11045990884304047,.8622264862060547,.09638455510139465,.8568942546844482,.08407947421073914,.8496779203414917,.07335495948791504,.84067702293396,.06401440501213074,.8304466009140015,.05603782832622528,.8198321461677551,.04958834499120712,.8088050484657288,.04405725747346878,.7967303991317749,.03924921900033951,.7834534049034119,.035025447607040405,.769321084022522,.031320326030254364,.7545203566551208,.028050176799297333,.7395243644714355,.025176819413900375,.7242056131362915,.022654689848423004,.7085790038108826,.02045733854174614,.6930575966835022,.018601344898343086,.9999998807907104,.5866483449935913,.9999937415122986,.5865479707717896,.9995688199996948,.5850739479064941,.9976115226745605,.57888263463974,.9882634878158569,.5609240531921387,.9604440331459045,.5213394165039062,.937431812286377,.4785776734352112,.9121115207672119,.42722955346107483,.8959197402000427,.3777864873409271,.8887543678283691,.3326959013938904,.8871288895606995,.29170748591423035,.8893368244171143,.2559751570224762,.8920711874961853,.22432221472263336,.8938846588134766,.19617396593093872,.894096851348877,.17124520242214203,.892995297908783,.149303138256073,.8909121155738831,.13008329272270203,.8888714909553528,.1135101318359375,.8867655396461487,.10011104494333267,.8831060528755188,.08858555555343628,.8777309656143188,.07855860888957977,.8709537386894226,.06984192132949829,.8629432320594788,.06225427985191345,.8538238406181335,.05563684180378914,.8438599705696106,.04985157027840614,.83316570520401,.044778503477573395,.8221805691719055,.04031811282038689,.8107494711875916,.03638627752661705,.798716127872467,.032924458384513855,.7861288189888,.029846424236893654,.7731727957725525,.027110036462545395,.759900689125061,.024670327082276344,.9999998807907104,.7711153030395508,.999901533126831,.7708041667938232,.998163104057312,.7661157250404358,.9821500778198242,.7397897243499756,.9464316368103027,.6818641424179077,.9112593531608582,.6113927960395813,.8931443095207214,.5445133447647095,.8906470537185669,.4843099117279053,.8982126712799072,.43117475509643555,.9079634547233582,.3821532428264618,.9169542193412781,.3368130624294281,.9237368106842041,.29538825154304504,.9285380840301514,.25846078991889954,.9336192607879639,.22768156230449677,.9365038275718689,.20039011538028717,.9376296997070312,.17639677226543427,.9371587634086609,.1554010808467865,.9353922605514526,.137116476893425,.9326346516609192,.12125279754400253,.9290563464164734,.10750587284564972,.9249114990234375,.0956064835190773,.9206029176712036,.08530539274215698,.9158710241317749,.07637721300125122,.91045743227005,.06863324344158173,.9044853448867798,.06189843639731407,.8980108499526978,.056058403104543686,.890998363494873,.050957854837179184,.8835744857788086,.04649262875318527,.8758228421211243,.042568888515233994,.8676913380622864,.039107099175453186,.8592711687088013,.03604135289788246,.8505854606628418,.03331342339515686,.9949004650115967,.9907703399658203,.8990931510925293,.8818700909614563,.9644099473953247,.8877869248390198,.9843448400497437,.8364757895469666,.9912524223327637,.7677941918373108,.9944184422492981,.6952739357948303,.9961252808570862,.6239668726921082,.9971455931663513,.5562926530838013,.9977937340736389,.4935127794742584,.9982258677482605,.4362220764160156,.9985172152519226,.3845938742160797,.998707115650177,.33852919936180115,.9988334774971008,.2977551519870758,.9989035129547119,.26189759373664856,.9989327192306519,.2305271178483963,.9989284873008728,.20319679379463196,.998895525932312,.17946358025074005,.998838484287262,.15890514850616455,.998759388923645,.14112819731235504,.9986607432365417,.12577509880065918,.9985431432723999,.11252337694168091,.9984103441238403,.10108739137649536,.998259961605072,.09121601283550262,.9980973601341248,.08269023895263672,.9979205131530762,.075319804251194,.9977298974990845,.06894070655107498,.9975262880325317,.06341172754764557,.9973112344741821,.058612000197172165,.9970836639404297,.05443798378109932,.9968447089195251,.05080118402838707,.9965949058532715,.047626085579395294,.9963352680206299,.04484841972589493],THREE.PolyLight.prototype=Object.create(THREE.Light.prototype),THREE.DayLight=function(e,t,a,r,i){THREE.Light.call(this,e),this.skyColor=new THREE.Color(t),this.groundColor=new THREE.Color(a),this.position=new THREE.Vector3(0,100,0),this.hemiPosition=new THREE.Vector3(0,100,0),this.target=new THREE.Node,this.sunIntensity=void 0!==r?r:1,this.hemiIntensity=void 0!==i?i:1,this.distance=0,this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0,0],this.shadowCascadeWidth=[512,512,512,512],this.shadowCascadeHeight=[512,512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.texture=null,this.textureCameraLeft=-500,this.textureCameraRight=500,this.textureCameraTop=500,this.textureCameraBottom=-500,this.textureCameraNear=1,this.textureCameraFar=5e3,this.textureWidth=512,this.textureHeight=512,this.textureBias=-4,this.castTransparentShadow=!1
},THREE.DayLight.prototype=Object.create(THREE.Light.prototype),THREE.DayLightCube=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,100,0),this.target=new THREE.Node,this.intensity=void 0!==t?t:1,this.distance=0,this.textureEncoding=THREE.rgba8Encoding,this.textureGamma=!0,this.textureFixSeams=!1,this.textureSpecular=null,this.textureDiffuse=null,this.textureMip=null,this.ambientIntensity=1,this.local=!1,this.size=new THREE.Vector3(1,1,1),this.cubePosition=new THREE.Vector3(0,0,0),this.castShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0,0],this.shadowCascadeWidth=[512,512,512,512],this.shadowCascadeHeight=[512,512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.texture=null,this.textureCameraLeft=-500,this.textureCameraRight=500,this.textureCameraTop=500,this.textureCameraBottom=-500,this.textureCameraNear=1,this.textureCameraFar=5e3,this.textureWidth=512,this.textureHeight=512,this.textureBias=-4,this.castTransparentShadow=!1},THREE.DayLightCube.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Node,this.intensity=void 0!==t?t:1,this.distance=0,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0,0],this.shadowCascadeWidth=[512,512,512,512],this.shadowCascadeHeight=[512,512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.texture=null,this.textureCameraLeft=-500,this.textureCameraRight=500,this.textureCameraTop=500,this.textureCameraBottom=-500,this.textureCameraNear=1,this.textureCameraFar=5e3,this.textureWidth=512,this.textureHeight=512,this.textureBias=-4,this.castTransparentShadow=!1},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,a){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==a?a:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,a){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==a?a:0,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SphereLight=function(e,t,a,r){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==a?a:0,this.radius=void 0!==r?r:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.forwardShadowSide=0},THREE.SphereLight.prototype=Object.create(THREE.Light.prototype),THREE.TubeLight=function(e,t,a,r,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==a?a:0,this.radius=void 0!==r?r:.1,this.length=void 0!==i?r:5,this.occlusionEnabled=!1,this.castShadow=!1,this.onlyShadow=!1,this.endPoint0=new THREE.Node,this.endPoint1=new THREE.Node,this.endPoint0.position.y=.5*-i,this.endPoint1.position.y=.5*i,this.add(this.endPoint0),this.add(this.endPoint1)},THREE.TubeLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,a,r,i){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Node,this.intensity=void 0!==t?t:1,this.distance=void 0!==a?a:0,this.angle=void 0!==r?r:Math.PI/2,this.exponent=void 0!==i?i:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.texture=null,this.textureCameraNear=1,this.textureCameraFar=5e3,this.textureCameraFov=50,this.textureCameraAspectScale=1,this.textureWidth=512,this.textureHeight=512,this.textureBias=-4,this.castTransparentShadow=!1},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.ImageLight=function(e,t,a){THREE.Light.call(this,16777215),this.textureSpecular=e,this.textureDiffuse=t,this.textureMip=e,this.textureEncoding=THREE.rgba8Encoding,this.textureGamma=!0,this.textureFixSeams=!1,this.intensity=void 0!==a?a:1,this.local=!1,this.size=new THREE.Vector3(1,1,1)},THREE.ImageLight.prototype=Object.create(THREE.Light.prototype),THREE.LightProxy=function(e,t){this.light=e,this.renderer=t},THREE.LightProxy.prototype=Object.create(THREE.Mesh.prototype),THREE.LightProxy.prototype.update=function(e){var t=this.materials[0].uniforms;t.matProj&&(t.matProj.value=e.projectionMatrix),t.matProjInverse&&(t.matProjInverse.value=e.projectionMatrixInverse),t.matView&&(t.matView.value=e.matrixWorldInverse),t.matViewInverse&&(t.matViewInverse.value=e.matrixWorld),this.light&&(this.visible=this.light.visible)},THREE.LightProxy.prototype.resize=function(e,t){var a=this.materials[0],r=a.uniforms;r.viewSize&&r.viewSize.value.set(e,t)},THREE.LightProxy.prototype.setSamplers=function(e){var t=this.renderer,a=e.uniforms,r=t.getUseMultipleRenderTargets();if(r){var i=t.getCombinedTarget();a.viewSize.value.set(i.width,i.height),a.samplerDiffuseRGB&&(a.samplerDiffuseRGB.value=i.colorTexture[0]),a.samplerSpecularRGB&&(a.samplerSpecularRGB.value=i.colorTexture[1]),a.samplerWrapRGB&&(a.samplerWrapRGB.value=i.colorTexture[2]),a.samplerNormal&&(a.samplerNormal.value=i.colorTexture[3]),a.samplerDepth&&(a.samplerDepth.value=t.useDepthTexture?i.depthTexture:i.colorTexture[4])}else{var o=t.getColorTarget(),n=t.getNormalDepthTarget();a.viewSize.value.set(o.width,o.height),a.samplerColor&&(a.samplerColor.value=o),a.samplerNormalDepth&&(a.samplerNormalDepth.value=n)}var s=t.getSSAOTarget();a.samplerSSAO&&(a.samplerSSAO.value=s)},THREE.LightProxy.prototype.generateDefines=function(){var e=this.light,t=this.renderer,a="webgl2"===t.renderer.getRenderingBackend(),r=t.shadowMapUseDepthTextures&&t.renderer.supportsDepthTextures(),i={};if(t.shadowMapEnabled&&e&&e.castShadow){i.USE_SHADOWMAP=!0;var o=void 0!==e.shadowMapType?e.shadowMapType:t.shadowMapType;switch(o){case THREE.BasicShadowMap:i.SHADOWMAP_TYPE_BASIC=!0;break;case THREE.PCFSoftShadowMap:i.SHADOWMAP_TYPE_PCF_SOFT=!0;break;case THREE.PCFSoftHQShadowMap:i.SHADOWMAP_TYPE_PCF_SOFT_HQ=!0}i.SLOPE_DEPTH_BIAS=t.shadowMapSlopeDepthBias,i.SHADOWMAP_DEBUG=t.shadowMapDebug,i.DEPTH_TEXTURES=t.shadowMapUseDepthTextures&&t.renderer.supportsDepthTextures(),i.USE_SHADOWSAMPLER=a&&r}return t.ssaoEnabled&&e&&(i.USE_SSAO=!0),t.skinHighQuality&&(i.SKIN_HQ=!0),i.USE_MRT=t.getUseMultipleRenderTargets(),i.TEXTURE_DEPTH=t.useDepthTexture,i.PROJECTED_TEXTURE=!!e.texture||!!e.castTransparentShadow,i.PROJECTED_SHADOW=!!e.castTransparentShadow,i},THREE.LightProxy.prototype.getShadowMapParameters=function(){var e,t=this.renderer,a=t.renderer,r=!a.supportsDepthOnlyRenderTarget(),i="webgl2"===a.getRenderingBackend(),o=a.supportsLuminanceFloatRenderTarget()?THREE.LuminanceFormat:a.supportsRGBFloatRenderTarget()?THREE.RGBFormat:THREE.RGBAFormat;if(i)switch(o){case THREE.LuminanceFormat:e=THREE.R32F,o=THREE.RED;break;case THREE.RGBFormat:e=THREE.RGB32F;break;case THREE.RGBAFormat:e=THREE.RGBA32F}else e=o;var n={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:o,internalFormat:e,type:THREE.FloatType};if(i)var s={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,useColorTexture:r,stencilBuffer:!1,format:o,useDepthTexture:!0,depthTextureType:t.shadowMapDepthTextureType};else var s={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,useColorTexture:r,stencilBuffer:!1,format:o,useDepthTexture:!0,depthTextureType:t.shadowMapDepthTextureType};var l=t.shadowMapUseDepthTextures&&a.supportsDepthTextures(),d=l?s:n;return d},THREE.LightProxy.prototype.setupDirectionalShadowmap=function(e){var t=this.light,a=t.properties,r=this.getShadowMapParameters();a.shadowMap=[],a.shadowMatrixDeferred=[],a.shadowMatrixForward=[],a.shadowCamera=[],a.pointsWorld=[],a.pointsFrustum=[];for(var i=0;e>i;i++){var o=new THREE.RenderTarget(t.shadowMapWidth,t.shadowMapHeight,r);o.generateMipmaps=!1,a.shadowMap[i]=o;var n=new THREE.OrthographicCamera(t.shadowCameraLeft,t.shadowCameraRight,t.shadowCameraTop,t.shadowCameraBottom,t.shadowCameraNear,t.shadowCameraFar);if(a.shadowCamera[i]=n,a.shadowMatrixDeferred[i]=new THREE.Matrix4,a.shadowMatrixForward[i]=new THREE.Matrix4,t.shadowCascade){a.pointsWorld[i]=[],a.pointsFrustum[i]=[];for(var s=a.pointsWorld[i],l=a.pointsFrustum[i],d=0;8>d;d++)s[d]=new THREE.Vector3,l[d]=new THREE.Vector3;var h=t.shadowCascadeNearZ[i],c=t.shadowCascadeFarZ[i];l[0].set(-1,-1,h),l[1].set(1,-1,h),l[2].set(-1,1,h),l[3].set(1,1,h),l[4].set(-1,-1,c),l[5].set(1,-1,c),l[6].set(-1,1,c),l[7].set(1,1,c)}a.shadowMapPars=new THREE.Vector4(t.shadowMapWidth,t.shadowMapHeight,t.shadowDarkness,t.shadowBias)}t.properties.cascadeCount=e},THREE.LightProxy.prototype.updateDirectionalShadowmap=function(e){var t=this.light,a=this.materials[0].uniforms,r=t.properties;if(t.shadowCascade&&!r.gyro){var i=new THREE.Gyroscope;i.position=t.shadowCascadeOffset,i.add(t),i.add(t.target),e.add(i),r.gyro=i;var o=e.getTopParent();if(void 0!==o&&o instanceof THREE.Scene){var n=new THREE.Node,s=new THREE.Node;o.add(n),o.add(s),n.position=t.position,s.position=t.target.position,t.properties.nonGyroLight=n,t.properties.nonGyroTarget=s}else console.error("THREE.LightProxy.updateDirectionalShadowmap: can't find parent scene node")}for(var l=0;l<r.cascadeCount;l++){var d=r.shadowMatrixDeferred[l],h=r.shadowMatrixForward[l],c=r.shadowCamera[l],u=r.shadowMap[l];d.multiply(c.projectionMatrix,c.matrixWorldInverse),h.multiply(THREE.LightProxy.biasMatrix,d),d.multiplySelf(e.matrixWorld),a.matShadow.value[l]=d,a.samplerShadowMap.value[l]=u.useDepthTexture?u.depthTexture:u}a.shadowDarkness.value=Math.sqrt(t.shadowDarkness),a.shadowBias.value=t.shadowBias,a.shadowMapSize.value.set(t.shadowMapWidth,t.shadowMapHeight)},THREE.LightProxy.prototype.setupProjectedTexture=function(){var e=this.light,t=e.properties,a=new THREE.OrthographicCamera(e.textureCameraLeft,e.textureCameraRight,e.textureCameraTop,e.textureCameraBottom,e.textureCameraNear,e.textureCameraFar);if(t.textureCamera=a,t.textureMatrixDeferred=new THREE.Matrix4,e.castTransparentShadow){var r={minFilter:THREE.LinearMipMapLinearFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,type:THREE.UnsignedByteType},i=new THREE.RenderTarget(e.textureWidth,e.textureHeight,r);e.shadowCascade||e.textureWidth!==e.shadowMapWidth||e.textureHeight!==e.shadowMapHeight||(i.shareDepthFrom=t.shadowMap[0]),e.texture=i}},THREE.LightProxy.prototype.updateProjectedTexture=function(e){var t=this.light,a=this.materials[0].uniforms,r=(t.properties,t.properties.textureMatrixDeferred),i=t.properties.textureCamera;if(i.left=t.textureCameraLeft,i.right=t.textureCameraRight,i.top=t.textureCameraTop,i.bottom=t.textureCameraBottom,i.near=t.textureCameraNear,i.far=t.textureCameraFar,i.updateProjectionMatrix(),t.properties.gyro)var o=t.properties.nonGyroLight,n=t.properties.nonGyroTarget;else var o=t,n=t.target;i.position.copy(o.matrixWorld.getPosition()),t.target&&i.lookAt(n.matrixWorld.getPosition()),i.updateMatrixWorld(),i.matrixWorldInverse.getInverse(i.matrixWorld),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiplySelf(i.projectionMatrix),r.multiplySelf(i.matrixWorldInverse),r.multiplySelf(e.matrixWorld),a.matTexture.value=r,a.samplerTexture.value=t.texture,a.textureBias.value=t.textureBias},THREE.LightProxy.geometryLightSphere=new THREE.SphereGeometry(1,16,8),THREE.LightProxy.geometryLightPlane=new THREE.PlaneGeometry(2,2),THREE.LightProxy.geometryLightBox=new THREE.BoxGeometry(1,1,1),THREE.LightProxy.positionVS=new THREE.Vector3,THREE.LightProxy.directionVS=new THREE.Vector3,THREE.LightProxy.rightVS=new THREE.Vector3,THREE.LightProxy.normalVS=new THREE.Vector3,THREE.LightProxy.upVS=new THREE.Vector3,THREE.LightProxy.positionWS=new THREE.Vector3,THREE.LightProxy.rightWS=new THREE.Vector3,THREE.LightProxy.normalWS=new THREE.Vector3,THREE.LightProxy.upWS=new THREE.Vector3,THREE.LightProxy.biasMatrix=new THREE.Matrix4(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),THREE.SpotLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.spotLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(),o={};t.skinHighQuality&&(o.OES_standard_derivatives=!0);var n=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});this.setSamplers(n);var s=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,s,n);var l=e.properties;if(e.castShadow&&this.setupShadowmap(),e.texture||e.castTransparentShadow){var d=e.textureCameraAspectScale;if(e.texture){var h=e.texture.image;d*=h.width/h.height}var c=new THREE.PerspectiveCamera(e.textureCameraFov,d,e.textureCameraNear,e.textureCameraFar);if(l.textureCamera=c,l.textureMatrixDeferred=new THREE.Matrix4,e.castTransparentShadow){var u={minFilter:THREE.LinearMipMapLinearFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,type:THREE.UnsignedByteType},f=new THREE.RenderTarget(e.textureWidth,e.textureHeight,u);e.shadowCascade||e.textureWidth!==e.shadowMapWidth||e.textureHeight!==e.shadowMapHeight||(f.shareDepthFrom=l.shadowMap),e.texture=f}}},THREE.SpotLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.SpotLightProxy.prototype.setupShadowmap=function(){var e=this.light,t=e.properties,a=this.getShadowMapParameters(),r=new THREE.RenderTarget(e.shadowMapWidth,e.shadowMapHeight,a);r.wrapS=THREE.MirroredRepeatWrapping,r.wrapT=THREE.MirroredRepeatWrapping,r.generateMipmaps=!1,t.shadowMap=r;var i=e.shadowMapWidth/e.shadowMapHeight,o=new THREE.PerspectiveCamera(e.shadowCameraFov,i,e.shadowCameraNear,e.shadowCameraFar);t.shadowCamera=o,t.shadowMatrixDeferred=new THREE.Matrix4,t.shadowMatrixForward=new THREE.Matrix4,t.shadowMapPars=new THREE.Vector4(e.shadowMapWidth,e.shadowMapHeight,e.shadowDarkness,e.shadowBias)},THREE.SpotLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=e.matrixWorldInverse,i=t.matrixWorld,o=THREE.LightProxy.positionVS,n=THREE.LightProxy.directionVS;o.copy(i.getPosition()),r.multiplyVector3(o),n.copy(i.getPosition()),n.subSelf(t.target.matrixWorld.getPosition()),n.normalize(),r.rotateAxis(n),a.lightPositionVS.value.copy(o),a.lightDirectionVS.value.copy(n),a.lightAngleCos.value=Math.cos(.5*t.angle),a.lightDistance.value=t.distance;var s=t.intensity*t.intensity;if(a.lightIntensity.value=s,a.lightColor.value.copyGammaToLinear(t.color),t.castShadow){var l=t.properties.shadowMatrixDeferred,d=t.properties.shadowMatrixForward,h=t.properties.shadowCamera,c=t.properties.shadowMap;l.multiply(h.projectionMatrix,h.matrixWorldInverse),d.multiply(THREE.LightProxy.biasMatrix,l),l.multiplySelf(e.matrixWorld),a.matShadow.value=l,a.samplerShadowMap.value=c.useDepthTexture?c.depthTexture:c,a.shadowDarkness.value=Math.sqrt(t.shadowDarkness),a.shadowBias.value=t.shadowBias,a.shadowMapSize.value.set(t.shadowMapWidth,t.shadowMapHeight)}if(t.texture){var u=t.properties.textureMatrixDeferred,f=t.properties.textureCamera,p=t.texture.image?t.texture.image:t.texture,m=p.width/p.height;f.fov=t.textureCameraFov,f.near=t.textureCameraNear,f.far=t.textureCameraFar,f.aspect=m*t.textureCameraAspectScale,f.updateProjectionMatrix(),f.position.copy(t.matrixWorld.getPosition()),t.target&&f.lookAt(t.target.matrixWorld.getPosition()),f.updateMatrixWorld(),f.matrixWorldInverse.getInverse(f.matrixWorld),u.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),u.multiplySelf(f.projectionMatrix),u.multiplySelf(f.matrixWorldInverse),u.multiplySelf(e.matrixWorld),a.matTexture.value=u,a.samplerTexture.value=t.texture,a.textureBias.value=t.textureBias}},THREE.AreaLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.areaLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines();i.AREA_TEXTURE=!!e.texture;var o={};t.skinHighQuality&&(o.OES_standard_derivatives=!0);var n=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});this.setSamplers(n);var s=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,s,n),e.castShadow&&this.setupShadowmap()},THREE.AreaLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.AreaLightProxy.prototype.setupShadowmap=function(){var e=this.light,t=e.properties,a=this.getShadowMapParameters(),r=new THREE.RenderTarget(e.shadowMapWidth,e.shadowMapHeight,a);if(r.generateMipmaps=!1,t.shadowMap=r,e.shadowCameraOrtho)var i=new THREE.OrthographicCamera(e.shadowCameraLeft,e.shadowCameraRight,e.shadowCameraTop,e.shadowCameraBottom,e.shadowCameraNear,e.shadowCameraFar);else var o=e.shadowMapWidth/e.shadowMapHeight,i=new THREE.PerspectiveCamera(e.shadowCameraFov,o,e.shadowCameraNear,e.shadowCameraFar);t.shadowCamera=i,t.shadowMatrixDeferred=new THREE.Matrix4,t.shadowMatrixForward=new THREE.Matrix4,t.shadowMapPars=new THREE.Vector4(e.shadowMapWidth,e.shadowMapHeight,e.shadowDarkness,e.shadowBias)},THREE.AreaLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=t.matrixWorld,i=e.matrixWorldInverse,o=THREE.LightProxy.positionVS,n=THREE.LightProxy.rightVS,s=THREE.LightProxy.normalVS,l=THREE.LightProxy.upVS;o.copy(r.getPosition()),i.multiplyVector3(o),a.lightPositionVS.value.copy(o),n.copy(t.right),s.copy(t.normal),r.rotateAxis(n),r.rotateAxis(s),i.rotateAxis(n),i.rotateAxis(s),l.cross(n,s),l.normalize(),a.lightRightVS.value.copy(n),a.lightNormalVS.value.copy(s),a.lightUpVS.value.copy(l),a.lightWidth.value=t.width,a.lightHeight.value=t.height,a.constantAttenuation.value=t.constantAttenuation,a.linearAttenuation.value=t.linearAttenuation,a.quadraticAttenuation.value=t.quadraticAttenuation,a.samplerTexture.value=t.texture;var d=t.intensity*t.intensity;if(a.lightIntensity.value=d,a.lightColor.value.copyGammaToLinear(t.color),t.castShadow){var h=t.properties.shadowMatrixDeferred,c=t.properties.shadowMatrixForward,u=t.properties.shadowCamera,f=t.properties.shadowMap;h.multiply(u.projectionMatrix,u.matrixWorldInverse),c.multiply(THREE.LightProxy.biasMatrix,h),h.multiplySelf(e.matrixWorld),a.matShadow.value=h,a.samplerShadowMap.value=f.useDepthTexture?f.depthTexture:f,a.shadowDarkness.value=Math.sqrt(t.shadowDarkness),a.shadowBias.value=t.shadowBias,a.shadowMapSize.value.set(t.shadowMapWidth,t.shadowMapHeight)}},THREE.PolyLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.polyLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines();i.POLY_TEXTURE=!!e.texture;var o={};t.renderer.supportsShaderTextureLod()&&e.texture&&(o.EXT_shader_texture_lod=!0);var n=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});if(r.lightPoints.value=[new THREE.Vector3(-10,10,0),new THREE.Vector3(10,10,0),new THREE.Vector3(10,-10,0),new THREE.Vector3(-10,-10,0)],void 0===THREE.PolyLightProxy.samplerLtcMat){var s=new Float32Array(THREE.PolyLight.ltcMatData),l=new THREE.DataTexture(s,64,64,THREE.RGBAFormat,THREE.FloatType,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.NearestFilter);l.flipY=!1,l.generateMipmaps=!1,l.needsUpdate=!0,THREE.PolyLightProxy.samplerLtcMat=l}if(void 0===THREE.PolyLightProxy.samplerLtcMag){var d=new Float32Array(THREE.PolyLight.ltcMagData),h=new THREE.DataTexture(d,32,32,THREE.LuminanceAlphaFormat,THREE.FloatType,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.NearestFilter);h.flipY=!1,h.generateMipmaps=!1,h.needsUpdate=!0,THREE.PolyLightProxy.samplerLtcMag=h}this.samplerLtcMat=THREE.PolyLightProxy.samplerLtcMat,this.samplerLtcMag=THREE.PolyLightProxy.samplerLtcMag,this.setSamplers(n);var c=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,c,n),e.castShadow&&this.setupShadowmap()},THREE.PolyLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.PolyLightProxy.prototype.setupShadowmap=function(){var e=this.light,t=e.properties,a=this.getShadowMapParameters(),r=new THREE.RenderTarget(e.shadowMapWidth,e.shadowMapHeight,a);if(r.generateMipmaps=!1,t.shadowMap=r,e.shadowCameraOrtho)var i=new THREE.OrthographicCamera(e.shadowCameraLeft,e.shadowCameraRight,e.shadowCameraTop,e.shadowCameraBottom,e.shadowCameraNear,e.shadowCameraFar);else var o=e.shadowMapWidth/e.shadowMapHeight,i=new THREE.PerspectiveCamera(e.shadowCameraFov,o,e.shadowCameraNear,e.shadowCameraFar);t.shadowCamera=i,t.shadowMatrixDeferred=new THREE.Matrix4,t.shadowMatrixForward=new THREE.Matrix4,t.shadowMapPars=new THREE.Vector4(e.shadowMapWidth,e.shadowMapHeight,e.shadowDarkness,e.shadowBias)},THREE.PolyLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=t.matrixWorld,i=e.matrixWorldInverse,o=THREE.LightProxy.positionWS,n=THREE.LightProxy.rightWS,s=THREE.LightProxy.normalWS,l=THREE.LightProxy.upWS;o.copy(r.getPosition()),n.copy(t.right).normalize(),s.copy(t.normal).normalize(),r.rotateAxis(n),r.rotateAxis(s),l.cross(n,s),l.normalize(),n.multiplyScalar(t.width),l.multiplyScalar(t.height);var d=a.lightPoints.value,h=d[0];h.copy(o),h.subSelf(n),h.addSelf(l),i.multiplyVector3(h),h=d[1],h.copy(o),h.addSelf(n),h.addSelf(l),i.multiplyVector3(h),h=d[2],h.copy(o),h.addSelf(n),h.subSelf(l),i.multiplyVector3(h),h=d[3],h.copy(o),h.subSelf(n),h.subSelf(l),i.multiplyVector3(h),a.lightTwoSided.value=t.twoSided;var c=t.intensity*t.intensity;if(a.lightIntensity.value=c,a.lightColor.value.copyGammaToLinear(t.color),a.samplerLtcMat.value=this.samplerLtcMat,a.samplerLtcMag.value=this.samplerLtcMag,a.samplerTexture.value=t.texture,a.samplerTextureSize.value=t.texture?t.texture.getWidth():0,a.samplerTextureBias.value=t.textureBias,t.castShadow){var u=t.properties.shadowMatrixDeferred,f=t.properties.shadowMatrixForward,p=t.properties.shadowCamera,m=t.properties.shadowMap;u.multiply(p.projectionMatrix,p.matrixWorldInverse),f.multiply(THREE.LightProxy.biasMatrix,u),u.multiplySelf(e.matrixWorld),a.matShadow.value=u,a.samplerShadowMap.value=m.useDepthTexture?m.depthTexture:m,a.shadowDarkness.value=Math.sqrt(t.shadowDarkness),a.shadowBias.value=t.shadowBias,a.shadowMapSize.value.set(t.shadowMapWidth,t.shadowMapHeight)}},THREE.MultiPolyLightProxy=function(e){THREE.LightProxy.call(this,null,e),this.lights=[]},THREE.MultiPolyLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.MultiPolyLightProxy.prototype.init=function(){for(var e=this.lights,t=this.renderer,a=THREE.DeferredShaders.polyLightMulti,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(),o=!1,n=0,s=e.length;s>n;n++){var l=e[n];o=o||!!l.texture}i.POLY_TEXTURE=o;var d={};t.renderer.supportsShaderTextureLod()&&o&&(d.EXT_shader_texture_lod=!0);for(var h=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:d,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0}),c=[],u=[],f=[],p=[],m=[],n=0,s=e.length;s>n;n++){var l=e[n];c[4*n]=new THREE.Vector3(0,0,0),c[4*n+1]=new THREE.Vector3(0,0,0),c[4*n+2]=new THREE.Vector3(0,0,0),c[4*n+3]=new THREE.Vector3(0,0,0),u[3*n]=0,u[3*n+1]=0,u[3*n+2]=0,f[n]=0,p[n]=l.texture,m[2*n]=l.texture?l.texture.getWidth():0,m[2*n+1]=l.textureBias}if(r.polyLightPoints.value=c,r.polyLightColor.value=u,r.polyLightPars.value=f,r.samplerTexture.value=p,r.samplerTexturePars.value=m,void 0===THREE.MultiPolyLightProxy.samplerLtcMat){var v=new Float32Array(THREE.PolyLight.ltcMatData),g=new THREE.DataTexture(v,64,64,THREE.RGBAFormat,THREE.FloatType,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.NearestFilter);g.flipY=!1,g.generateMipmaps=!1,g.needsUpdate=!0,THREE.MultiPolyLightProxy.samplerLtcMat=g}if(void 0===THREE.MultiPolyLightProxy.samplerLtcMag){var S=new Float32Array(THREE.PolyLight.ltcMagData),x=new THREE.DataTexture(S,32,32,THREE.LuminanceAlphaFormat,THREE.FloatType,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.NearestFilter);x.flipY=!1,x.generateMipmaps=!1,x.needsUpdate=!0,THREE.MultiPolyLightProxy.samplerLtcMag=x}this.samplerLtcMat=THREE.MultiPolyLightProxy.samplerLtcMat,this.samplerLtcMag=THREE.MultiPolyLightProxy.samplerLtcMag,this.setSamplers(h);var G=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,G,h),this.setupShadowmap()},THREE.MultiPolyLightProxy.prototype.addLight=function(e){this.lights.push(e)},THREE.MultiPolyLightProxy.prototype.generateDefines=function(){for(var e=this.lights,t=this.renderer,a="webgl2"===t.renderer.getRenderingBackend(),r=t.shadowMapUseDepthTextures&&t.renderer.supportsDepthTextures(),i=!1,o=t.shadowMapType,n=0,s=e.length;s>n;n++){var l=e[n];i=i||l.castShadow,void 0!==l.shadowMapType&&(o=Math.max(o,l.shadowMapType))}var d={};if(t.shadowMapEnabled&&i){switch(d.USE_SHADOWMAP=!0,o){case THREE.BasicShadowMap:d.SHADOWMAP_TYPE_BASIC=!0;break;case THREE.PCFSoftShadowMap:d.SHADOWMAP_TYPE_PCF_SOFT=!0;break;case THREE.PCFSoftHQShadowMap:d.SHADOWMAP_TYPE_PCF_SOFT_HQ=!0}d.SLOPE_DEPTH_BIAS=t.shadowMapSlopeDepthBias,d.SHADOWMAP_DEBUG=t.shadowMapDebug,d.DEPTH_TEXTURES=t.shadowMapUseDepthTextures&&t.renderer.supportsDepthTextures(),d.USE_SHADOWSAMPLER=a&&r}return d.USE_MRT=t.getUseMultipleRenderTargets(),d.TEXTURE_DEPTH=t.useDepthTexture,d.MAX_POLY_LIGHTS_MULTI=e.length,d},THREE.MultiPolyLightProxy.prototype.setupShadowmap=function(){for(var e=this.getShadowMapParameters(),t=this.lights,a=0,r=t.length;r>a;a++){var i=t[a];if(i.castShadow){var o=i.properties,n=new THREE.RenderTarget(i.shadowMapWidth,i.shadowMapHeight,e);if(n.generateMipmaps=!1,o.shadowMap=n,i.shadowCameraOrtho)var s=new THREE.OrthographicCamera(i.shadowCameraLeft,i.shadowCameraRight,i.shadowCameraTop,i.shadowCameraBottom,i.shadowCameraNear,i.shadowCameraFar);else var l=i.shadowMapWidth/i.shadowMapHeight,s=new THREE.PerspectiveCamera(i.shadowCameraFov,l,i.shadowCameraNear,i.shadowCameraFar);o.shadowCamera=s;var d=new THREE.Matrix4,h=new THREE.Matrix4;o.shadowMatrixDeferred=d,o.shadowMatrixForward=h,o.shadowMapPars=new THREE.Vector4(i.shadowMapWidth,i.shadowMapHeight,i.shadowDarkness,i.shadowBias)}}},THREE.MultiPolyLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.lights,a=this.materials[0].uniforms;a.samplerLtcMat.value=this.samplerLtcMat,a.samplerLtcMag.value=this.samplerLtcMag;for(var r=a.polyLightPoints.value,i=a.polyLightColor.value,o=a.polyLightPars.value,n=a.samplerTexture.value,s=a.samplerTexturePars.value,l=a.samplerShadowMap.value,d=a.shadowMapPars.value,h=a.shadowMatrix.value,c=e.matrixWorldInverse,u=THREE.MultiPolyLightProxy.tmpColor,f=THREE.LightProxy.positionWS,p=THREE.LightProxy.rightWS,m=THREE.LightProxy.normalWS,v=THREE.LightProxy.upWS,g=0,S=t.length;S>g;g++){var x=t[g],G=x.matrixWorld,M=3*g,y=4*g;f.copy(G.getPosition()),p.copy(x.right).normalize(),m.copy(x.normal).normalize(),G.rotateAxis(p),G.rotateAxis(m),v.cross(p,m),v.normalize(),p.multiplyScalar(x.width),v.multiplyScalar(x.height);var X=r[y];X.copy(f),X.subSelf(p),X.addSelf(v),c.multiplyVector3(X),X=r[y+1],X.copy(f),X.addSelf(p),X.addSelf(v),c.multiplyVector3(X),X=r[y+2],X.copy(f),X.addSelf(p),X.subSelf(v),c.multiplyVector3(X),X=r[y+3],X.copy(f),X.subSelf(p),X.subSelf(v),c.multiplyVector3(X),o[g]=x.twoSided;var _=x.intensity*x.intensity;if(u.copyGammaToLinear(x.color),i[M]=u.r*_,i[M+1]=u.g*_,i[M+2]=u.b*_,n[g]=x.texture,s[2*g]=x.texture?x.texture.getWidth():0,s[2*g+1]=x.textureBias,x.castShadow){var w=x.properties.shadowMatrixDeferred,D=x.properties.shadowMatrixForward,C=x.properties.shadowCamera,A=x.properties.shadowMap;w.multiply(C.projectionMatrix,C.matrixWorldInverse),D.multiply(THREE.LightProxy.biasMatrix,w),w.multiplySelf(e.matrixWorld),h[g]=w,l[g]=A.useDepthTexture?A.depthTexture:A,d[y]=x.shadowMapWidth,d[y+1]=x.shadowMapHeight,d[y+2]=Math.sqrt(x.shadowDarkness),d[y+3]=x.shadowBias}}},THREE.MultiPolyLightProxy.tmpColor=new THREE.Color,THREE.DayLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.dayLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(e),o=e.shadowCascade?e.shadowCascadeCount:1;i.SHADOWMAP_COUNT=o;var n={};t.skinHighQuality&&(n.OES_standard_derivatives=!0);var s=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:n,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});this.setSamplers(s);var l=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,l,s),e.castShadow&&this.setupDirectionalShadowmap(o),(e.texture||e.castTransparentShadow)&&this.setupProjectedTexture()},THREE.DayLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.DayLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=THREE.LightProxy.directionVS;r.copy(t.matrixWorld.getPosition()),r.subSelf(t.target.matrixWorld.getPosition()),r.normalize(),e.matrixWorldInverse.rotateAxis(r),a.lightDirectionVSSun.value.copy(r),r.copy(t.hemiPosition),r.normalize(),e.matrixWorldInverse.rotateAxis(r),a.lightDirectionVSHemi.value.copy(r);var i=t.sunIntensity*t.sunIntensity,o=t.hemiIntensity*t.hemiIntensity;a.lightIntensitySun.value=i,a.lightIntensityHemi.value=o,a.lightColorSun.value.copyGammaToLinear(t.color),a.lightColorSky.value.copyGammaToLinear(t.skyColor),a.lightColorGround.value.copyGammaToLinear(t.groundColor),t.castShadow&&this.updateDirectionalShadowmap(e),t.texture&&this.updateProjectedTexture(e)},THREE.DayLightCubeProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.dayLightCube,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(e),o={},n=e.shadowCascade?e.shadowCascadeCount:1;switch(i.SHADOWMAP_COUNT=n,e.local&&(i.LIGHT_LOCAL=!0),e.textureEncoding){case THREE.rgba8Encoding:i.IBL_LDR_RGBA=!0;break;case THREE.rgbm8Encoding:i.IBL_HDR_RGBM=!0;break;case THREE.rgba16fEncoding:i.IBL_HDR_RGBA16F=!0;break;case THREE.rgba32fEncoding:i.IBL_HDR_RGBA32F=!0}var s=e.textureSpecular instanceof THREE.RenderTargetCube;e.textureGamma&&!s&&(i.IBL_GAMMA_TEXTURE=!0),e.textureFixSeams&&(i.FIX_SEAMS=!0),t.specularMipFix&&(i.SPECULAR_MIP_FIX=!0),(t.skinHighQuality||t.specularMipFix)&&(o.OES_standard_derivatives=!0),t.renderer.supportsShaderTextureLod()&&(o.EXT_shader_texture_lod=!0,o.OES_standard_derivatives=!0);var l=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});this.setSamplers(l);var d=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,d,l),e.castShadow&&this.setupDirectionalShadowmap(n),(e.texture||e.castTransparentShadow)&&this.setupProjectedTexture()},THREE.DayLightCubeProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.DayLightCubeProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=THREE.LightProxy.directionVS;r.copy(t.matrixWorld.getPosition()),r.subSelf(t.target.matrixWorld.getPosition()),r.normalize(),e.matrixWorldInverse.rotateAxis(r),a.lightDirectionVSSun.value.copy(r),a.samplerSpecular.value=t.textureSpecular,a.samplerDiffuse.value=t.textureDiffuse,a.samplerMip.value=t.textureMip,a.maxMipSpecular.value=t.textureSpecular.mipmapCount;var i=t.textureSpecular.image?t.textureSpecular.image[0]:null,o=i?i.width:0;if(a.samplerSize.value=o,t.local){var n=t.size,s=t.cubePosition;this.position.copy(s),this.scale.copy(n),a.lightSize.value.copy(n).multiplyScalar(.5),a.lightPositionWS.value.copy(s)
}var l=t.intensity*t.intensity,d=t.ambientIntensity*t.ambientIntensity;a.lightIntensitySun.value=l,a.lightIntensityAmbient.value=d,a.lightColorSun.value.copyGammaToLinear(t.color),t.castShadow&&this.updateDirectionalShadowmap(e),t.texture&&this.updateProjectedTexture(e)},THREE.DirectionalLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.directionalLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(e),o={};t.skinHighQuality&&(o.OES_standard_derivatives=!0);var n=e.shadowCascade?e.shadowCascadeCount:1;i.SHADOWMAP_COUNT=n;var s=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});this.setSamplers(s);var l=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,l,s),e.castShadow&&this.setupDirectionalShadowmap(n),(e.texture||e.castTransparentShadow)&&this.setupProjectedTexture()},THREE.DirectionalLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.DirectionalLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=THREE.LightProxy.directionVS;r.copy(t.matrixWorld.getPosition()),r.subSelf(t.target.matrixWorld.getPosition()),r.normalize(),e.matrixWorldInverse.rotateAxis(r),a.lightDirectionVS.value.copy(r);var i=t.intensity*t.intensity;a.lightIntensity.value=i,a.lightColor.value.copyGammaToLinear(t.color),t.castShadow&&this.updateDirectionalShadowmap(e),t.texture&&this.updateProjectedTexture(e)},THREE.HemisphereLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.hemisphereLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(e),o={};t.skinHighQuality&&(o.OES_standard_derivatives=!0);var n=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0});this.setSamplers(n);var s=THREE.LightProxy.geometryLightPlane;THREE.Mesh.call(this,s,n)},THREE.HemisphereLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.HemisphereLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=THREE.LightProxy.directionVS;r.copy(t.matrixWorld.getPosition()),r.normalize(),e.matrixWorldInverse.rotateAxis(r),a.lightDirectionVS.value.copy(r);var i=t.intensity*t.intensity;a.lightIntensity.value=i,a.lightColorSky.value.copyGammaToLinear(t.color),a.lightColorGround.value.copyGammaToLinear(t.groundColor)},THREE.PointLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.pointLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines();i.SHADOWMAP_COUNT=6;var o={};t.skinHighQuality&&(o.OES_standard_derivatives=!0);var n,s=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0});e.distance>0?(n=THREE.LightProxy.geometryLightSphere,s.depthTest=!0,s.side=THREE.BackSide):(n=THREE.LightProxy.geometryLightPlane,s.depthTest=!1,s.side=THREE.FrontSide),this.setSamplers(s),THREE.Mesh.call(this,n,s),e.castShadow&&this.setupShadowmap()},THREE.PointLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.PointLightProxy.prototype.setupShadowmap=function(){var e=this.light,t=e.properties,a=this.getShadowMapParameters();t.shadowMap=[],t.shadowCamera=[],t.shadowMatrixDeferred=[],t.shadowMatrixForward=[];for(var r=[new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0)],i=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],o=0;6>o;o++){var n=new THREE.RenderTarget(e.shadowMapWidth,e.shadowMapHeight,a);n.generateMipmaps=!1,t.shadowMap[o]=n;var s=e.shadowMapWidth/e.shadowMapHeight,l=new THREE.PerspectiveCamera(90,s,e.shadowCameraNear,e.shadowCameraFar);l.up.copy(r[o]),l.lookAt(i[o]),t.shadowCamera[o]=l,t.shadowMatrixDeferred[o]=new THREE.Matrix4,t.shadowMatrixForward[o]=new THREE.Matrix4}},THREE.PointLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=t.properties,i=t.distance;if(i>0){var o=THREE.LightProxy.positionVS;this.scale.set(1,1,1).multiplyScalar(i),a.lightDistance.value=i,o.copy(t.matrixWorld.getPosition()),e.matrixWorldInverse.multiplyVector3(o),a.lightPositionVS.value.copy(o),this.position.copy(t.matrixWorld.getPosition())}else a.lightDistance.value=1/0;var n=t.intensity*t.intensity;if(a.lightIntensity.value=n,a.lightColor.value.copyGammaToLinear(t.color),t.castShadow){for(var s=0;6>s;s++){var l=r.shadowMatrixDeferred[s],d=r.shadowMatrixForward[s],h=r.shadowCamera[s],c=r.shadowMap[s];l.multiply(h.projectionMatrix,h.matrixWorldInverse),d.multiply(THREE.LightProxy.biasMatrix,l),l.multiplySelf(e.matrixWorld),a.matShadow.value[s]=l,a.samplerShadowMap.value[s]=c.useDepthTexture?c.depthTexture:c}a.shadowDarkness.value=Math.sqrt(t.shadowDarkness),a.shadowBias.value=t.shadowBias,a.shadowMapSize.value.set(t.shadowMapWidth,t.shadowMapHeight)}},THREE.SphereLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.sphereLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines();i.SHADOWMAP_COUNT=6;var o={};t.skinHighQuality&&(o.OES_standard_derivatives=!0);var n,s=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0});e.distance>0?(n=THREE.LightProxy.geometryLightSphere,s.depthTest=!0,s.side=THREE.BackSide):(n=THREE.LightProxy.geometryLightPlane,s.depthTest=!1,s.side=THREE.FrontSide),this.setSamplers(s),THREE.Mesh.call(this,n,s),e.castShadow&&this.setupShadowmap()},THREE.SphereLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.SphereLightProxy.prototype.setupShadowmap=function(){var e=this.light,t=e.properties,a=this.getShadowMapParameters();t.shadowMap=[],t.shadowCamera=[],t.shadowMatrixDeferred=[],t.shadowMatrixForward=[];for(var r=[new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0)],i=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],o=0;6>o;o++){var n=new THREE.RenderTarget(e.shadowMapWidth,e.shadowMapHeight,a);n.generateMipmaps=!1,t.shadowMap[o]=n;var s=e.shadowMapWidth/e.shadowMapHeight,l=new THREE.PerspectiveCamera(90,s,e.shadowCameraNear,e.shadowCameraFar);l.up.copy(r[o]),l.lookAt(i[o]),t.shadowCamera[o]=l,t.shadowMatrixDeferred[o]=new THREE.Matrix4,t.shadowMatrixForward[o]=new THREE.Matrix4}t.shadowMapPars=new THREE.Vector4(e.shadowMapWidth,e.shadowMapHeight,e.shadowDarkness,e.shadowBias)},THREE.SphereLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=t.properties,i=t.distance;if(i>0){var o=THREE.LightProxy.positionVS;this.scale.set(1,1,1).multiplyScalar(i),a.lightDistance.value=i,o.copy(t.matrixWorld.getPosition()),e.matrixWorldInverse.multiplyVector3(o),a.lightPositionVS.value.copy(o),this.position.copy(t.matrixWorld.getPosition())}else a.lightDistance.value=1/0;a.lightRadius.value=t.radius;var n=t.intensity*t.intensity;if(a.lightIntensity.value=n,a.lightColor.value.copyGammaToLinear(t.color),t.castShadow){for(var s=0;6>s;s++){var l=r.shadowMatrixDeferred[s],d=r.shadowMatrixForward[s],h=r.shadowCamera[s],c=r.shadowMap[s];l.multiply(h.projectionMatrix,h.matrixWorldInverse),d.multiply(THREE.LightProxy.biasMatrix,l),l.multiplySelf(e.matrixWorld),a.matShadow.value[s]=l,a.samplerShadowMap.value[s]=c.useDepthTexture?c.depthTexture:c}a.shadowDarkness.value=Math.sqrt(t.shadowDarkness),a.shadowBias.value=t.shadowBias,a.shadowMapSize.value.set(t.shadowMapWidth,t.shadowMapHeight)}},THREE.TubeLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.tubeLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines();e.occlusionEnabled&&(i.OCCLUSION_ENABLED=!0);var o=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,blending:THREE.AdditiveBlending,depthWrite:!1,depthTest:!1,transparent:!0,side:THREE.FrontSide}),n=THREE.LightProxy.geometryLightPlane;this.setSamplers(o),THREE.Mesh.call(this,n,o)},THREE.TubeLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.TubeLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms,r=THREE.LightProxy.positionVS;r.copy(t.endPoint0.matrixWorld.getPosition()),e.matrixWorldInverse.multiplyVector3(r),a.lightPosition0VS.value.copy(r),r.copy(t.endPoint1.matrixWorld.getPosition()),e.matrixWorldInverse.multiplyVector3(r),a.lightPosition1VS.value.copy(r),a.lightDistance.value=t.distance,a.lightRadius.value=t.radius;var i=t.intensity*t.intensity;a.lightIntensity.value=i,a.lightColor.value.copyGammaToLinear(t.color)},THREE.ImageLightProxy=function(e,t){THREE.LightProxy.call(this,e,t);var a=THREE.DeferredShaders.imageLight,r=THREE.UniformsUtils.clone(a.uniforms),i=this.generateDefines(),o={};switch(e.local&&(i.LIGHT_LOCAL=!0),e.textureEncoding){case THREE.rgba8Encoding:i.IBL_LDR_RGBA=!0;break;case THREE.rgbm8Encoding:i.IBL_HDR_RGBM=!0;break;case THREE.rgba16fEncoding:i.IBL_HDR_RGBA16F=!0;break;case THREE.rgba32fEncoding:i.IBL_HDR_RGBA32F=!0}var n=e.textureSpecular instanceof THREE.RenderTargetCube;e.textureGamma&&!n&&(i.IBL_GAMMA_TEXTURE=!0),e.textureFixSeams&&(i.FIX_SEAMS=!0),t.specularMipFix&&(i.SPECULAR_MIP_FIX=!0,o.OES_standard_derivatives=!0),t.renderer.supportsShaderTextureLod()&&(o.EXT_shader_texture_lod=!0,o.OES_standard_derivatives=!0);var s=new THREE.ShaderMaterial({uniforms:r,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:i,extensions:o,blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0});this.setSamplers(s);var l;e.local?(l=THREE.LightProxy.geometryLightBox,s.depthTest=!0,s.side=THREE.BackSide):(l=THREE.LightProxy.geometryLightPlane,s.depthTest=!1,s.side=THREE.FrontSide),THREE.Mesh.call(this,l,s)},THREE.ImageLightProxy.prototype=Object.create(THREE.LightProxy.prototype),THREE.ImageLightProxy.prototype.update=function(e){THREE.LightProxy.prototype.update.call(this,e);var t=this.light,a=this.materials[0].uniforms;a.samplerSpecular.value=t.textureSpecular,a.samplerDiffuse.value=t.textureDiffuse,a.samplerMip.value=t.textureMip,a.maxMipSpecular.value=t.textureSpecular.mipmapCount;var r=t.intensity*t.intensity;a.lightIntensity.value=r;var i=t.textureSpecular.image?t.textureSpecular.image[0]:null,o=i?i.width:0;if(a.samplerSize.value=o,t.local){var n=t.size,s=t.matrixWorld.getPosition();this.position.copy(s),this.scale.copy(n),a.lightSize.value.copy(n).multiplyScalar(.5),a.lightPositionWS.value.copy(s)}},THREE.FirstPersonControls=function(e,t){var a=this;this.element=t,this.enabled=!1,this.movementSpeed=1,this.decaySpeed=1,this.lookSpeed=.1,this.amplitude=.1,this.frequency=2;var r=new THREE.Node;r.add(e);var i=new THREE.Node;i.add(r);var o=new THREE.Node;o.add(i);var n=!1,s=!1,l=!1,d=!1,h=new THREE.Vector3,c=0,u=Math.PI/2,f=function(e){var t=.001;if(a.enabled!==!1){var r=e.movementX||e.mozMovementX||e.webkitMovementX||0,n=e.movementY||e.mozMovementY||e.webkitMovementY||0;o.rotation.y-=r*a.lookSpeed*t,i.rotation.x-=n*a.lookSpeed*t,i.rotation.x=THREE.Math.clamp(i.rotation.x,-u,u)}},p=function(e){switch(e.keyCode){case 38:case 87:n=!0;break;case 37:case 65:l=!0;break;case 40:case 83:s=!0;break;case 39:case 68:d=!0}},m=function(e){switch(e.keyCode){case 38:case 87:n=!1;break;case 37:case 65:l=!1;break;case 40:case 83:s=!1;break;case 39:case 68:d=!1}},v=function(){a.enabled=document.pointerLockElement===a.element||document.mozPointerLockElement===a.element||document.webkitPointerLockElement===a.element?!0:!1};document.addEventListener("mousemove",f,!1),document.addEventListener("keydown",p,!1),document.addEventListener("keyup",m,!1),document.addEventListener("click",function(){var e="pointerLockElement"in document||"mozPointerLockElement"in document||"webkitPointerLockElement"in document;if(!e)return void console.warn("Pointer lock not available");var t=a.element;t.requestPointerLock=t.requestPointerLock||t.mozRequestPointerLock||t.webkitRequestPointerLock;var r=/Firefox/i.test(navigator.userAgent);if(r){var i=function(){(document.fullscreenElement===t||document.mozFullscreenElement===t||document.mozFullScreenElement===t)&&(document.removeEventListener("fullscreenchange",i),document.removeEventListener("mozfullscreenchange",i),t.requestPointerLock())};document.addEventListener("fullscreenchange",i,!1),document.addEventListener("mozfullscreenchange",i,!1),t.requestFullscreen=t.requestFullscreen||t.mozRequestFullscreen||t.mozRequestFullScreen||t.webkitRequestFullscreen,t.requestFullscreen()}else t.requestPointerLock();document.addEventListener("pointerlockchange",v,!1),document.addEventListener("mozpointerlockchange",v,!1),document.addEventListener("webkitpointerlockchange",v,!1)}),this.getRoot=function(){return o},this.attachCamera=function(e){r.add(e)},this.lookAt=function(e){o.updateMatrixWorld(),o.lookAt(e),o.rotation.x=0,o.rotation.z=0,o.rotation.y*=-1},this.update=function(e){if(c+=e,a.enabled!==!1){var t=a.movementSpeed,i=a.decaySpeed;h.x+=-h.x*i*e,h.z+=-h.z*i*e;var u=Math.sqrt(h.x*h.x+h.z*h.z);r.position.y=u*a.amplitude*Math.sin(c*a.frequency),n&&(h.z-=t*e),s&&(h.z+=t*e),l&&(h.x-=t*e),d&&(h.x+=t*e),o.translateX(h.x),o.translateY(h.y),o.translateZ(h.z)}}},THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.textureMap={}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t+=e.total?(100*e.loaded/e.total).toFixed(0)+"%":(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(t.length<1?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var a=[],r=0;r<e.length;++r)a[r]=this.createMaterial(e[r],t);return a},needsTangents:function(e){for(var t=0,a=e.length;a>t;t++){var r=e[t];if(r instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t,a){function r(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function i(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function o(e,t){var a=new Image;a.onload=function(){if(r(this.width)&&r(this.height))e.image=this;else{var t=i(this.width),a=i(this.height),o=document.createElement("canvas");o.width=t,o.height=a,o.getContext("2d").drawImage(this,0,0,t,a),e.image=o}e.needsUpdate=!0},a.crossOrigin=h.crossOrigin,a.src=t}function n(e,t){return"/"===e[e.length-1]?e+t:e+"/"+t}function s(e,t,a,r,i){var o=e;return t&&(o+="_R["+t[0]+"_"+t[1]+"]"),a&&(o+="_O["+a[0]+"_"+a[1]+"]"),r&&(o+="_W["+r[0]+"_"+r[1]+"]"),i&&(o+="_A["+i+"]"),o}function l(e,r,i,l,d,c,u){var f,p=n(t,i),m=s(p,l,d,c,u);if(void 0===h.textureMap[m]){var v,g=i.toLowerCase().endsWith(".dds"),S=i.toLowerCase().endsWith(".crn");if(g?a?(v=new THREE.CompressedTexture,f=v,THREE.ImageUtils.generateDummyCompressedTexture(v)):v=THREE.ImageUtils.loadCompressedTexture(p):S?a?(v=new THREE.CompressedTexture,f=v,THREE.ImageUtils.generateDummyCompressedTexture(v)):v=THREE.ImageUtils.loadCRNTexture(p):(v=new THREE.Texture,o(v,p)),v.sourceFile=i,l&&(v.repeat.set(l[0],l[1]),1!==l[0]&&(v.wrapS=THREE.RepeatWrapping),1!==l[1]&&(v.wrapT=THREE.RepeatWrapping)),d&&v.offset.set(d[0],d[1]),c){var x={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==x[c[0]]&&(v.wrapS=x[c[0]]),void 0!==x[c[1]]&&(v.wrapT=x[c[1]])}u&&(v.anisotropy=u),h.textureMap[m]=v}return e[r]=h.textureMap[m],f}function d(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var h=this,c="PhongMaterial",u={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null};if(e.shading){var f=e.shading.toLowerCase();"phong"===f?c="PhongMaterial":"basic"===f&&(c="EmissiveMaterial")}void 0!==e.blending&&void 0!==THREE[e.blending]&&(u.blending=THREE[e.blending]),(void 0!==e.transparent||e.transparency<1)&&(u.transparent=e.transparent),void 0!==e.depthTest&&(u.depthTest=e.depthTest),void 0!==e.depthWrite&&(u.depthWrite=e.depthWrite),void 0!==e.visible&&(u.visible=e.visible),void 0!==e.flipSided&&(u.side=THREE.BackSide),void 0!==e.doubleSided&&(u.side=THREE.DoubleSide),void 0!==e.vertexColors&&(u.vertexColors=e.vertexColors),void 0!==e.skinning&&(u.skinning=e.skinning),void 0!==e.wrapAround&&(u.wrapAround=e.wrapAround),void 0!==e.wrapRGB&&(u.wrapRGB=new THREE.Vector3(e.wrapRGB[0],e.wrapRGB[1],e.wrapRGB[2])),e.colorDiffuse?u.color=d(e.colorDiffuse):e.DbgColor&&(u.color=e.DbgColor),e.colorSpecular&&(u.specular=d(e.colorSpecular)),e.colorAmbient&&(u.ambient=d(e.colorAmbient)),e.transparency&&(u.opacity=e.transparency),e.specularCoef&&(u.shininess=e.specularCoef);var p,m=[];e.mapDiffuse&&t&&(p=l(u,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),p&&m.push([p,e.mapDiffuse])),e.mapLight&&t&&(p=l(u,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),p&&m.push([p,e.mapLight])),e.mapBump&&t&&(p=l(u,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),p&&m.push([p,e.mapBump])),e.mapNormal&&t&&(p=l(u,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),p&&m.push([p,e.mapNormal])),e.mapSpecular&&t&&(p=l(u,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),p&&m.push([p,e.mapSpecular])),e.mapGloss&&t&&(p=l(u,"glossMap",e.mapGloss,e.mapGlossRepeat,e.mapGlossOffset,e.mapGlossWrap,e.mapGlossAnisotropy),p&&m.push([p,e.mapGloss])),e.mapNormalGloss&&t&&(p=l(u,"normalGlossMap",e.mapNormalGloss,e.mapNormalGlossRepeat,e.mapNormalGlossOffset,e.mapNormalGlossWrap,e.mapNormalGlossAnisotropy),p&&m.push([p,e.mapNormalGloss])),e.mapBumpScale&&(u.bumpScale=e.mapBumpScale),e.mapNormalScale&&(u.normalScale=new THREE.Vector2(e.mapNormalScale[0],e.mapNormalScale[1]));var v=new THREE[c](u);return void 0!==e.DbgName&&(v.name=e.DbgName),v.properties={texturesToLoad:m},v}},THREE.UTF8Loader=function(){},THREE.UTF8Loader.prototype.load=function(e,t,a){this.downloadModelJson(e,a,t)},THREE.UTF8Loader.MaterialCreator=function(e,t){this.materials={},this.textureMap={};for(var a in t)this.createMaterial(a,t[a],e)},THREE.UTF8Loader.MaterialCreator.prototype.get=function(e){return this.materials[e]},THREE.UTF8Loader.MaterialCreator.prototype.createMaterial=function(e,t,a){var r=this,i=function(e){var t=a+e;if(void 0===r.textureMap[t]){var i,o=e.toLowerCase().endsWith(".dds"),n=e.toLowerCase().endsWith(".crn");i=o?THREE.ImageUtils.loadCompressedTexture(t):n?THREE.ImageUtils.loadCRNTexture(t):THREE.ImageUtils.loadTexture(t),r.textureMap[t]=i}return r.textureMap[t]},o={};for(var n in t){var s=t[n];switch(n.toLowerCase()){case"kd":o.color=(new THREE.Color).setRGB(s[0]/255,s[1]/255,s[2]/255);break;case"ka":o.ambient=(new THREE.Color).setRGB(s[0]/255,s[1]/255,s[2]/255);break;case"ks":o.specular=(new THREE.Color).setRGB(s[0]/255,s[1]/255,s[2]/255);break;case"map_kd":o.map=i(s);break;case"map_ks":o.specularMap=i(s);break;case"map_light":o.lightMap=i(s);break;case"map_normal":o.normalMap=i(s);break;case"map_bump":o.bumpMap=i(s);break;case"map_gloss":o.glossMap=i(s);break;case"ns":o.shininess=s;break;case"side":var l=s.toLowerCase();o.side="double"===l?THREE.DoubleSide:"back"===l?THREE.BackSide:THREE.FrontSide;break;case"alphatest":o.alphaTest=s;break;case"d":1>s&&(o.opacity=s,o.transparent=!0)}}!o.ambient&&o.color&&(o.ambient=o.color);var d=new THREE.PhongMaterial(o);d.name=e,this.materials[e]=d},THREE.UTF8Loader.GeometryCreator=function(){},THREE.UTF8Loader.GeometryCreator.prototype.create=function(e,t){var a,r,i,o,n,s,l,d,h=new THREE.Geometry,c=e.length/8,u=new Float32Array(3*c),f=new Float32Array(3*c),p=new Float32Array(2*c),m=e.length,v=8;for(r=0,i=0,a=i;m>a;a+=v)o=e[a],n=e[a+1],s=e[a+2],u[r++]=o,u[r++]=n,u[r++]=s;for(r=0,i=3,a=i;m>a;a+=v)l=e[a],d=e[a+1],p[r++]=l,p[r++]=d;for(r=0,i=5,a=i;m>a;a+=v)o=e[a],n=e[a+1],s=e[a+2],f[r++]=o,f[r++]=n,f[r++]=s;return h.addAttributeArray("index",t,1),h.addAttributeArray("position",u,3),h.addAttributeArray("normal",f,3),h.addAttributeArray("uv",p,2),h.numVertices=u.length/3,h.numPrimitives=t.length/3,h.offsets=[{start:0,count:t.length,index:0}],h.computeBoundingSphere(),h};var DEFAULT_DECODE_PARAMS={decodeOffsets:[-4095,-4095,-4095,0,0,-511,-511,-511],decodeScales:[1/8191,1/8191,1/8191,1/1023,1/1023,1/1023,1/1023,1/1023]};THREE.UTF8Loader.prototype.decompressAttribsInner_=function(e,t,a,r,i,o,n,s){for(var l=0,d=t;a>d;d++){var h=e.charCodeAt(d);l+=h>>1^-(1&h),r[i]=s*(l+n),i+=o}},THREE.UTF8Loader.prototype.decompressIndices_=function(e,t,a,r,i){for(var o=0,n=0;a>n;n++){var s=e.charCodeAt(t++);r[i++]=o-s,0===s&&o++}},THREE.UTF8Loader.prototype.decompressAABBs_=function(e,t,a,r,i){for(var o=6*a,n=t+o,s=0,l=new Float32Array(o),d=t;n>d;d+=6){var h=e.charCodeAt(d+0)+r[0],c=e.charCodeAt(d+1)+r[1],u=e.charCodeAt(d+2)+r[2],f=e.charCodeAt(d+3)+1>>1,p=e.charCodeAt(d+4)+1>>1,m=e.charCodeAt(d+5)+1>>1;l[s++]=i[0]*(h+f),l[s++]=i[1]*(c+p),l[s++]=i[2]*(u+m),l[s++]=i[0]*f,l[s++]=i[1]*p,l[s++]=i[2]*m}return l},THREE.UTF8Loader.prototype.decompressMesh=function(e,t,a,r,i,o){for(var n=a.decodeScales.length,s=a.decodeOffsets,l=a.decodeScales,d=t.attribRange[0],h=t.attribRange[1],c=d,u=new Float32Array(n*h),f=0;n>f;f++){var p=c+h,m=l[f];m&&this.decompressAttribsInner_(e,c,p,u,f,n,s[f],m),c=p}var v=3*t.indexRange[1],g=new Uint16Array(v);this.decompressIndices_(e,c,v,g,0);var S=void 0,x=t.bboxes;x&&(S=this.decompressAABBs_(e,x,t.names.length,s,l)),o(r,i,u,g,S,t)},THREE.UTF8Loader.prototype.copyAttrib=function(e,t,a,r){for(var i=0;e>i;i++)a[i]=t[e*r+i]},THREE.UTF8Loader.prototype.decodeAttrib2=function(e,t,a,r,i,o,n,s,l,d){for(var h=0;5>h;h++){var c=e.charCodeAt(i+o*h+d),u=c>>1^-(1&c);l[h]+=u,s[t*d+h]=l[h],n[t*d+h]=r[h]*(l[h]+a[h])}},THREE.UTF8Loader.prototype.accumulateNormal=function(e,t,a,r,i){var o=r[8*e],n=r[8*e+1],s=r[8*e+2],l=r[8*t],d=r[8*t+1],h=r[8*t+2],c=r[8*a],u=r[8*a+1],f=r[8*a+2];l-=o,d-=n,h-=s,c-=o,u-=n,f-=s,o=d*f-h*u,n=h*c-l*f,s=l*u-d*c,i[3*e]+=o,i[3*e+1]+=n,i[3*e+2]+=s,i[3*t]+=o,i[3*t+1]+=n,i[3*t+2]+=s,i[3*a]+=o,i[3*a+1]+=n,i[3*a+2]+=s},THREE.UTF8Loader.prototype.decompressMesh2=function(e,t,a,r,i,o){for(var n=96,s=a.decodeScales.length,l=a.decodeOffsets,d=a.decodeScales,h=t.attribRange[0],c=t.attribRange[1],u=t.codeRange[0],f=(t.codeRange[1],3*t.codeRange[2]),p=new Uint16Array(f),m=new Int32Array(3*c),v=new Uint16Array(s),g=new Uint16Array(s*c),S=new Float32Array(s*c),x=0,G=0,M=0;f>M;M+=3){var y=e.charCodeAt(u++),X=Math.min(M,n);if(X>y){var _,w,D,C=y%3,A=M-(y-C);switch(C){case 0:_=p[A+2],w=p[A+1],D=p[A+0];break;case 1:_=p[A+0],w=p[A+2],D=p[A+1];break;case 2:_=p[A+1],w=p[A+0],D=p[A+2]}p[G++]=_,p[G++]=w,y=e.charCodeAt(u++);var T=x-y;if(p[G++]=T,0===y){for(var P=0;5>P;P++){var L=e.charCodeAt(h+c*P+x),b=(L>>1^-(1&L))+g[s*_+P]+g[s*w+P]-g[s*D+P];v[P]=b,g[s*x+P]=b,S[s*x+P]=d[P]*(b+l[P])}x++}else this.copyAttrib(s,g,v,T);this.accumulateNormal(_,w,T,g,m)}else{var E=x-(y-X);p[G++]=E,y===X?this.decodeAttrib2(e,s,l,d,h,c,S,g,v,x++):this.copyAttrib(s,g,v,E),y=e.charCodeAt(u++);var F=x-y;p[G++]=F,0===y?this.decodeAttrib2(e,s,l,d,h,c,S,g,v,x++):this.copyAttrib(s,g,v,F),y=e.charCodeAt(u++);var R=x-y;if(p[G++]=R,0===y){for(var P=0;5>P;P++)v[P]=(g[s*E+P]+g[s*F+P])/2;this.decodeAttrib2(e,s,l,d,h,c,S,g,v,x++)}else this.copyAttrib(s,g,v,R);this.accumulateNormal(E,F,R,g,m)}}for(var M=0;c>M;M++){var U=m[3*M],I=m[3*M+1],N=m[3*M+2],B=511/Math.sqrt(U*U+I*I+N*N),O=e.charCodeAt(h+5*c+M),V=e.charCodeAt(h+6*c+M),k=e.charCodeAt(h+7*c+M);S[s*M+5]=B*U+(O>>1^-(1&O)),S[s*M+6]=B*I+(V>>1^-(1&V)),S[s*M+7]=B*N+(k>>1^-(1&k))}o(r,i,S,p,void 0,t)},THREE.UTF8Loader.prototype.downloadMesh=function(e,t,a,r,i){function o(e){for(;s<a.length;){var o=a[s],l=o.indexRange;if(l){var d=l[0]+3*l[1];if(e.responseText.length<d)break;n.decompressMesh(e.responseText,o,r,t,s,i)}else{var h=o.codeRange,d=h[0]+h[1];if(e.responseText.length<d)break;n.decompressMesh2(e.responseText,o,r,t,s,i)}++s}}var n=this,s=0;getHttpRequest(e,function(e,t){(200===e.status||0===e.status)&&o(e,t)},o)},THREE.UTF8Loader.prototype.downloadMeshes=function(e,t,a,r){for(var i in t){var o=t[i];this.downloadMesh(e+i,i,o,a,r)}},THREE.UTF8Loader.prototype.createMeshCallback=function(e,t,a){var r=0,i=0,o={},n={},s=t.urls;for(var l in s)o[l]=s[l].length,n[l]=0,i++;var d=[],h=[],c=new THREE.PhongMaterial,u=new THREE.UTF8Loader.MaterialCreator(e,t.materials,this),f=new THREE.UTF8Loader.GeometryCreator,p=function(e,t,s,l,p,m){var v=f.create(s,l),g=u.get(m.material);g||(g=c),d.push(v),h.push(g),n[e]++,n[e]===o[e]&&(r++,r===i&&a(d,h))};return p},THREE.UTF8Loader.prototype.downloadModel=function(e,t,a,r){var i=this.createMeshCallback(t,a,r);this.downloadMeshes(e,a.urls,a.decodeParams,i)},THREE.UTF8Loader.prototype.downloadModelJson=function(e,t,a){getJsonRequest(e,function(r){r.decodeParams||(r.decodeParams=t&&t.decodeParams?t.decodeParams:DEFAULT_DECODE_PARAMS),r.options=t;var i=e.substr(0,e.lastIndexOf("/")+1),o=i;t&&t.geometryBase&&(i=t.geometryBase,"/"!==i.charAt(i.length-1)&&(i+="/")),t&&t.materialBase&&(o=t.materialBase,"/"!==o.charAt(o.length-1)&&(o+="/")),this.downloadModel(i,o,r,a)}.bind(this))},THREE.CTMLoader=function(e){THREE.Loader.call(this,e),this.maxWorkerCount=4,this.workerPool=[],this.workerState=[],this.workerFreeCallbacks=[],window.URL=window.URL||window.webkitURL;for(var t=new Blob([THREE.CTMLoader.workerString],{type:"application/x-javascript"}),a=window.URL.createObjectURL(t),r=0;r<this.maxWorkerCount;r++){var i=new Worker(a);i.index=r,this.workerPool[r]=i,this.workerState[r]=0}},THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype),THREE.CTMLoader.prototype.loadParts=function(e,t,a){var r=this,i=void 0!==a&&a.basePath?a.basePath:this.extractUrlBase(e),o=void 0!==a&&void 0!==a.useCrunchWorker?a.useCrunchWorker:!0,n=void 0!==a?a.callbackGeometriesLoaded:null,s=void 0!==a?a.callbackProgress:null,l=function(e,t,a,r){for(var i={},n=0,s=t.length;s>n;n++){var l=t[n],d=l[0],h=l[1],c=l[2];i[d]=[h,c]}for(var u=[],n=0,s=a.length;s>n;n++){var f=a[n];if(f.properties.texturesToLoad)for(var p=0,m=f.properties.texturesToLoad.length;m>p;p++){var v=f.properties.texturesToLoad[p],g=v[0],S=v[1],l=i[S];if(l){var x=S.toLowerCase().endsWith(".crn");if(x){var h=l[0],c=l[1];o?u.push([g,h,c]):THREE.ImageUtils.loadCRNTextureFromPack(g,e,h,c)}else{var h=l[0];THREE.ImageUtils.loadCompressedTextureFromPack(g,e,h)}}}}if(o&&u.length>0){var G=function(){r()};THREE.ImageUtils.loadMultipleCRNTexturesFromPack(u,e,G)}else r()},d=function(e,t,a,r,i){var o=new XMLHttpRequest;o.onreadystatechange=function(){if(4===o.readyState&&(200===o.status||0===o.status)){var e=o.response;l(e,t,a,r)}},i&&(o.onprogress=function(t){var a={url:e,loaded:t.loaded,total:t.total};i(a)}),o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null)},h=function(e){function a(){u&&f&&t(c,h)}function o(t){p+=1,c.push(t),p===e.offsets.length&&(u=!0,n&&n(c,h),a())}function l(){m+=1,m===e.textures.length&&(f=!0,a())}for(var h=[],c=[],u=!1,f=!1,p=0,m=0,v=e.textures&&e.textureOffsets,g=0;g<e.materials.length;g++)h[g]=r.createMaterial(e.materials[g],i,v);var S=i+e.data,x={offsets:e.offsets,callbackProgress:s};if(r.load(S,o,x),v)for(var g=0,G=e.textures.length;G>g;g++){var M=i+e.textures[g],y=e.textureOffsets[g];d(M,y,h,l,s)}else f=!0},c=new XMLHttpRequest;c.onreadystatechange=function(){if(4===c.readyState&&(200===c.status||0===c.status)){var e=JSON.parse(c.responseText);h(e)}},c.open("GET",e,!0),c.overrideMimeType&&c.overrideMimeType("text/plain; charset=x-user-defined"),c.setRequestHeader("Content-Type","text/plain"),c.send(null)},THREE.CTMLoader.prototype.getWorker=function(e){for(var t,a=0,r=this.workerPool.length;r>a;a++){var i=this.workerState[a];if(0===i){t=this.workerPool[a],this.workerState[a]=1;break}}void 0===t?this.workerFreeCallbacks.push(e):e(t)},THREE.CTMLoader.prototype.releaseWorker=function(e){var t=this.workerFreeCallbacks.shift();t?t(e):this.workerState[e.index]=0},THREE.CTMLoader.prototype.load=function(e,t,a){var r=this,i=void 0!==a&&void 0!==a.offsets?a.offsets:[0],o=void 0!==a&&void 0!==a.callbackProgress?a.callbackProgress:null,n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState)if(200===n.status||0===n.status){var a=n.response,o=function(e){e.onmessage=function(a){for(var i=a.data.f,o=0;o<i.length;o++){var n=i[o];r.createModelBuffers(n,t)}Date.now();r.releaseWorker(e)};Date.now();e.postMessage=e.webkitPostMessage||e.postMessage,e.postMessage({data:a,offsets:i},[a])};r.getWorker(o)}else console.error("THREE.CTMLoader: Couldn't load ["+e+"] ["+n.status+"]")},o&&(n.onprogress=function(t){var a={url:e,loaded:t.loaded,total:t.total};o(a)}),n.open("GET",e,!0),n.responseType="arraybuffer",n.send(null)},THREE.CTMLoader.prototype.createModelBuffers=function(e,t){var a=function(){var t=this,a=!0;THREE.Geometry.call(this);var r,i,o=e.body.indices,n=e.body.vertices,s=e.body.normals;if(void 0!==e.body.uvMaps&&e.body.uvMaps.length>0&&(r=e.body.uvMaps[0].uv),void 0!==e.body.attrMaps&&e.body.attrMaps.length>0&&"Color"===e.body.attrMaps[0].name&&(i=e.body.attrMaps[0].attr),a){var l,d,h,c=new Uint32Array(o.length),u=new Float32Array(n.length);s&&(l=new Float32Array(s.length)),r&&(d=new Float32Array(r.length)),i&&(h=new Float32Array(i.length));for(var f,p,m,v={},g=0,S=function(e){if(void 0===v[e]){v[e]=g;var t=3*e,a=3*e+1,o=3*e+2,c=3*g,f=3*g+1,p=3*g+2;u[c]=n[t],u[f]=n[a],u[p]=n[o],s&&(l[c]=s[t],l[f]=s[a],l[p]=s[o]),r&&(d[2*g]=r[2*e],d[2*g+1]=r[2*e+1]),i&&(h[4*g]=i[4*e],h[4*g+1]=i[4*e+1],h[4*g+2]=i[4*e+2],h[4*g+3]=i[4*e+3]),g+=1}},x=0;x<o.length;x+=3)f=o[x],p=o[x+1],m=o[x+2],S(f),S(p),S(m),c[x]=v[f],c[x+1]=v[p],c[x+2]=v[m];o=c,n=u,s&&(s=l),r&&(r=d),i&&(i=h)}t.offsets=[];for(var G=o,M=0,y=n.length,X=0,_=y,x=0;x<G.length;){for(var w=0;3>w;++w){var D=G[x++];y>D&&(y=D),D>X&&(X=D)}if(X-y>65534){x-=3;for(var C=M;x>C;++C)G[C]-=_;t.offsets.push({start:M,count:x-M,index:_}),M=x,y=n.length,X=0}_=y}for(var C=M;x>C;++C)G[C]-=_;t.offsets.push({start:M,count:x-M,index:_});var A=new Uint16Array(o);t.addAttributeArray("index",A,1),t.addAttributeArray("position",n,3),void 0!==s&&t.addAttributeArray("normal",s,3),void 0!==r&&t.addAttributeArray("uv",r,2),void 0!==i&&t.addAttributeArray("color",i,4),t.numVertices=n.length/3,t.numPrimitives=A.length/3};a.prototype=Object.create(THREE.Geometry.prototype);var r=new a;void 0===r.attributes.normal&&r.computeVertexNormals(),t(r)},THREE.CTMLoader.workerString=["var LZMA = LZMA || {};","","LZMA.OutWindow = function(){","  this._windowSize = 0;","};","","LZMA.OutWindow.prototype.create = function(windowSize){","  if ( (!this._buffer) || (this._windowSize !== windowSize) ){","    this._buffer = [];","  }","  this._windowSize = windowSize;","  this._pos = 0;","  this._streamPos = 0;","};","","LZMA.OutWindow.prototype.flush = function(){","  var size = this._pos - this._streamPos;","  if (size !== 0){","    while(size --){","      this._stream.writeByte(this._buffer[this._streamPos ++]);","    }","    if (this._pos >= this._windowSize){","      this._pos = 0;","    }","    this._streamPos = this._pos;","  }","};","","LZMA.OutWindow.prototype.releaseStream = function(){","  this.flush();","  this._stream = null;","};","","LZMA.OutWindow.prototype.setStream = function(stream){","  this.releaseStream();","  this._stream = stream;","};","","LZMA.OutWindow.prototype.init = function(solid){","  if (!solid){","    this._streamPos = 0;","    this._pos = 0;","  }","};","","LZMA.OutWindow.prototype.copyBlock = function(distance, len){","  var pos = this._pos - distance - 1;","  if (pos < 0){","    pos += this._windowSize;","  }","  while(len --){","    if (pos >= this._windowSize){","      pos = 0;","    }","    this._buffer[this._pos ++] = this._buffer[pos ++];","    if (this._pos >= this._windowSize){","      this.flush();","    }","  }","};","","LZMA.OutWindow.prototype.putByte = function(b){","  this._buffer[this._pos ++] = b;","  if (this._pos >= this._windowSize){","    this.flush();","  }","};","","LZMA.OutWindow.prototype.getByte = function(distance){","  var pos = this._pos - distance - 1;","  if (pos < 0){","    pos += this._windowSize;","  }","  return this._buffer[pos];","};","","LZMA.RangeDecoder = function(){","};","","LZMA.RangeDecoder.prototype.setStream = function(stream){","  this._stream = stream;","};","","LZMA.RangeDecoder.prototype.releaseStream = function(){","  this._stream = null;","};","","LZMA.RangeDecoder.prototype.init = function(){","  var i = 5;","","  this._code = 0;","  this._range = -1;","","  while(i --){","    this._code = (this._code << 8) | this._stream.readByte();","  }","};","","LZMA.RangeDecoder.prototype.decodeDirectBits = function(numTotalBits){","  var result = 0, i = numTotalBits, t;","","  while(i --){","    this._range >>>= 1;","    t = (this._code - this._range) >>> 31;","    this._code -= this._range & (t - 1);","    result = (result << 1) | (1 - t);","","    if ( (this._range & 0xff000000) === 0){","      this._code = (this._code << 8) | this._stream.readByte();","      this._range <<= 8;","    }","  }","","  return result;","};","","LZMA.RangeDecoder.prototype.decodeBit = function(probs, index){","  var prob = probs[index],","      newBound = (this._range >>> 11) * prob;","","  if ( (this._code ^ 0x80000000) < (newBound ^ 0x80000000) ){","    this._range = newBound;","    probs[index] += (2048 - prob) >>> 5;","    if ( (this._range & 0xff000000) === 0){","      this._code = (this._code << 8) | this._stream.readByte();","      this._range <<= 8;","    }","    return 0;","  }","","  this._range -= newBound;","  this._code -= newBound;","  probs[index] -= prob >>> 5;","  if ( (this._range & 0xff000000) === 0){","    this._code = (this._code << 8) | this._stream.readByte();","    this._range <<= 8;","  }","  return 1;","};","","LZMA.initBitModels = function(probs, len){","  while(len --){","    probs[len] = 1024;","  }","};","","LZMA.BitTreeDecoder = function(numBitLevels){","  this._models = [];","  this._numBitLevels = numBitLevels;","};","","LZMA.BitTreeDecoder.prototype.init = function(){","  LZMA.initBitModels(this._models, 1 << this._numBitLevels);","};","","LZMA.BitTreeDecoder.prototype.decode = function(rangeDecoder){","  var m = 1, i = this._numBitLevels;","","  while(i --){","    m = (m << 1) | rangeDecoder.decodeBit(this._models, m);","  }","  return m - (1 << this._numBitLevels);","};","","LZMA.BitTreeDecoder.prototype.reverseDecode = function(rangeDecoder){","  var m = 1, symbol = 0, i = 0, bit;","","  for (; i < this._numBitLevels; ++ i){","    bit = rangeDecoder.decodeBit(this._models, m);","    m = (m << 1) | bit;","    symbol |= bit << i;","  }","  return symbol;","};","","LZMA.reverseDecode2 = function(models, startIndex, rangeDecoder, numBitLevels){","  var m = 1, symbol = 0, i = 0, bit;","","  for (; i < numBitLevels; ++ i){","    bit = rangeDecoder.decodeBit(models, startIndex + m);","    m = (m << 1) | bit;","    symbol |= bit << i;","  }","  return symbol;","};","","LZMA.LenDecoder = function(){","  this._choice = [];","  this._lowCoder = [];","  this._midCoder = [];","  this._highCoder = new LZMA.BitTreeDecoder(8);","  this._numPosStates = 0;","};","","LZMA.LenDecoder.prototype.create = function(numPosStates){","  for (; this._numPosStates < numPosStates; ++ this._numPosStates){","    this._lowCoder[this._numPosStates] = new LZMA.BitTreeDecoder(3);","    this._midCoder[this._numPosStates] = new LZMA.BitTreeDecoder(3);","  }","};","","LZMA.LenDecoder.prototype.init = function(){","  var i = this._numPosStates;","  LZMA.initBitModels(this._choice, 2);","  while(i --){","    this._lowCoder[i].init();","    this._midCoder[i].init();","  }","  this._highCoder.init();","};","","LZMA.LenDecoder.prototype.decode = function(rangeDecoder, posState){","  if (rangeDecoder.decodeBit(this._choice, 0) === 0){","    return this._lowCoder[posState].decode(rangeDecoder);","  }","  if (rangeDecoder.decodeBit(this._choice, 1) === 0){","    return 8 + this._midCoder[posState].decode(rangeDecoder);","  }","  return 16 + this._highCoder.decode(rangeDecoder);","};","","LZMA.Decoder2 = function(){","  this._decoders = [];","};","","LZMA.Decoder2.prototype.init = function(){","  LZMA.initBitModels(this._decoders, 0x300);","};","","LZMA.Decoder2.prototype.decodeNormal = function(rangeDecoder){","  var symbol = 1;","","  do{","    symbol = (symbol << 1) | rangeDecoder.decodeBit(this._decoders, symbol);","  }while(symbol < 0x100);","","  return symbol & 0xff;","};","","LZMA.Decoder2.prototype.decodeWithMatchByte = function(rangeDecoder, matchByte){","  var symbol = 1, matchBit, bit;","","  do{","    matchBit = (matchByte >> 7) & 1;","    matchByte <<= 1;","    bit = rangeDecoder.decodeBit(this._decoders, ( (1 + matchBit) << 8) + symbol);","    symbol = (symbol << 1) | bit;","    if (matchBit !== bit){","      while(symbol < 0x100){","        symbol = (symbol << 1) | rangeDecoder.decodeBit(this._decoders, symbol);","      }","      break;","    }","  }while(symbol < 0x100);","","  return symbol & 0xff;","};","","LZMA.LiteralDecoder = function(){","};","","LZMA.LiteralDecoder.prototype.create = function(numPosBits, numPrevBits){","  var i;","","  if (this._coders","    && (this._numPrevBits === numPrevBits)","    && (this._numPosBits === numPosBits) ){","    return;","  }","  this._numPosBits = numPosBits;","  this._posMask = (1 << numPosBits) - 1;","  this._numPrevBits = numPrevBits;","","  this._coders = [];","","  i = 1 << (this._numPrevBits + this._numPosBits);","  while(i --){","    this._coders[i] = new LZMA.Decoder2();","  }","};","","LZMA.LiteralDecoder.prototype.init = function(){","  var i = 1 << (this._numPrevBits + this._numPosBits);","  while(i --){","    this._coders[i].init();","  }","};","","LZMA.LiteralDecoder.prototype.getDecoder = function(pos, prevByte){","  return this._coders[( (pos & this._posMask) << this._numPrevBits)","    + ( (prevByte & 0xff) >>> (8 - this._numPrevBits) )];","};","","LZMA.Decoder = function(){","  this._outWindow = new LZMA.OutWindow();","  this._rangeDecoder = new LZMA.RangeDecoder();","  this._isMatchDecoders = [];","  this._isRepDecoders = [];","  this._isRepG0Decoders = [];","  this._isRepG1Decoders = [];","  this._isRepG2Decoders = [];","  this._isRep0LongDecoders = [];","  this._posSlotDecoder = [];","  this._posDecoders = [];","  this._posAlignDecoder = new LZMA.BitTreeDecoder(4);","  this._lenDecoder = new LZMA.LenDecoder();","  this._repLenDecoder = new LZMA.LenDecoder();","  this._literalDecoder = new LZMA.LiteralDecoder();","  this._dictionarySize = -1;","  this._dictionarySizeCheck = -1;","","  this._posSlotDecoder[0] = new LZMA.BitTreeDecoder(6);","  this._posSlotDecoder[1] = new LZMA.BitTreeDecoder(6);","  this._posSlotDecoder[2] = new LZMA.BitTreeDecoder(6);","  this._posSlotDecoder[3] = new LZMA.BitTreeDecoder(6);","};","","LZMA.Decoder.prototype.setDictionarySize = function(dictionarySize){","  if (dictionarySize < 0){","    return false;","  }","  if (this._dictionarySize !== dictionarySize){","    this._dictionarySize = dictionarySize;","    this._dictionarySizeCheck = Math.max(this._dictionarySize, 1);","    this._outWindow.create( Math.max(this._dictionarySizeCheck, 4096) );","  }","  return true;","};","","LZMA.Decoder.prototype.setLcLpPb = function(lc, lp, pb){","  var numPosStates = 1 << pb;","","  if (lc > 8 || lp > 4 || pb > 4){","    return false;","  }","","  this._literalDecoder.create(lp, lc);","","  this._lenDecoder.create(numPosStates);","  this._repLenDecoder.create(numPosStates);","  this._posStateMask = numPosStates - 1;","","  return true;","};","","LZMA.Decoder.prototype.init = function(){","  var i = 4;","","  this._outWindow.init(false);","","  LZMA.initBitModels(this._isMatchDecoders, 192);","  LZMA.initBitModels(this._isRep0LongDecoders, 192);","  LZMA.initBitModels(this._isRepDecoders, 12);","  LZMA.initBitModels(this._isRepG0Decoders, 12);","  LZMA.initBitModels(this._isRepG1Decoders, 12);","  LZMA.initBitModels(this._isRepG2Decoders, 12);","  LZMA.initBitModels(this._posDecoders, 114);","","  this._literalDecoder.init();","","  while(i --){","    this._posSlotDecoder[i].init();","  }","","  this._lenDecoder.init();","  this._repLenDecoder.init();","  this._posAlignDecoder.init();","  this._rangeDecoder.init();","};","","LZMA.Decoder.prototype.decode = function(inStream, outStream, outSize){","  var state = 0, rep0 = 0, rep1 = 0, rep2 = 0, rep3 = 0, nowPos64 = 0, prevByte = 0,","      posState, decoder2, len, distance, posSlot, numDirectBits;","","  this._rangeDecoder.setStream(inStream);","  this._outWindow.setStream(outStream);","","  this.init();","","  while(outSize < 0 || nowPos64 < outSize){","    posState = nowPos64 & this._posStateMask;","","    if (this._rangeDecoder.decodeBit(this._isMatchDecoders, (state << 4) + posState) === 0){","      decoder2 = this._literalDecoder.getDecoder(nowPos64 ++, prevByte);","","      if (state >= 7){","        prevByte = decoder2.decodeWithMatchByte(this._rangeDecoder, this._outWindow.getByte(rep0) );","      }else{","        prevByte = decoder2.decodeNormal(this._rangeDecoder);","      }","      this._outWindow.putByte(prevByte);","","      state = state < 4? 0: state - (state < 10? 3: 6);","","    }else{","","      if (this._rangeDecoder.decodeBit(this._isRepDecoders, state) === 1){","        len = 0;","        if (this._rangeDecoder.decodeBit(this._isRepG0Decoders, state) === 0){","          if (this._rangeDecoder.decodeBit(this._isRep0LongDecoders, (state << 4) + posState) === 0){","            state = state < 7? 9: 11;","            len = 1;","          }","        }else{","          if (this._rangeDecoder.decodeBit(this._isRepG1Decoders, state) === 0){","            distance = rep1;","          }else{","            if (this._rangeDecoder.decodeBit(this._isRepG2Decoders, state) === 0){","              distance = rep2;","            }else{","              distance = rep3;","              rep3 = rep2;","            }","            rep2 = rep1;","          }","          rep1 = rep0;","          rep0 = distance;","        }","        if (len === 0){","          len = 2 + this._repLenDecoder.decode(this._rangeDecoder, posState);","          state = state < 7? 8: 11;","        }","      }else{","        rep3 = rep2;","        rep2 = rep1;","        rep1 = rep0;","","        len = 2 + this._lenDecoder.decode(this._rangeDecoder, posState);","        state = state < 7? 7: 10;","","        posSlot = this._posSlotDecoder[len <= 5? len - 2: 3].decode(this._rangeDecoder);","        if (posSlot >= 4){","","          numDirectBits = (posSlot >> 1) - 1;","          rep0 = (2 | (posSlot & 1) ) << numDirectBits;","","          if (posSlot < 14){","            rep0 += LZMA.reverseDecode2(this._posDecoders,","                rep0 - posSlot - 1, this._rangeDecoder, numDirectBits);","          }else{","            rep0 += this._rangeDecoder.decodeDirectBits(numDirectBits - 4) << 4;","            rep0 += this._posAlignDecoder.reverseDecode(this._rangeDecoder);","            if (rep0 < 0){","              if (rep0 === -1){","                break;","              }","              return false;","            }","          }","        }else{","          rep0 = posSlot;","        }","      }","","      if (rep0 >= nowPos64 || rep0 >= this._dictionarySizeCheck){","        return false;","      }","","      this._outWindow.copyBlock(rep0, len);","      nowPos64 += len;","      prevByte = this._outWindow.getByte(0);","    }","  }","","  this._outWindow.flush();","  this._outWindow.releaseStream();","  this._rangeDecoder.releaseStream();","","  return true;","};","","LZMA.Decoder.prototype.setDecoderProperties = function(properties){","  var value, lc, lp, pb, dictionarySize;","","  if (properties.size < 5){","    return false;","  }","","  value = properties.readByte();","  lc = value % 9;","  value = ~~(value / 9);","  lp = value % 5;","  pb = ~~(value / 5);","","  if ( !this.setLcLpPb(lc, lp, pb) ){","    return false;","  }","","  dictionarySize = properties.readByte();","  dictionarySize |= properties.readByte() << 8;","  dictionarySize |= properties.readByte() << 16;","  dictionarySize += properties.readByte() * 16777216;","","  return this.setDictionarySize(dictionarySize);","};","","LZMA.decompress = function(properties, inStream, outStream, outSize){","  var decoder = new LZMA.Decoder();","","  if ( !decoder.setDecoderProperties(properties) ){",'    throw "Incorrect stream properties";',"  }","","  if ( !decoder.decode(inStream, outStream, outSize) ){",'    throw "Error in data stream";',"  }","","  return true;","};","","LZMA.decompressFile = function(inStream, outStream){","  var decoder = new LZMA.Decoder(), outSize;","","  if ( !decoder.setDecoderProperties(inStream) ){",'    throw "Incorrect stream properties";',"  }","","  outSize = inStream.readByte();","  outSize |= inStream.readByte() << 8;","  outSize |= inStream.readByte() << 16;","  outSize += inStream.readByte() * 16777216;","","  inStream.readByte();","  inStream.readByte();","  inStream.readByte();","  inStream.readByte();","","  if ( !decoder.decode(inStream, outStream, outSize) ){",'    throw "Error in data stream";',"  }","","  return true;","};","","var CTM = CTM || {};","","CTM.CompressionMethod = {","  RAW: 0x00574152,","  MG1: 0x0031474d,","  MG2: 0x0032474d","};","","CTM.Flags = {","  NORMALS: 0x00000001","};","","CTM.File = function(stream){","  this.load(stream);","};","","CTM.File.prototype.load = function(stream){","  this.header = new CTM.FileHeader(stream);","","  this.body = new CTM.FileBody(this.header);","","  this.getReader().read(stream, this.body);","};","","CTM.File.prototype.getReader = function(){","  var reader;","","  switch(this.header.compressionMethod){","    case CTM.CompressionMethod.RAW:","      reader = new CTM.ReaderRAW();","      break;","    case CTM.CompressionMethod.MG1:","      reader = new CTM.ReaderMG1();","      break;","    case CTM.CompressionMethod.MG2:","      reader = new CTM.ReaderMG2();","      break;","  }","","  return reader;","};","","CTM.FileHeader = function(stream){",'  stream.readInt32(); //magic "OCTM"',"  this.fileFormat = stream.readInt32();","  this.compressionMethod = stream.readInt32();","  this.vertexCount = stream.readInt32();","  this.triangleCount = stream.readInt32();","  this.uvMapCount = stream.readInt32();","  this.attrMapCount = stream.readInt32();","  this.flags = stream.readInt32();","  this.comment = stream.readString();","};","","CTM.FileHeader.prototype.hasNormals = function(){","  return this.flags & CTM.Flags.NORMALS;","};","","CTM.FileBody = function(header){","  var i = header.triangleCount * 3,","      v = header.vertexCount * 3,","      n = header.hasNormals()? header.vertexCount * 3: 0,","      u = header.vertexCount * 2,","      a = header.vertexCount * 4,","      j = 0;","","  var data = new ArrayBuffer(","    (i + v + n + (u * header.uvMapCount) + (a * header.attrMapCount) ) * 4);","","  this.indices = new Uint32Array(data, 0, i);","","  this.vertices = new Float32Array(data, i * 4, v);","","  if ( header.hasNormals() ){","    this.normals = new Float32Array(data, (i + v) * 4, n);","  }","","  if (header.uvMapCount){","    this.uvMaps = [];","    for (j = 0; j < header.uvMapCount; ++ j){","      this.uvMaps[j] = {uv: new Float32Array(data,","        (i + v + n + (j * u) ) * 4, u) };","    }","  }","","  if (header.attrMapCount){","    this.attrMaps = [];","    for (j = 0; j < header.attrMapCount; ++ j){","      this.attrMaps[j] = {attr: new Float32Array(data,","        (i + v + n + (u * header.uvMapCount) + (j * a) ) * 4, a) };","    }","  }","};","","CTM.FileMG2Header = function(stream){",'  stream.readInt32(); //magic "MG2H"',"  this.vertexPrecision = stream.readFloat32();","  this.normalPrecision = stream.readFloat32();","  this.lowerBoundx = stream.readFloat32();","  this.lowerBoundy = stream.readFloat32();","  this.lowerBoundz = stream.readFloat32();","  this.higherBoundx = stream.readFloat32();","  this.higherBoundy = stream.readFloat32();","  this.higherBoundz = stream.readFloat32();","  this.divx = stream.readInt32();","  this.divy = stream.readInt32();","  this.divz = stream.readInt32();","","  this.sizex = (this.higherBoundx - this.lowerBoundx) / this.divx;","  this.sizey = (this.higherBoundy - this.lowerBoundy) / this.divy;","  this.sizez = (this.higherBoundz - this.lowerBoundz) / this.divz;","};","","CTM.ReaderRAW = function(){","};","","CTM.ReaderRAW.prototype.read = function(stream, body){","  this.readIndices(stream, body.indices);","  this.readVertices(stream, body.vertices);","","  if (body.normals){","    this.readNormals(stream, body.normals);","  }","  if (body.uvMaps){","    this.readUVMaps(stream, body.uvMaps);","  }","  if (body.attrMaps){","    this.readAttrMaps(stream, body.attrMaps);","  }","};","","CTM.ReaderRAW.prototype.readIndices = function(stream, indices){",'  stream.readInt32(); //magic "INDX"',"  stream.readArrayInt32(indices);","};","","CTM.ReaderRAW.prototype.readVertices = function(stream, vertices){",'  stream.readInt32(); //magic "VERT"',"  stream.readArrayFloat32(vertices);","};","","CTM.ReaderRAW.prototype.readNormals = function(stream, normals){",'  stream.readInt32(); //magic "NORM"',"  stream.readArrayFloat32(normals);","};","","CTM.ReaderRAW.prototype.readUVMaps = function(stream, uvMaps){","  var i = 0;","  for (; i < uvMaps.length; ++ i){",'    stream.readInt32(); //magic "TEXC"',"","    uvMaps[i].name = stream.readString();","    uvMaps[i].filename = stream.readString();","    stream.readArrayFloat32(uvMaps[i].uv);","  }","};","","CTM.ReaderRAW.prototype.readAttrMaps = function(stream, attrMaps){","  var i = 0;","  for (; i < attrMaps.length; ++ i){",'    stream.readInt32(); //magic "ATTR"',"","    attrMaps[i].name = stream.readString();","    stream.readArrayFloat32(attrMaps[i].attr);","  }","};","","CTM.ReaderMG1 = function(){","};","","CTM.ReaderMG1.prototype.read = function(stream, body){","  this.readIndices(stream, body.indices);","  this.readVertices(stream, body.vertices);","","  if (body.normals){","    this.readNormals(stream, body.normals);","  }","  if (body.uvMaps){","    this.readUVMaps(stream, body.uvMaps);","  }","  if (body.attrMaps){","    this.readAttrMaps(stream, body.attrMaps);","  }","};","","CTM.ReaderMG1.prototype.readIndices = function(stream, indices){",'  stream.readInt32(); //magic "INDX"',"  stream.readInt32(); //packed size","","  var interleaved = new CTM.InterleavedStream(indices, 3);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","  CTM.restoreIndices(indices, indices.length);","};","","CTM.ReaderMG1.prototype.readVertices = function(stream, vertices){",'  stream.readInt32(); //magic "VERT"',"  stream.readInt32(); //packed size","","  var interleaved = new CTM.InterleavedStream(vertices, 1);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","};","","CTM.ReaderMG1.prototype.readNormals = function(stream, normals){",'  stream.readInt32(); //magic "NORM"',"  stream.readInt32(); //packed size","","  var interleaved = new CTM.InterleavedStream(normals, 3);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","};","","CTM.ReaderMG1.prototype.readUVMaps = function(stream, uvMaps){","  var i = 0;","  for (; i < uvMaps.length; ++ i){",'    stream.readInt32(); //magic "TEXC"',"","    uvMaps[i].name = stream.readString();","    uvMaps[i].filename = stream.readString();","","    stream.readInt32(); //packed size","","    var interleaved = new CTM.InterleavedStream(uvMaps[i].uv, 2);","    LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","  }","};","","CTM.ReaderMG1.prototype.readAttrMaps = function(stream, attrMaps){","  var i = 0;","  for (; i < attrMaps.length; ++ i){",'    stream.readInt32(); //magic "ATTR"',"","    attrMaps[i].name = stream.readString();","","    stream.readInt32(); //packed size","","    var interleaved = new CTM.InterleavedStream(attrMaps[i].attr, 4);","    LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","  }","};","","CTM.ReaderMG2 = function(){","};","","CTM.ReaderMG2.prototype.read = function(stream, body){","  this.MG2Header = new CTM.FileMG2Header(stream);","","  this.readVertices(stream, body.vertices);","  this.readIndices(stream, body.indices);","","  if (body.normals){","    this.readNormals(stream, body);","  }","  if (body.uvMaps){","    this.readUVMaps(stream, body.uvMaps);","  }","  if (body.attrMaps){","    this.readAttrMaps(stream, body.attrMaps);","  }","};","","CTM.ReaderMG2.prototype.readVertices = function(stream, vertices){",'  stream.readInt32(); //magic "VERT"',"  stream.readInt32(); //packed size","","  var interleaved = new CTM.InterleavedStream(vertices, 3);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","  var gridIndices = this.readGridIndices(stream, vertices);","","  CTM.restoreVertices(vertices, this.MG2Header, gridIndices, this.MG2Header.vertexPrecision);","};","","CTM.ReaderMG2.prototype.readGridIndices = function(stream, vertices){",'  stream.readInt32(); //magic "GIDX"',"  stream.readInt32(); //packed size","","  var gridIndices = new Uint32Array(vertices.length / 3);","","  var interleaved = new CTM.InterleavedStream(gridIndices, 1);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","  CTM.restoreGridIndices(gridIndices, gridIndices.length);","","  return gridIndices;","};","","CTM.ReaderMG2.prototype.readIndices = function(stream, indices){",'  stream.readInt32(); //magic "INDX"',"  stream.readInt32(); //packed size","","  var interleaved = new CTM.InterleavedStream(indices, 3);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","  CTM.restoreIndices(indices, indices.length);","};","","CTM.ReaderMG2.prototype.readNormals = function(stream, body){",'  stream.readInt32(); //magic "NORM"',"  stream.readInt32(); //packed size","","  var interleaved = new CTM.InterleavedStream(body.normals, 3);","  LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","  var smooth = CTM.calcSmoothNormals(body.indices, body.vertices);","","  CTM.restoreNormals(body.normals, smooth, this.MG2Header.normalPrecision);","};","","CTM.ReaderMG2.prototype.readUVMaps = function(stream, uvMaps){","  var i = 0;","  for (; i < uvMaps.length; ++ i){",'    stream.readInt32(); //magic "TEXC"',"","    uvMaps[i].name = stream.readString();","    uvMaps[i].filename = stream.readString();","","    var precision = stream.readFloat32();","","    stream.readInt32(); //packed size","","    var interleaved = new CTM.InterleavedStream(uvMaps[i].uv, 2);","    LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","    CTM.restoreMap(uvMaps[i].uv, 2, precision);","  }","};","","CTM.ReaderMG2.prototype.readAttrMaps = function(stream, attrMaps){","  var i = 0;","  for (; i < attrMaps.length; ++ i){",'    stream.readInt32(); //magic "ATTR"',"","    attrMaps[i].name = stream.readString();","","    var precision = stream.readFloat32();","","    stream.readInt32(); //packed size","","    var interleaved = new CTM.InterleavedStream(attrMaps[i].attr, 4);","    LZMA.decompress(stream, stream, interleaved, interleaved.data.length);","","    CTM.restoreMap(attrMaps[i].attr, 4, precision);","  }","};","","CTM.restoreIndices = function(indices, len){","  var i = 3;","  if (len > 0){","    indices[2] += indices[0];","    indices[1] += indices[0];","  }","  for (; i < len; i += 3){","    indices[i] += indices[i - 3];","","    if (indices[i] === indices[i - 3]){","      indices[i + 1] += indices[i - 2];","    }else{","      indices[i + 1] += indices[i];","    }","","    indices[i + 2] += indices[i];","  }","};","","CTM.restoreGridIndices = function(gridIndices, len){","  var i = 1;","  for (; i < len; ++ i){","    gridIndices[i] += gridIndices[i - 1];","  }","};","","CTM.restoreVertices = function(vertices, grid, gridIndices, precision){","  var gridIdx, delta, x, y, z,","      intVertices = new Uint32Array(vertices.buffer, vertices.byteOffset, vertices.length),","      ydiv = grid.divx, zdiv = ydiv * grid.divy,","      prevGridIdx = 0x7fffffff, prevDelta = 0,","      i = 0, j = 0, len = gridIndices.length;","","  for (; i < len; j += 3){","    x = gridIdx = gridIndices[i ++];","","    z = ~~(x / zdiv);","    x -= ~~(z * zdiv);","    y = ~~(x / ydiv);","    x -= ~~(y * ydiv);","","    delta = intVertices[j];","    if (gridIdx === prevGridIdx){","      delta += prevDelta;","    }","","    vertices[j]     = grid.lowerBoundx +","      x * grid.sizex + precision * delta;","    vertices[j + 1] = grid.lowerBoundy +","      y * grid.sizey + precision * intVertices[j + 1];","    vertices[j + 2] = grid.lowerBoundz +","      z * grid.sizez + precision * intVertices[j + 2];","","    prevGridIdx = gridIdx;","    prevDelta = delta;","  }","};","","CTM.restoreNormals = function(normals, smooth, precision){","  var ro, phi, theta, sinPhi,","      nx, ny, nz, by, bz, len,","      intNormals = new Uint32Array(normals.buffer, normals.byteOffset, normals.length),","      i = 0, k = normals.length,","      PI_DIV_2 = 3.141592653589793238462643 * 0.5;","","  for (; i < k; i += 3){","    ro = intNormals[i] * precision;","    phi = intNormals[i + 1];","","    if (phi === 0){","      normals[i]     = smooth[i]     * ro;","      normals[i + 1] = smooth[i + 1] * ro;","      normals[i + 2] = smooth[i + 2] * ro;","    }else{","","      if (phi <= 4){","        theta = (intNormals[i + 2] - 2) * PI_DIV_2;","      }else{","        theta = ( (intNormals[i + 2] * 4 / phi) - 2) * PI_DIV_2;","      }","","      phi *= precision * PI_DIV_2;","      sinPhi = ro * Math.sin(phi);","","      nx = sinPhi * Math.cos(theta);","      ny = sinPhi * Math.sin(theta);","      nz = ro * Math.cos(phi);","","      bz = smooth[i + 1];","      by = smooth[i] - smooth[i + 2];","","      len = Math.sqrt(2 * bz * bz + by * by);","      if (len > 1e-20){","        by /= len;","        bz /= len;","      }","","      normals[i]     = smooth[i]     * nz +","        (smooth[i + 1] * bz - smooth[i + 2] * by) * ny - bz * nx;","      normals[i + 1] = smooth[i + 1] * nz -","        (smooth[i + 2]      + smooth[i]   ) * bz  * ny + by * nx;","      normals[i + 2] = smooth[i + 2] * nz +","        (smooth[i]     * by + smooth[i + 1] * bz) * ny + bz * nx;","    }","  }","};","","CTM.restoreMap = function(map, count, precision){","  var delta, value,","      intMap = new Uint32Array(map.buffer, map.byteOffset, map.length),","      i = 0, j, len = map.length;","","  for (; i < count; ++ i){","    delta = 0;","","    for (j = i; j < len; j += count){","      value = intMap[j];","","      delta += value & 1? -( (value + 1) >> 1): value >> 1;","","      map[j] = delta * precision;","    }","  }","};","","CTM.calcSmoothNormals = function(indices, vertices){","  var smooth = new Float32Array(vertices.length),","      indx, indy, indz, nx, ny, nz,","      v1x, v1y, v1z, v2x, v2y, v2z, len,","      i, k;","","  for (i = 0, k = indices.length; i < k;){","    indx = indices[i ++] * 3;","    indy = indices[i ++] * 3;","    indz = indices[i ++] * 3;","","    v1x = vertices[indy]     - vertices[indx];","    v2x = vertices[indz]     - vertices[indx];","    v1y = vertices[indy + 1] - vertices[indx + 1];","    v2y = vertices[indz + 1] - vertices[indx + 1];","    v1z = vertices[indy + 2] - vertices[indx + 2];","    v2z = vertices[indz + 2] - vertices[indx + 2];","","    nx = v1y * v2z - v1z * v2y;","    ny = v1z * v2x - v1x * v2z;","    nz = v1x * v2y - v1y * v2x;","","    len = Math.sqrt(nx * nx + ny * ny + nz * nz);","    if (len > 1e-10){","      nx /= len;","      ny /= len;","      nz /= len;","    }","","    smooth[indx]     += nx;","    smooth[indx + 1] += ny;","    smooth[indx + 2] += nz;","    smooth[indy]     += nx;","    smooth[indy + 1] += ny;","    smooth[indy + 2] += nz;","    smooth[indz]     += nx;","    smooth[indz + 1] += ny;","    smooth[indz + 2] += nz;","  }","","  for (i = 0, k = smooth.length; i < k; i += 3){","    len = Math.sqrt(smooth[i] * smooth[i] +","      smooth[i + 1] * smooth[i + 1] +","      smooth[i + 2] * smooth[i + 2]);","","    if(len > 1e-10){","      smooth[i]     /= len;","      smooth[i + 1] /= len;","      smooth[i + 2] /= len;","    }","  }","","  return smooth;","};","","CTM.isLittleEndian = (function(){","  var buffer = new ArrayBuffer(2),","      bytes = new Uint8Array(buffer),","      ints = new Uint16Array(buffer);","","  bytes[0] = 1;","","  return ints[0] === 1;","}());","","CTM.InterleavedStream = function(data, count){","  this.data = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);","  this.offset = CTM.isLittleEndian? 3: 0;","  this.count = count * 4;","  this.len = this.data.length;","};","","CTM.InterleavedStream.prototype.writeByte = function(value){","  this.data[this.offset] = value;","","  this.offset += this.count;","  if (this.offset >= this.len){","","    this.offset -= this.len - 4;","    if (this.offset >= this.count){","","      this.offset -= this.count + (CTM.isLittleEndian? 1: -1);","    }","  }","};","","CTM.Stream = function(data){","  this.data = data;","  this.chardata = new DataView(data);","  this.offset = 0;","};","","CTM.Stream.prototype.TWO_POW_MINUS23 = Math.pow(2, -23);","","CTM.Stream.prototype.TWO_POW_MINUS126 = Math.pow(2, -126);","","CTM.Stream.prototype.readByte = function(){","  return this.chardata.getUint8(this.offset++);","};","","CTM.Stream.prototype.readInt32 = function(){","var v = this.chardata.getInt32(this.offset, CTM.isLittleEndian);","this.offset += 4;","return v;","};","","CTM.Stream.prototype.readFloat32 = function(){","var v = this.chardata.getFloat32(this.offset, CTM.isLittleEndian);","this.offset += 4;","return v;","};","","CTM.Stream.prototype.readString = function(){","  var len = this.readInt32();","","  this.offset += len;","","	var tmp = new Uint8Array(this.data,this.offset - len, len);","	return String.fromCharCode.apply(null,tmp);","};","","CTM.Stream.prototype.readArrayInt32 = function(array){","  var i = 0, len = array.length;","","  while(i < len){","    array[i ++] = this.readInt32();","  }","","  return array;","};","","CTM.Stream.prototype.readArrayFloat32 = function(array){","  var i = 0, len = array.length;","","  while(i < len){","    array[i ++] = this.readFloat32();","  }","","  return array;","};","","self.onmessage = function( event ) {","var s = Date.now();","","	var files = [];","","	for ( var i = 0; i < event.data.offsets.length; i ++ ) {","","		var stream = new CTM.Stream( event.data.data );","		stream.offset = event.data.offsets[ i ];","","		files[ i ] = new CTM.File( stream );","","	}","","var e = Date.now();",'	self.postMessage( {"f":files,"t":e-s} );',"","}"].join("\n"),THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1
},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,a){this.onLoadStart(),this.loadAjaxJSON(this,e,t,a)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,a,r){void 0===r&&(r={});var i=r.texturePath?r.texturePath:this.extractUrlBase(t),o=r.mergeMaterials,n=r.callbackProgress,s=new XMLHttpRequest,l=0;s.onreadystatechange=function(){if(s.readyState===s.DONE)if(200===s.status||0===s.status){if(s.responseText){var r=JSON.parse(s.responseText);e.createModel(r,a,i,o)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+s.status+"]");else s.readyState===s.LOADING?n&&(0===l&&(l=s.getResponseHeader("Content-Length")),n({total:l,loaded:s.responseText.length})):s.readyState===s.HEADERS_RECEIVED&&(l=s.getResponseHeader("Content-Length"))},s.open("GET",t,!0),s.withCredentials=this.withCredentials,s.send(null)},THREE.JSONLoader.prototype.generateMaterialChunks=function(e,t,a){function r(e,t){return e&1<<t}for(var i,o,n,s,l,d,h,c,u,f,p,m,v=[],g=e.faces,S=g.length,x=0;S>x;){i=g[x++],o=r(i,0),n=r(i,1),l=r(i,2),d=r(i,3),h=r(i,4),c=r(i,5),u=r(i,6),f=r(i,7),o?(p=2,m=4):(p=1,m=3),x+=m,n?(s=g[x++],a&&(s=0)):s=0,void 0===v[s]?v[s]={nTriangles:p,hasNormals:!1,hasUvs:!1,hasColors:!1,hasIndices:!1,indexOffset:0,vertexOffset:0,positionOffset:0,normalOffset:0,colorOffset:0,uvOffset:[],skinWeightOffset:0,skinIndexOffset:0,indexMap:{}}:v[s].nTriangles+=p;var G=v[s];l&&(x+=t),d&&(x+=t*m),h&&(x+=1),c&&(x+=m),u&&(x+=1),f&&(x+=m),(h||c)&&(G.hasNormals|=!0),(l||d)&&(G.hasUvs|=!0),(u||f)&&(G.hasColors|=!0)}return v},THREE.JSONLoader.prototype.generateGeometries=function(e,t,a){for(var r=[],i=0,o=e.length;o>i;i++){var n=e[i];if(void 0!==n){var s=new THREE.Geometry;s.numPrimitives=n.nTriangles,s.numVertices=3*n.nTriangles;var l=Uint16Array;if(s.numVertices>65536&&(l=THREE.elementIndexUintAvailable?Uint32Array:null),null!==l&&(s.addIndex("index",l,3),s.offsets.push({start:0,index:0,count:3*n.nTriangles}),n.hasIndices=!0),s.addAttribute("position",Float32Array,3),n.hasUvs&&s.addAttribute("uv",Float32Array,2),n.hasColors&&s.addAttribute("color",Float32Array,3),s.addAttribute("normal",Float32Array,3),n.hasUvs){n.uvOffset[0]=0;for(var d=1;a>d;d++)s.addAttribute("uv"+(d+1),Float32Array,2),n.uvOffset[d]=0}if(t.skinWeights&&s.addAttribute("skinWeight",Float32Array,4),t.skinIndices&&s.addAttribute("skinIndex",Float32Array,4),void 0===t.morphTargets&&(t.morphTargets=[]),void 0===t.morphColors&&(t.morphColors=[]),t.morphTargets.length>0){s.addVirtualAttribute("morphTarget0"),s.addVirtualAttribute("morphTarget1"),s.addVirtualAttribute("morphTarget2"),s.addVirtualAttribute("morphTarget3"),s.addVirtualAttribute("morphNormal0"),s.addVirtualAttribute("morphNormal1"),s.addVirtualAttribute("morphNormal2"),s.addVirtualAttribute("morphNormal3");for(var d=0,h=t.morphTargets.length;h>d;d++){var c=t.morphTargets[d].name;s.addUnattachedAttribute("mp_"+d,Float32Array,3),s.addUnattachedAttribute("mn_"+d,Float32Array,3),s.morphTargets[d]={name:c,index:s.attributesList.length-2}}}if(t.morphColors.length>0){for(var d=0,h=t.morphColors.length;h>d;d++){{var u=t.morphColors[d],c=u.name;u.colors}s.addUnattachedAttribute("mc_"+d,Float32Array,3),s.morphColors[d]={name:c,index:s.attributesList.length-1,faceColors:!0}}n.hasColors||(s.addVirtualAttribute("color"),s.virtualAttributes.color.mapped=s.attributesList[s.morphColors[0].index])}r[i]=s,s.bones=t.bones;var f=[];t.animations&&(f=t.animations),t.animation&&f.push(t.animation),s.animations=f}}return r},THREE.JSONLoader.prototype.fillGeometries=function(e,t,a,r,i){function o(e,t){return e&1<<t}function n(e,t,a,r,i){e[t]=a[3*r]*i,e[t+1]=a[3*r+1]*i,e[t+2]=a[3*r+2]*i}function s(e,t,a,r){e[t]=a[3*r],e[t+1]=a[3*r+1],e[t+2]=a[3*r+2]}function l(e,t,a,r,i){ct=e[3*t],ut=e[3*t+1],ft=e[3*t+2],pt.set(ct,ut,ft),ct=e[3*a],ut=e[3*a+1],ft=e[3*a+2],mt.set(ct,ut,ft),ct=e[3*r],ut=e[3*r+1],ft=e[3*r+2],vt.set(ct,ut,ft),gt.sub(vt,mt),St.sub(pt,mt),gt.crossSelf(St),i[3*t]+=xt[0],i[3*t+1]+=xt[1],i[3*t+2]+=xt[2],i[3*a]+=xt[0],i[3*a+1]+=xt[1],i[3*a+2]+=xt[2],i[3*r]+=xt[0],i[3*r+1]+=xt[1],i[3*r+2]+=xt[2]}var d,h,c,u,f,p,m,v,g,S,x,G,M,y,X,_,w,D,C,A,T,P,L,b,E,F,R,U,I,N,B,O,V,k,z,H,W,j,q,Y,K,Z,Q,J,$,et,tt=void 0!==a.scale?1/a.scale:1,at=new THREE.Color,rt=a.faces,it=a.vertices,ot=a.normals,nt=a.colors,st=a.skinWeights,lt=a.skinIndices,dt=new Float32Array(a.vertices.length);if(void 0!==a.morphTargets){var ht=[];for($=0,et=a.morphTargets.length;et>$;$++)ht[$]=new Float32Array(a.vertices.length)}for(var ct,ut,ft,pt=new THREE.Vector3,mt=new THREE.Vector3,vt=new THREE.Vector3,gt=new THREE.Vector3,St=new THREE.Vector3,xt=gt.data,Gt=0,Mt=0,yt=rt.length;yt>Mt;){f=rt[Mt++],p=o(f,0),m=o(f,1),v=o(f,2),g=o(f,3),S=o(f,4),x=o(f,5),G=o(f,6),M=o(f,7),p?(T=rt[Mt++],P=rt[Mt++],L=rt[Mt++],b=rt[Mt++],Z=4):(T=rt[Mt++],P=rt[Mt++],L=rt[Mt++],Z=3),m?(u=rt[Mt++],i&&(u=0)):u=0,F=t[u],E=e[u],F.hasIndices&&(R=E.attributes.index.array),U=E.attributes.position.array,F.hasNormals&&(I=E.attributes.normal.array),F.hasUvs&&(N=E.attributes.uv.array),F.hasColors&&(B=E.attributes.color.array),k=F.indexOffset,z=F.positionOffset,q=F.vertexOffset;var Xt=F.indexMap;if(p?(F.hasIndices?(R[k]=q,R[k+1]=q+1,R[k+2]=q+3,R[k+3]=q+1,R[k+4]=q+2,R[k+5]=q+3,F.positionOffset+=12):F.positionOffset+=18,F.indexOffset+=6,F.vertexOffset+=4):(F.hasIndices&&(R[k]=q,R[k+1]=q+1,R[k+2]=q+2),F.indexOffset+=3,F.vertexOffset+=3,F.positionOffset+=9),F.hasIndices){for(n(U,z,it,T,tt),n(U,z+3,it,P,tt),n(U,z+6,it,L,tt),Xt[z]=T,Xt[z+3]=P,Xt[z+6]=L,l(it,T,P,L,dt),p&&(n(U,z+9,it,b,tt),Xt[z+9]=b),Q=0,J=a.morphTargets.length;J>Q;Q++){var _t=E.attributes["mp_"+Q].array,wt=a.morphTargets[Q].vertices;n(_t,z,wt,T,tt),n(_t,z+3,wt,P,tt),n(_t,z+6,wt,L,tt),l(wt,T,P,L,ht[Q]),p&&n(_t,z+9,wt,b,tt)}for(Q=0,J=a.morphColors.length;J>Q;Q++){var Dt=E.attributes["mc_"+Q].array,Ct=a.morphColors[Q].colors;s(Dt,z,Ct,Gt),s(Dt,z+3,Ct,Gt),s(Dt,z+6,Ct,Gt),p&&s(_t,z+9,Ct,Gt)}}else if(p){for(n(U,z,it,T,tt),n(U,z+3,it,P,tt),n(U,z+6,it,b,tt),n(U,z+9,it,P,tt),n(U,z+12,it,L,tt),n(U,z+15,it,b,tt),Xt[z]=T,Xt[z+3]=P,Xt[z+6]=b,Xt[z+9]=P,Xt[z+12]=L,Xt[z+15]=b,Q=0,J=a.morphTargets.length;J>Q;Q++){var _t=E.attributes["mp_"+Q].array,wt=a.morphTargets[Q].vertices;n(_t,z,wt,T,tt),n(_t,z+3,wt,P,tt),n(_t,z+6,wt,b,tt),n(_t,z+9,wt,P,tt),n(_t,z+12,wt,L,tt),n(_t,z+15,wt,b,tt)}for(Q=0,J=a.morphColors.length;J>Q;Q++){var Dt=E.attributes["mc_"+Q].array,Ct=a.morphColors[Q].colors;s(Dt,z,Ct,Gt),s(Dt,z+3,Ct,Gt),s(Dt,z+6,Ct,Gt),s(Dt,z+9,Ct,Gt),s(Dt,z+12,Ct,Gt),s(Dt,z+15,Ct,Gt)}}else{for(n(U,z,it,T,tt),n(U,z+3,it,P,tt),n(U,z+6,it,L,tt),Xt[z]=T,Xt[z+3]=P,Xt[z+6]=L,Q=0,J=a.morphTargets.length;J>Q;Q++){var _t=E.attributes["mp_"+Q].array,wt=a.morphTargets[Q].vertices;n(_t,z,wt,T,tt),n(_t,z+3,wt,P,tt),n(_t,z+6,wt,L,tt)}for(Q=0,J=a.morphColors.length;J>Q;Q++){var Dt=E.attributes["mc_"+Q].array,Ct=a.morphColors[Q].colors;s(Dt,z,Ct,Gt),s(Dt,z+3,Ct,Gt),s(Dt,z+6,Ct,Gt)}}if(a.skinWeights&&(O=E.attributes.skinWeight.array,Y=F.skinWeightOffset,O[Y]=st[2*T],O[Y+1]=st[2*T+1],O[Y+2]=0,O[Y+3]=0,O[Y+4]=st[2*P],O[Y+5]=st[2*P+1],O[Y+6]=0,O[Y+7]=0,O[Y+8]=st[2*L],O[Y+9]=st[2*L+1],O[Y+10]=0,O[Y+11]=0,p?(O[Y+12]=st[2*b],O[Y+13]=st[2*b+1],O[Y+14]=0,O[Y+15]=0,F.skinWeightOffset+=16):F.skinWeightOffset+=12),a.skinIndices&&(V=E.attributes.skinIndex.array,K=F.skinIndexOffset,V[K]=lt[2*T],V[K+1]=lt[2*T+1],V[K+2]=0,V[K+3]=0,V[K+4]=lt[2*P],V[K+5]=lt[2*P+1],V[K+6]=0,V[K+7]=0,V[K+8]=lt[2*L],V[K+9]=lt[2*L+1],V[K+10]=0,V[K+11]=0,p?(V[K+12]=lt[2*b],V[K+13]=lt[2*b+1],V[K+14]=0,V[K+15]=0,F.skinIndexOffset+=16):F.skinIndexOffset+=12),v)for(Q=0;r>Q;Q++)for(y=a.uvs[Q],c=rt[Mt++],X=y[2*c],_=y[2*c+1],w=0===Q?N:E.attributes["uv"+(Q+1)].array,$=0;Z>$;$++)W=F.uvOffset[Q],w[W]=X,w[W+1]=_,F.uvOffset[Q]+=2;if(g)for(Q=0;r>Q;Q++){for(y=a.uvs[Q],w=0===Q?N:E.attributes["uv"+(Q+1)].array,$=0;Z>$;$++)W=F.uvOffset[Q],c=rt[Mt++],X=y[2*c],_=y[2*c+1],w[W]=X,w[W+1]=_,F.uvOffset[Q]+=2;if(p&&!F.hasIndices){var At=F.uvOffset[Q]-4,Tt=w[At],Pt=w[At+1];w[At]=X,w[At+1]=_,w[At+2]=w[At-2],w[At+3]=w[At-1],w[At+4]=Tt,w[At+5]=Pt,w[At+6]=X,w[At+7]=_,F.uvOffset[Q]+=4}}if(S)for(h=3*rt[Mt++],D=ot[h++],C=ot[h++],A=ot[h],$=0;Z>$;$++)H=F.normalOffset,I[H]=D,I[H+1]=C,I[H+2]=A,F.normalOffset+=3;if(x){for(Q=0;Z>Q;Q++)H=F.normalOffset,h=3*rt[Mt++],D=ot[h++],C=ot[h++],A=ot[h],I[H]=D,I[H+1]=C,I[H+2]=A,F.normalOffset+=3;if(p&&!F.hasIndices){var At=F.normalOffset-6,Lt=I[At],bt=I[At+1],Et=I[At+2];I[At]=D,I[At+1]=C,I[At+2]=A,I[At+3]=I[At-3],I[At+4]=I[At-2],I[At+5]=I[At-1],I[At+6]=Lt,I[At+7]=bt,I[At+8]=Et,I[At+9]=D,I[At+10]=C,I[At+11]=A,F.normalOffset+=6}}if(G)for(j=F.colorOffset,d=rt[Mt++],at.setHex(nt[d]),$=0;Z>$;$++)B[j]=at.r,B[j+1]=at.g,B[j+2]=at.b,F.colorOffset+=3;if(M){for(j=F.colorOffset,Q=0;Z>Q;Q++)d=rt[Mt++],at.setHex(nt[d]),B[j]=at.r,B[j+1]=at.g,B[j+2]=at.b,F.colorOffset+=3;if(p&&!F.hasIndices){var At=F.colorOffset-6,Lt=B[At],bt=B[At+1],Et=B[At+2];B[At]=D,B[At+1]=C,B[At+2]=A,B[At+3]=B[At-3],B[At+4]=B[At-2],B[At+5]=B[At-1],B[At+6]=Lt,B[At+7]=bt,B[At+8]=Et,B[At+9]=D,B[At+10]=C,B[At+11]=A,F.colorOffset+=6}}Gt+=1}var Ft;for(Q=0,J=dt.length;J>Q;Q+=3)D=dt[Q],C=dt[Q+1],A=dt[Q+2],Ft=1/Math.sqrt(D*D+C*C+A*A),dt[Q]*=Ft,dt[Q+1]*=Ft,dt[Q+2]*=Ft;if(void 0!==a.morphTargets)for($=0,et=a.morphTargets.length;et>$;$++){var Rt=ht[$];for(Q=0,J=Rt.length;J>Q;Q+=3)D=Rt[Q],C=Rt[Q+1],A=Rt[Q+2],Ft=1/Math.sqrt(D*D+C*C+A*A),Rt[Q]*=Ft,Rt[Q+1]*=Ft,Rt[Q+2]*=Ft}for(Q=0,J=t.length;J>Q;Q++){var Ut=t[Q];if(!Ut.hasNormals){E=e[Q],I=E.attributes.normal.array;for(Mt in Ut.indexMap){var It=Ut.indexMap[Mt];Mt=parseInt(Mt),I[Mt+0]=dt[3*It],I[Mt+1]=dt[3*It+1],I[Mt+2]=dt[3*It+2]}if(void 0!==a.morphTargets)for($=0,et=a.morphTargets.length;et>$;$++){var Rt=ht[$],Nt=E.attributes["mn_"+$].array;for(Mt in Ut.indexMap){var It=Ut.indexMap[Mt];Mt=parseInt(Mt),Nt[Mt+0]=Rt[3*It],Nt[Mt+1]=Rt[3*It+1],Nt[Mt+2]=Rt[3*It+2]}}}}},THREE.JSONLoader.prototype.createModel=function(e,t,a,r){for(var i=0,o=0;o<e.uvs.length;o++)e.uvs[o].length&&i++;var n=this.generateMaterialChunks(e,i,r),s=this.generateGeometries(n,e,i);this.fillGeometries(s,n,e,i,r);var l=this.initMaterials(e.materials,a);t(s,l)},THREE.RenderTarget=function(e,t,a){this.id=THREE.TextureIdCount++,this.width=e,this.height=t,a=a||{},this.wrapS=void 0!==a.wrapS?a.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==a.wrapT?a.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==a.magFilter?a.magFilter:THREE.LinearFilter,this.minFilter=void 0!==a.minFilter?a.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==a.anisotropy?a.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.internalFormat=void 0!==a.internalFormat?a.internalFormat:THREE.RGBAFormat,this.format=void 0!==a.format?a.format:THREE.RGBAFormat,this.type=void 0!==a.type?a.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==a.depthBuffer?a.depthBuffer:!0,this.stencilBuffer=void 0!==a.stencilBuffer?a.stencilBuffer:!0,this.mipmapCount=0,this.generateMipmaps=!0,this.shareDepthFrom=null,this.useDepthTexture=void 0!==a.useDepthTexture?a.useDepthTexture:!1,this.depthTextureType=void 0!==a.depthTextureType?a.depthTextureType:THREE.UnsignedIntType,this.depthTexture=null,this.useColorTexture=void 0!==a.useColorTexture?a.useColorTexture:!0,this.mrtColorAttachment=null,this.needsUpdate=!0,this.onUpdate=null},THREE.RenderTarget.prototype.setSize=function(e,t){this.width=e,this.height=t,this.needsUpdate=!0},THREE.RenderTarget.prototype.clone=function(){var e=new THREE.RenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.internalFormat=this.internalFormat,e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.mipmapCount=this.mipmapCount,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e.useDepthTexture=this.useDepthTexture,e.depthTextureType=this.depthTextureType,e.depthTexture=this.depthTexture,e.useColorTexture=this.useColorTexture,e.mrtColorAttachment=this.mrtColorAttachment,e},THREE.RenderTargetCube=function(e,t,a){THREE.RenderTarget.call(this,e,t,a),this.activeCubeFace=0},THREE.RenderTargetCube.prototype=Object.create(THREE.RenderTarget.prototype),THREE.RenderTargetArray=function(e,t,a,r,i){i=i||{},this.width=e,this.height=t,this.colorTexture=[],this.depthTexture=null;for(var o=0;a>o;o++)this.colorTexture.push(new THREE.RenderTarget(e,t,i));r&&(this.depthTexture=new THREE.RenderTarget(e,t,{magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter})),this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0,this.generateMipmaps=!0,this.needsUpdate=!0,this.onUpdate=null},THREE.RenderTargetArray.prototype.clone=function(){for(var e=new THREE.RenderTargetArray(this.width,this.height),t=this.colorTexture.length,a=0;t>a;a++)e.colorTexture.push(this.colorTexture[a].clone());return this.depthTexture&&(e.depthTexture=this.depthTexture.clone()),e.generateMipmaps=this.generateMipmaps,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e},THREE.RenderTargetArray.prototype.setSize=function(e,t){this.width=e,this.height=t;for(var a=this.colorTexture.length,r=0;a>r;r++)this.colorTexture[r].setSize(e,t);this.depthTexture&&this.depthTexture.setSize(e,t),this.needsUpdate=!0},THREE.DebugUtils={},THREE.DebugUtils.parseTranslatedShaderErrorLog=function(e){for(var t,a,r,i,o,n=/\((\d+),(\d+)-(\d+)\): (.*)/g,s={};t=n.exec(e);)t.length<5||(a=t[1],r=t[2]-1,i=t[3]-1,o=t[4],void 0===s[a]?s[a]={start:r,end:i,lineText:o}:s[a].text+=", "+o);return s},THREE.DebugUtils.parseGLSLShaderErrorLog=function(e){for(var t,a,r,i,o,n=e.split("\n").join("").split("WARNING").join("\nWARNING"),s=/(ERROR|WARNING): (\d+):(\d+): (.*)/g,l={};t=s.exec(n);)t.length<4||(o=t[1],a=t[2],r=t[3],i=t[4],void 0===l[r]?l[r]={fileNum:a,lineText:i,type:o}:l[r].text+=", "+i);return l},THREE.DebugUtils.printHighlightedLine=function(e,t,a,r,i){var o="%c"+i.substring(0,1).toUpperCase()+i.substring(1)+"\n",n="%c"+r+":",s="%c"+e.substring(0,t),l="%c"+e.substring(t,a+1),d="%c"+e.substring(a+1);console.warn(o+n+s+l+d,"color:saddlebrown","color:gray","color:gray","color:goldenrod","color:gray")},THREE.DebugUtils.prettyPrintTranslatedShaderErrors=function(e,t){for(var a=e.split("\n"),r=0,i=a.length;i>r;r++){var o=a[r],n=r+1;t[n]&&THREE.DebugUtils.printHighlightedLine(o,t[n].start,t[n].end,n,t[n].lineText)}},THREE.DebugUtils.prettyPrintShaderErrors=function(e,t){for(var a=[],r=e.split("\n"),i=0,o=r.length;o>i;i++){var n=i+1,s=n+": "+r[i];if(t[n]){a.length>0&&(console.log(a.join("\n")),a=[]);var l=t[n].lineText,d=t[n].type;"ERROR"===d?console.error("ERROR: "+l+"\n"+s):console.warn("WARNING: "+l+"\n"+s)}}console.log(a.join("\n"))},THREE.DebugUtils.addLineNumbers=function(e){for(var t=e.split("\n"),a=0,r=t.length;r>a;a++)t[a]=a+1+": "+t[a];return t.join("\n")},THREE.DebugUtils.translateGLErrorCode=function(e){switch(e){case 0:return"NO_ERROR";case 1280:return"INVALID_ENUM";case 1281:return"INVALID_VALUE";case 1282:return"INVALID_OPERATION";case 1283:return"STACK_OVERFLOW";case 1284:return"STACK_UNDERFLOW";case 1285:return"OUT_OF_MEMORY";case 1286:return"INVALID_FRAMEBUFFER_OPERATION"}return"UNKNOWN_ERROR ["+e+"]"},THREE.ImageUtils={crossOrigin:"anonymous",halfFloatType:THREE.HalfFloatType1},THREE.ImageUtils.loadTexture=function(e,t,a){var r=new Image,i=new THREE.Texture(r);return r.onload=function(){i.image=r,i.needsUpdate=!0,t&&t(i)},a&&(r.onerror=a),r.crossOrigin=this.crossOrigin,r.src=e,i.sourceFile=e,i},THREE.ImageUtils.loadMultipleCRNTexturesFromPack=function(e,t,a){for(var r=!1,i=(Date.now(),[]),o=[],n=0,s=e.length;s>n;n++){var l=e[n],d=l[0],h=l[1],c=l[2];i.push([h,c]),o.push(d)}if(r);else var u=new Worker("js/crunch/CrunchWorker.js");u.onmessage=function(e){for(var t=e.data.textureData,r=0,i=t.length;i>r;r++){var n=t[r],s=o[r];s.format=n.format,s.mipmaps=n.mipmaps,s.image.width=n.width,s.image.height=n.height,s.generateMipmaps=!1,s.needsUpdate=!0}Date.now();a&&a()},u.postMessage({buffer:t,offsets:i},[t])},THREE.ImageUtils.loadCRNTextureFromPack=function(e,t,a,r,i){var o=!0,n=THREE.ImageUtils.parseCRN(t,o,a,r);return e.format=n.format,e.mipmaps=n.mipmaps,e.image.width=n.width,e.image.height=n.height,e.generateMipmaps=!1,e.needsUpdate=!0,i&&i(e),e},THREE.ImageUtils.loadCompressedTextureFromPack=function(e,t,a,r){var i=!0,o=THREE.ImageUtils.parseDDS(t,i,a);return e.format=o.format,e.type=o.type,e.mipmaps=o.mipmaps,e.image.width=o.width,e.image.height=o.height,e.generateMipmaps=!1,e.needsUpdate=!0,r&&r(e),e},THREE.ImageUtils.loadCompressedTexture=function(e,t,a){var r=new THREE.CompressedTexture,i=new XMLHttpRequest;return i.onload=function(){var e=i.response,a=!0,o=0,n=THREE.ImageUtils.parseDDS(e,a,o);r.format=n.format,r.type=n.type,r.mipmaps=n.mipmaps,r.image.width=n.width,r.image.height=n.height,r.generateMipmaps=!1,r.needsUpdate=!0,t&&t(r)},i.onerror=a,i.open("GET",e,!0),i.responseType="arraybuffer",i.send(null),r},THREE.ImageUtils.loadPVRTexture=function(e,t,a){var r=new THREE.CompressedTexture,i=new XMLHttpRequest;return i.onload=function(){var e=i.response,a=!0,o=0,n=THREE.ImageUtils.parsePVR(e,a,o);r.format=n.format,r.type=n.type,r.mipmaps=n.mipmaps,r.image.width=n.width,r.image.height=n.height,r.generateMipmaps=!1,r.needsUpdate=!0,t&&t(r)},i.onerror=a,i.open("GET",e,!0),i.responseType="arraybuffer",i.send(null),r},THREE.ImageUtils.loadATCTexture=function(){},THREE.ImageUtils.loadETCTexture=function(){},THREE.ImageUtils.loadCRNTexture=function(e,t,a){var r=new THREE.CompressedTexture,i=new XMLHttpRequest;return i.onload=function(){var e=i.response,a=!0,o=THREE.ImageUtils.parseCRN(e,a,0);r.format=o.format,r.type=o.type,r.mipmaps=o.mipmaps,r.image.width=o.width,r.image.height=o.height,r.generateMipmaps=!1,r.needsUpdate=!0,t&&t(r)},i.onerror=a,i.open("GET",e,!0),i.responseType="arraybuffer",i.send(null),r},THREE.ImageUtils.loadTextureCube=function(e,t,a){var r=[];r.loadCount=0;var i=new THREE.Texture;i.image=r,i.flipY=!1;for(var o=0,n=e.length;n>o;++o){var s=new Image;r[o]=s,s.onload=function(){r.loadCount+=1,6===r.loadCount&&(i.needsUpdate=!0,i.mipmapCount=0,t&&t(i))},s.onerror=a,s.crossOrigin=this.crossOrigin,s.src=e[o]}return i},THREE.ImageUtils.loadCompressedTextureCube=function(e,t,a){var r=[];r.loadCount=0;var i=new THREE.CompressedTexture;i.image=r,i.flipY=!1,i.generateMipmaps=!1;var o=function(e,a){return function(){var o=e.response,n=!0,s=0,l=THREE.ImageUtils.parseDDS(o,n,s);a.format=l.format,a.type=l.type,a.mipmaps=l.mipmaps,a.width=l.width,a.height=l.height,r.loadCount+=1,6===r.loadCount&&(i.format=l.format,i.type=l.type,i.mipmapCount=l.mipmapCount,i.needsUpdate=!0,t&&t(i))}};if(e instanceof Array)for(var n=0,s=e.length;s>n;++n){var l={};r[n]=l;var d=new XMLHttpRequest;d.onload=o(d,l),d.onerror=a;var h=e[n];d.open("GET",h,!0),d.responseType="arraybuffer",d.send(null)}else{var h=e,d=new XMLHttpRequest;d.onload=function(){var e=d.response,a=!0,o=0,n=THREE.ImageUtils.parseDDS(e,a,o);if(n.isCubemap){for(var s=n.mipmaps.length/n.mipmapCount,l=0;s>l;l++){r[l]={mipmaps:[]};for(var h=0;h<n.mipmapCount;h++)r[l].mipmaps.push(n.mipmaps[l*n.mipmapCount+h]),r[l].format=n.format,r[l].type=n.type,r[l].width=n.width,r[l].height=n.height}i.format=n.format,i.type=n.type,i.mipmapCount=n.mipmapCount,i.needsUpdate=!0,t&&t(i)}},d.onerror=a,d.open("GET",h,!0),d.responseType="arraybuffer",d.send(null)}return i},THREE.ImageUtils.loadCRNTextureCube=function(e,t,a){var r=[];r.loadCount=0;var i=new THREE.CompressedTexture;i.image=r,i.flipY=!1,i.generateMipmaps=!1;var o=function(e,a){return function(){var o=e.response,n=!0,s=0,l=THREE.ImageUtils.parseCRN(o,n,s);a.format=l.format,a.type=l.type,a.mipmaps=l.mipmaps,a.width=l.width,a.height=l.height,r.loadCount+=1,6===r.loadCount&&(i.format=l.format,i.type=l.type,i.mipmapCount=l.mipmapCount,i.needsUpdate=!0,t&&t(i))}};if(e instanceof Array)for(var n=0,s=e.length;s>n;++n){var l={};r[n]=l;var d=new XMLHttpRequest;d.onload=o(d,l),d.onerror=a;var h=e[n];d.open("GET",h,!0),d.responseType="arraybuffer",d.send(null)}else console.warn("Loading cubemap from cube CRN file not implemented!");return i},THREE.ImageUtils.textureLevelSize=function(e,t,a){switch(e){case THREE.RGB_S3TC_DXT1_Format:case THREE.RGB_ATC_Format:case THREE.RGB_ETC1_Format:return(t+3>>2)*(a+3>>2)*8;case THREE.RGBA_S3TC_DXT3_Format:case THREE.RGBA_S3TC_DXT5_Format:case THREE.RGBA_ATC_EXPLICIT_ALPHA_Format:case THREE.RGBA_ATC_INTERPOLATED_ALPHA_Format:return(t+3>>2)*(a+3>>2)*16;case THREE.RGB_PVRTC_4BPPV1_Format:case THREE.RGBA_PVRTC_4BPPV1_Format:return Math.floor((Math.max(t,8)*Math.max(a,8)*4+7)/8);case THREE.RGB_PVRTC_2BPPV1_Format:case THREE.RGBA_PVRTC_2BPPV1_Format:return Math.floor((Math.max(t,16)*Math.max(a,8)*2+7)/8);default:return 0}},THREE.ImageUtils.parsePVR=function(e,t,a){void 0===a&&(a=0);var r={mipmaps:[],width:0,height:0,format:null,type:THREE.UnsignedByteType,mipmapCount:1},i=0,o=1,n=2,s=3,l=6,d=7,h=9,c=5,u=13,f=55727696,p=0,m=2,v=6,g=7,S=11,x=12,G=new Int32Array(e,0,u);G[p]!==f&&console.error("ImageUtils.parsePVR(): Invalid magic number in PVR header");var M,y=G[m];switch(y){case i:M=THREE.RGB_PVRTC_2BPPV1_Format;break;case o:M=THREE.RGBA_PVRTC_2BPPV1_Format;break;case n:M=THREE.RGB_PVRTC_4BPPV1_Format;break;case s:M=THREE.RGBA_PVRTC_4BPPV1_Format;break;case l:M=THREE.RGB_ETC1_Format;break;case d:M=THREE.RGB_S3TC_DXT1_Format;break;case h:M=THREE.RGBA_S3TC_DXT3_Format;break;case c:M=THREE.RGBA_S3TC_DXT5_Format;break;default:console.error("Unsupported PVR format: "+y)}r.format=M;for(var X=G[g],_=G[v],w=G[S],D=G[x]+52,C=new Uint8Array(e,D),A=0,T=4,P=0;w>P;++P){var L=THREE.ImageUtils.textureLevelSize(M,X,_),b=new Uint8Array(C.buffer,C.byteOffset+A,L),E={data:b,width:X,height:_,unpackAlignment:T};r.mipmaps.push(E),X>>=1,_>>=1,A+=L}return r},THREE.ImageUtils.parseDDS=function(e,t,a){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function i(e){return String.fromCharCode(255&e,e>>8&255,e>>16&255,e>>24&255)}void 0===a&&(a=0);var o={mipmaps:[],width:0,height:0,format:null,type:null,mipmapCount:1},n=542327876,s=131072,l=512,d=4,h=64,c=64,u=65,f=THREE.ImageUtils.halfFloatType,p=r("DXT1"),m=r("DXT3"),v=r("DXT5"),g=r("DX10"),S=116,x=113,G=3,M=2,y=10,X=16,_=34,w=41,D=54,C=31,A=0,T=1,P=2,L=3,b=4,E=7,F=20,R=21,U=28,I=new Uint32Array(e,a,C);if(I[A]!==n)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),o;if(!I[F]&d)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),o;var N=!0,B=0,O=I[R];switch(O){case p:B=8,o.format=THREE.RGB_S3TC_DXT1_Format,o.type=THREE.UnsignedByteType;break;case m:B=16,o.format=THREE.RGBA_S3TC_DXT3_Format,o.type=THREE.UnsignedByteType;break;case v:B=16,o.format=THREE.RGBA_S3TC_DXT5_Format,o.type=THREE.UnsignedByteType;break;case S:o.format=THREE.RGBAFormat,o.type=THREE.FloatType,N=!1;break;case x:o.format=THREE.RGBAFormat,o.type=f,N=!1;break;case g:{var V=a+128,k=new Uint32Array(e,V,5),z=k[0],H=k[1];k[2],k[3],k[4]}if(H===G&&z===M)o.format=THREE.RGBAFormat,o.type=THREE.FloatType,N=!1;else if(H===G&&z===X)o.format=THREE.LuminanceAlphaFormat,o.type=THREE.FloatType,N=!1;else if(H===G&&z===w)o.format=THREE.LuminanceFormat,o.type=THREE.FloatType,N=!1;else if(H===G&&z===y)o.format=THREE.RGBAFormat,o.type=f,N=!1;else if(H===G&&z===_)o.format=THREE.LuminanceAlphaFormat,o.type=f,N=!1;else{if(H!==G||z!==D)return console.error("ImageUtils.parseDDS(): unsupported DX10 texture format "+z),o;o.format=THREE.LuminanceFormat,o.type=f,N=!1}break;default:if(!(I[F]&h))return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",O,i(O)),o;if(I[20]===u)o.format=THREE.RGBAFormat,o.type=THREE.UnsignedByteType,N=!1;else{if(I[20]!==c)return console.error("ImageUtils.parseDDS(): Unsupported uncompressed format"),o;o.format=THREE.RGBFormat,o.type=THREE.UnsignedByteType,N=!1}}o.isCubemap=I[U]&l?!0:!1,o.width=I[b],o.height=I[L];var W=1,j=1;if(I[P]&s&&t!==!1){var q=Math.max(o.width,o.height);W=Math.log(q)/Math.log(2)+1,j=Math.max(1,I[E]),o.mipmapCount=j,W>j&&console.warn("ImageUtils.parseDDS(): requiredMipLevels:",W,"imgMipLevels:",j)}var Y=a+I[T]+4;O===g&&(Y+=20);for(var K,Z,Q,J,$=o.width,et=o.height,tt=o.isCubemap?6:1,at=0;tt>at;at++){for(var rt=0;rt<o.mipmapCount;rt++){var it=4;if(o.type===THREE.UnsignedByteType){if(Z=N?Math.max(4,$)/4*Math.max(4,et)/4*B:$*et*4,Q=new Uint8Array(e,Y,Z),N)J=Q;else if(o.format===THREE.RGBAFormat){J=Q;for(var ot=0;Z>ot;ot+=4){var nt=J[ot];J[ot]=J[ot+2],J[ot+2]=nt}}else if(o.format===THREE.RGBFormat){J=new Uint8Array($*et*3),J.length%16!==0&&(it=1);for(var st=0,ot=0;Z>ot;ot+=4){var lt=Q[ot],dt=Q[ot+1],ht=Q[ot+2];J[st++]=ht,J[st++]=dt,J[st++]=lt}}}else o.type===THREE.FloatType?(o.format===THREE.RGBAFormat?(Z=$*et*16,K=$*et*4):o.format===THREE.LuminanceAlphaFormat?(Z=$*et*8,K=$*et*2):o.format===THREE.LuminanceFormat?(Z=$*et*4,K=$*et*1):console.error("ImageUtils.parseDDS(): unsupported DX10 texture format "+z+" for float texture"),J=new Float32Array(e,Y,K)):o.type===f&&(o.format===THREE.RGBAFormat?(Z=$*et*8,K=$*et*4):o.format===THREE.LuminanceAlphaFormat?(Z=$*et*4,K=$*et*2):o.format===THREE.LuminanceFormat?(Z=$*et*2,K=$*et*1):console.error("ImageUtils.parseDDS(): unsupported DX10 texture format "+z+" for half-float texture"),J=new Uint16Array(e,Y,K));var ct={data:J,width:$,height:et,unpackAlignment:it};o.mipmaps.push(ct),Y+=Z,$=Math.max(.5*$,1),et=Math.max(.5*et,1)}$=o.width,et=o.height}return o},THREE.ImageUtils.parseCRN=function(e,t,a,r){void 0===a&&(a=0),void 0===r&&(r=e.byteLength);var i={mipmaps:[],width:0,height:0,format:null,type:THREE.UnsignedByteType,mipmapCount:1},o=0,n=1,s=2,l=function(e,t,a){t.set(e,a)},d=new Uint8Array(e,a,r),h=r,c=Module._malloc(h);l(d,Module.HEAPU8,c,h);var u,f=Module._crn_get_dxt_format(c,h);switch(f){case o:u=THREE.RGB_S3TC_DXT1_Format;break;case n:u=THREE.RGBA_S3TC_DXT3_Format;break;case s:u=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseCRN(): Unsupported image format"),0}var p=Module._crn_get_width(c,h),m=Module._crn_get_height(c,h),v=Module._crn_get_levels(c,h);i.format=u,i.width=p,i.height=m,i.mipmapCount=v;for(var g=4,S=Module._crn_get_uncompressed_size(c,h,0),x=Module._malloc(S),G=0;v>G;++G){G&&(S=Module._crn_get_uncompressed_size(c,h,G)),Module._crn_decompress(c,h,x,S,G);var M=Module.HEAPU8.buffer.slice(x,x+S),y=new Uint8Array(M),X={data:y,width:p,height:m,unpackAlignment:g};i.mipmaps.push(X),p=Math.max(.5*p,1),m=Math.max(.5*m,1)}return Module._free(c),Module._free(x),i},THREE.ImageUtils.getNormalMap=function(e,t){var a=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},r=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},i=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var o=e.width,n=e.height,s=document.createElement("canvas");s.width=o,s.height=n;var l=s.getContext("2d");l.drawImage(e,0,0);for(var d=l.getImageData(0,0,o,n).data,h=l.createImageData(o,n),c=h.data,u=0;o>u;u++)for(var f=0;n>f;f++){var p=0>f-1?0:f-1,m=f+1>n-1?n-1:f+1,v=0>u-1?0:u-1,g=u+1>o-1?o-1:u+1,S=[],x=[0,0,d[4*(f*o+u)]/255*t];S.push([-1,0,d[4*(f*o+v)]/255*t]),S.push([-1,-1,d[4*(p*o+v)]/255*t]),S.push([0,-1,d[4*(p*o+u)]/255*t]),S.push([1,-1,d[4*(p*o+g)]/255*t]),S.push([1,0,d[4*(f*o+g)]/255*t]),S.push([1,1,d[4*(m*o+g)]/255*t]),S.push([0,1,d[4*(m*o+u)]/255*t]),S.push([-1,1,d[4*(m*o+v)]/255*t]);for(var G=[],M=S.length,y=0;M>y;y++){var X=S[y],_=S[(y+1)%M];X=r(X,x),_=r(_,x),G.push(i(a(X,_)))}for(var w=[0,0,0],y=0;y<G.length;y++)w[0]+=G[y][0],w[1]+=G[y][1],w[2]+=G[y][2];w[0]/=G.length,w[1]/=G.length,w[2]/=G.length;var D=4*(f*o+u);c[D]=(w[0]+1)/2*255|0,c[D+1]=(w[1]+1)/2*255|0,c[D+2]=255*w[2]|0,c[D+3]=255}return l.putImageData(h,0,0),s},THREE.ImageUtils.generateDataTexture=function(e,t,a){for(var r=e*t,i=new Uint8Array(3*r),o=Math.floor(255*a.r),n=Math.floor(255*a.g),s=Math.floor(255*a.b),l=0;r>l;l++)i[3*l]=o,i[3*l+1]=n,i[3*l+2]=s;var d=new THREE.DataTexture(i,e,t,THREE.RGBFormat);return d.needsUpdate=!0,d},THREE.ImageUtils.generateNoiseTexture=function(e,t){for(var a=e*t,r=new Uint8Array(3*a),i=0;a>i;i++)r[3*i]=Math.floor(255*Math.random()),r[3*i+1]=Math.floor(255*Math.random()),r[3*i+2]=Math.floor(255*Math.random());var o=new THREE.DataTexture(r,e,t,THREE.RGBFormat);return o.needsUpdate=!0,o},THREE.ImageUtils.generateDummyCompressedTexture=function(e){var t=[542327876,124,659463,4,4,8,0,3,1347242311,1396982829,131585,0,0,0,0,0,0,0,0,32,4,827611204,24,16711680,65280,255,0,4198408,0,0,0,0,38066,2863311530,38066,2863311530,38066,2863311530],a=new Uint32Array(t),r=!0,i=0,o=THREE.ImageUtils.parseDDS(a.buffer,r,i);e.format=o.format,e.type=o.type,e.mipmaps=o.mipmaps,e.image.width=o.width,e.image.height=o.height,e.generateMipmaps=!1,e.needsUpdate=!0},THREE.ImageUtils.generateMipTexture=function(e,t){function a(e,t,a){for(var r=e*t,i=new Uint8Array(r),o=16*a,n=0;r>n;n++)i[n]=o;var s={width:e,height:t,data:i};return s}THREE.Math.isPowerOfTwo(e)&&THREE.Math.isPowerOfTwo(t)||console.error("THREE.ImageUtils.generateMipTexture: dimensions [",e,"x",t,"] are not power of two.");for(var r=Math.log(Math.max(e,t))/Math.LN2,i=e,o=t,n=[],s=0;r>=s;s++)n[s]=a(i,o,s),i=Math.max(Math.ceil(.5*i),1),o=Math.max(Math.ceil(.5*o),1);var l=n[0],d=new THREE.DataTexture(l.data,e,t,THREE.LuminanceFormat);return d.mipmaps=n,d.unpackAlignment=1,d.needsUpdate=!0,d},THREE.ImageUtils.convertHalfFloatToFloatMipChain=function(e){for(var t=THREE.Math.convertHalfToFloat,a=0,r=e.length;r>a;a++){for(var i=e[a],o=i.data,n=o.length,s=new Float32Array(n),l=0;n>l;l++){var d=o[l];s[l]=t(d)}i.data=s}},THREE.ImageUtils.convertHalfFloatToFloatTexture=function(e){if(e.type!==THREE.ImageUtils.halfFloatType)return void console.warn("THREE.ImageUtils.convertHalfFloatToFloatTexture: source texture not using half-floats");var t=THREE.ImageUtils.convertHalfFloatToFloatMipChain;if(e.image instanceof Array)for(var a=e.image,r=0,i=a.length;i>r;r++){var o=a[r];t(o.mipmaps),o.type=THREE.FloatType}else t(e.image.mipmaps);e.type=THREE.FloatType},THREE.UniformsUtils={merge:function(e){var t,a,r,i={};for(t=0;t<e.length;t++){r=this.clone(e[t]);for(a in r)i[a]=r[a]}return i},clone:function(e){var t,a,r,i={};for(t in e){i[t]={};for(a in e[t])r=e[t][a],i[t][a]=r instanceof THREE.Color||r instanceof THREE.Vector2||r instanceof THREE.Vector3||r instanceof THREE.Vector4||r instanceof THREE.Quaternion||r instanceof THREE.Matrix3||r instanceof THREE.Matrix4||r instanceof THREE.Texture?r.clone():r instanceof Array?r.slice():r}return i},cloneDefines:function(e){var t,a={};for(t in e)a[t]=e[t];return a}},THREE.AtmosphericFog=function(e,t,a){this.name="",this.color=new THREE.Color(e),this.start=void 0!==t?t:100,this.strength=void 0!==a?a:.1},THREE.AtmosphericFog.prototype.clone=function(){return new THREE.AtmosphericFog(this.color.getHex(),this.start,this.strength)},THREE.LinearFog=function(e,t,a){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==a?a:1e3},THREE.LinearFog.prototype.clone=function(){return new THREE.LinearFog(this.color.getHex(),this.near,this.far)},THREE.ExponentialFog=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.ExponentialFog.prototype.clone=function(){return new THREE.ExponentialFog(this.color.getHex(),this.density)},THREE.HeightFog=function(e){e=e||{},this.name="",this.height=void 0!==e.height?e.height:-15,this.visibilityDistance=void 0!==e.visibilityDistance?e.visibilityDistance:50,this.fadeSpeed=void 0!==e.fadeSpeed?e.fadeSpeed:.15,this.shallowDepthColor=void 0!==e.shallowDepthColor?e.shallowDepthColor:(new THREE.Color).setRGB(.0078,.5176,.7),this.deepDepthColor=void 0!==e.deepDepthColor?e.deepDepthColor:(new THREE.Color).setRGB(.0039,.00196,.145),this.rgbExtinctionDistance=void 0!==e.rgbExtinctionDistance?e.rgbExtinctionDistance:new THREE.Vector3(7,30,40)},THREE.HeightFog.prototype.clone=function(){var e=new THREE.HeightFog;return e.height=this.height,e.visibilityDistance=this.visibilityDistance,e.fadeSpeed=this.fadeSpeed,e.shallowDepthColor.copy(this.shallowDepthColor),e.deepDepthColor.copy(this.deepDepthColor),e.rgbExtinctionDistance.copy(this.rgbExtinctionDistance),e},THREE.LightProbe=function(e,t,a,r,i){this.bounces=0;var o,n=void 0!==a?a:THREE.FloatType,s=void 0!==r?r:THREE.RGBAFormat;i?n===THREE.FloatType&&s===THREE.RGBAFormat?o=THREE.RGBA32F:n===THREE.FloatType&&s===THREE.RGBFormat?o=THREE.RGB32F:n===THREE.HalfFloatType2&&s===THREE.RGBAFormat?o=THREE.RGBA16F:n===THREE.HalfFloatType2&&s===THREE.RGBFormat?o=THREE.RGB16F:n===THREE.UnsignedByteType&&(o=s):o=s;
var l={format:s,internalFormat:o,type:n,magFilter:THREE.LinearFilter,minFilter:THREE.LinearMipMapLinearFilter,stencilBuffer:!1},d={format:s,internalFormat:o,type:n,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter,stencilBuffer:!1};this.specularCube=new THREE.RenderTargetCube(e,e,l),this.diffuseCube=new THREE.RenderTargetCube(t,t,d);var h=THREE.IBLDiffuseProbeShader,c=THREE.UniformsUtils.clone(h.uniforms);c.tCube.value=this.diffuseCube;var u=new THREE.ShaderMaterial({vertexShader:h.vertexShader,fragmentShader:h.fragmentShader,uniforms:c,transparent:!0}),f=THREE.IBLDiffuseConvolutionShader,p=THREE.UniformsUtils.clone(f.uniforms);p.tCube.value=this.specularCube,this.diffuseConvolutionMaterial=new THREE.ShaderMaterial({vertexShader:f.vertexShader,fragmentShader:f.fragmentShader,uniforms:p,side:THREE.BackSide,transparent:!0});var m=THREE.LightProbe.sphereGeometry;THREE.Mesh.call(this,m,u),this.renderDepth=1},THREE.LightProbe.prototype=Object.create(THREE.Mesh.prototype),THREE.LightProbe.sphereGeometry=new THREE.SphereGeometry(1,32,16),THREE.LightProbesManager=function(e,t,a){this.renderer=e,this.scene=t,this.dynamicObjects=a,this.defaultSpecularSize=128,this.defaultDiffuseSize=16,this.defaultProbeTextureType=THREE.FloatType,this.probesList=[],this.convolutionScene=new THREE.Scene,this.sceneCamera=new THREE.CubeCamera(1,1e3),this.convolutionCamera=new THREE.CubeCamera(1,1e3),this.scene.add(this.sceneCamera),this.convolutionScene.add(this.convolutionCamera);var r=new THREE.SphereGeometry(2,8,4);this.convolutionMesh=new THREE.Mesh(r,null),this.convolutionScene.add(this.convolutionMesh),this.maxBounces=1,this.maxProbesPerFrame=1,this.isES3="webgl2"===e.getRenderingBackend()},THREE.LightProbesManager.prototype.createProbe=function(e,t){void 0===e&&(e=this.defaultSpecularSize),void 0===t&&(t=this.defaultDiffuseSize);var a=this.renderer.renderer?this.renderer.renderer:this.renderer,r=a.supportsRGBFloatRenderTarget()?THREE.RGBFormat:THREE.RGBAFormat,i=this.defaultProbeTextureType,o=new THREE.LightProbe(e,t,i,r,this.isES3);return this.probesList.push(o),this.dynamicObjects.push(o),o},THREE.LightProbesManager.prototype.update=function(){var e,t,a,r=this.dynamicObjects;for(e=0,t=r.length;t>e;e++)a=r[e],a.properties.oldVisible=a.visible,a.visible=!1;var i=this.renderer,o=this.probesList,n=0;for(e=0,t=o.length;t>e;e++){var s=o[e];if(!(s.bounces>=this.maxBounces)){var l=s.specularCube,d=s.diffuseCube;if(this.sceneCamera.position.copy(s.position),this.convolutionMesh.materials[0]=s.diffuseConvolutionMaterial,i.renderCube(this.scene,this.sceneCamera,l),i.renderCube(this.convolutionScene,this.convolutionCamera,d),s.bounces+=1,n+=1,n>=this.maxProbesPerFrame)break}}for(e=0,t=r.length;t>e;e++)a=r[e],a.visible=a.properties.oldVisible},THREE.LightProbesManager.prototype.refreshProbes=function(){for(var e=this.probesList,t=0,a=e.length;a>t;t++){var r=e[t];r.bounces=0}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrcColor=THREE.SrcAlphaFactor,this.blendDstColor=THREE.OneMinusSrcAlphaFactor,this.blendSrcAlpha=THREE.OneFactor,this.blendDstAlpha=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.particle=!1,this.particleSize=1,this.instances=!1,this.visible=!0,this.enabled=!0,this.needsUpdate=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var a=e[t];if(void 0!==a){if(t in this){var r=this[t];r instanceof THREE.Color&&a instanceof THREE.Color?r.copy(a):r instanceof THREE.Color?r.set(a):r instanceof THREE.Vector2&&a instanceof THREE.Vector2?r.copy(a):r instanceof THREE.Vector3&&a instanceof THREE.Vector3?r.copy(a):this[t]=a}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrcColor=this.blendSrcColor,e.blendDstColor=this.blendDstColor,e.blendSrcAlpha=this.blendSrcAlpha,e.blendDstAlpha=this.blendDstAlpha,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.particle=this.particle,e.particleSize=this.particleSize,e.instances=this.instances,e.visible=this.visible,e},THREE.MaterialIdCount=0,THREE.EmissiveMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.intensity=1,this.map=null,this.lightMap=null,this.lightMapGamma=!1,this.displacementMap=null,this.displacementDirection=THREE.DisplaceByNormal,this.displacementScale=1,this.displacementBias=0,this.displacementNormalScale=1,this.fog=!0,this.vertexColors=!1,this.skinning=!1,this.morphTargets=!1,this.particleSize=1,this.particleSizeAttenuation=!0,this.setValues(e)},THREE.EmissiveMaterial.prototype=Object.create(THREE.Material.prototype),THREE.EmissiveMaterial.prototype.clone=function(){var e=new THREE.EmissiveMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.intensity=this.intensity,e.map=this.map,e.lightMap=this.lightMap,e.lightMapGamma=this.lightMapGamma,e.displacementMap=this.displacementMap,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias,e.displacementNormalScale=this.displacementNormalScale,e.fog=this.fog,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.particleSize=this.particleSize,e.particleSizeAttenuation=this.particleSizeAttenuation,e},THREE.PhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.parallax=!1,this.parallaxScale=1,this.parallaxRefineSteps=3,this.wrapAround=!1,this.wrapAroundSkin=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.lightMapGamma=!1,this.displacementMap=null,this.displacementDirection=THREE.DisplaceByNormal,this.displacementScale=1,this.displacementBias=0,this.displacementNormalScale=1,this.glossMap=null,this.specularMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalGlossMap=null,this.normalScale=new THREE.Vector2(1,1),this.bumpDetailMap=null,this.normalDetailMap=null,this.detailScale=1,this.detailRepeat=new THREE.Vector2(1,1),this.fog=!0,this.vertexColors=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.lights=!0,this.forceShadow=!1,this.wireframe=!1,this.wireframeDiffuse=new THREE.Color(0),this.wireframeSpecular=new THREE.Color(0),this.wireframeShininess=0,this.wireframeThickness=1.5,this.setValues(e)},THREE.PhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PhongMaterial.prototype.clone=function(){var e=new THREE.PhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.parallax=this.parallax,e.parallaxScale=this.parallaxScale,e.parallaxRefineSteps=this.parallaxRefineSteps,e.wrapAround=this.wrapAround,e.wrapAroundSkin=this.wrapAroundSkin,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.lightMapGamma=this.lightMapGamma,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.displacementMap=this.displacementMap,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias,e.displacementNormalScale=this.displacementNormalScale,e.normalMap=this.normalMap,e.normalGlossMap=this.normalGlossMap,e.normalScale.copy(this.normalScale),e.bumpDetailMap=this.bumpDetailMap,e.normalDetailMap=this.normalDetailMap,e.detailScale=this.detailScale,e.detailRepeat.copy(this.detailRepeat),e.glossMap=this.glossMap,e.specularMap=this.specularMap,e.fog=this.fog,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e.lights=this.lights,e.forceShadow=this.forceShadow,e.wireframe=this.wireframe,e.wireframeDiffuse.copy(this.wireframeDiffuse),e.wireframeSpecular.copy(this.wireframeSpecular),e.wireframeShininess=this.wireframeShininess,e.wireframeThickness=this.wireframeThickness,e},THREE.DynamicParticleMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.intensity=1,this.map=null,this.fog=!0,this.vertexColors=!1,this.particle=!0,this.particleSize=1,this.particleSizeAttenuation=!0,this.time=0,this.timeRange=1,this.timeOffset=0,this.numFrames=1,this.frameDuration=1,this.interpolateFrames=!0,this.additiveFactor=0,this.lights=!1,this.setValues(e)},THREE.DynamicParticleMaterial.prototype=Object.create(THREE.Material.prototype),THREE.DynamicParticleMaterial.prototype.clone=function(){var e=new THREE.DynamicParticleMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.intensity=this.intensity,e.map=this.map,e.fog=this.fog,e.vertexColors=this.vertexColors,e.particleSize=this.particleSize,e.particleSizeAttenuation=this.particleSizeAttenuation,e.time=this.time,e.timeRange=this.timeRange,e.timeOffset=this.timeOffset,e.numFrames=this.numFrames,e.frameDuration=this.frameDuration,e.interpolateFrames=this.interpolateFrames,e.additiveFactor=this.additiveFactor,e.lights=this.lights,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.extensions={},this.attributes=null,this.fog=!1,this.lights=!1,this.vertexColors=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.forceShadow=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.defines=this.defines,e.extensions=this.extensions,e.attributes=this.attributes,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e.forceShadow=this.forceShadow,e},THREE.SpriteMaterial=function(e){void 0===e&&(e={});var t=void 0!==e.billboard?e.billboard:!0,a=void 0!==e.antialias?e.antialias:!1,r=void 0!==e.sdf?e.sdf:!0,i=void 0!==e.fog?e.fog:!0,o=void 0!==e.alphaTest?e.alphaTest:a?.01:.5,n=void 0!==e.epsilon?e.epsilon:.1,s=void 0!==e.fogDensity?e.fogDensity:.015,l=void 0!==e.fogColor?e.fogColor:0,d=void 0!==e.color?e.color:16777215,h=THREE.SpriteShader,c={BILLBOARD:t,ANTIALIAS:a,SDF:r,FOG:i},u=THREE.UniformsUtils.clone(h.uniforms);u.map.value=e.textureAtlas,u.alphaTest.value=o,u.epsilon.value=n,u.fogDensity.value=s,u.fogColor.value.setHex(l),u.baseColor.value.setHex(d),a&&(e.transparent=!0),e.alphaTest=o,e.vertexShader=h.vertexShader,e.fragmentShader=h.fragmentShader,e.extensions=h.extensions,e.uniforms=u,THREE.ShaderMaterial.call(this,e),this.defines=c,this.uniforms=u},THREE.SpriteMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.Texture=function(e,t,a,r,i,o,n,s){this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mipmapCount=0,this.wrapS=void 0!==t?t:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==a?a:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r?r:THREE.LinearFilter,this.minFilter=void 0!==i?i:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==s?s:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==n?n:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},getWidth:function(){return"VIDEO"===this.image.tagName?this.image.videoWidth:this.image.width}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,a,r,i,o,n,s,l,d){THREE.Texture.call(this,null,o,n,s,l,r,i,d),this.image={width:t,height:a},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,a,r,i,o,n,s,l,d){THREE.Texture.call(this,null,o,n,s,l,r,i,d),this.image={data:e,width:t,height:a}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.ShaderChunk={},THREE.UniformsLib={},THREE.ShaderLib={},THREE.UniformsLib.common={map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},brightness:{type:"f",value:1},whitePoint:{type:"f",value:1}},THREE.UniformsLib.displacement={displacementMap:{type:"t",value:null},displacementScaleBias:{type:"v2",value:new THREE.Vector2(1,0)},displacementNormalScale:{type:"f",value:1}},THREE.UniformsLib.bump={bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},bumpDetailMap:{type:"t",value:null}},THREE.UniformsLib.normalmap={normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)},normalDetailMap:{type:"t",value:null}},THREE.UniformsLib.particle={particleSize:{type:"f",value:1},screenWidth:{type:"f",value:1920}},THREE.UniformsLib.fogAtmo={fogColor:{type:"c",value:new THREE.Color(0)},fogStrength:{type:"f",value:.1},fogStart:{type:"f",value:100}},THREE.ShaderChunk.fogAtmoFragmentPars=["#ifdef FOG_ENABLED","uniform vec3 fogColor;","uniform float fogStrength;","uniform float fogStart;","vec3 addFog( vec3 color, float depth ) {","float fogFactor = depth / ( cameraNearFar.y - cameraNearFar.x );","fogFactor *= smoothstep( 0.0, fogStart, depth );","fogFactor = clamp( fogFactor, 0.0, fogStrength );","return mix( color, fogColor, fogFactor );","}","#endif"].join("\n"),THREE.ShaderChunk.linearDepthFragmentPars=["float linearizeDepth( float depth, vec2 cameraNearFar ) {","return -cameraNearFar.y * cameraNearFar.x / ( depth * ( cameraNearFar.y - cameraNearFar.x ) - cameraNearFar.y );","}"].join("\n"),THREE.ShaderChunk.color_pars_fragment=["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),THREE.ShaderChunk.color_fragment=["#ifdef USE_COLOR","mgl_FragColor.rgb *= vColor;","#endif"].join("\n"),THREE.ShaderChunk.color_pars_vertex=["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),THREE.ShaderChunk.color_vertex=["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),THREE.ShaderChunk.map_pars_vertex=["#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined ( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) || defined( USE_DISPLACEMENTMAP ) )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),THREE.ShaderChunk.map_pars_fragment=["#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) || defined( USE_DISPLACEMENTMAP ) )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),THREE.ShaderChunk.map_vertex=["#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_BUMPDETAILMAP ) || defined( USE_NORMALDETAILMAP ) || defined( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) || defined( USE_DISPLACEMENTMAP ) )","vec2 transformedUV = uv * offsetRepeat.zw + offsetRepeat.xy;","vUv = transformedUV;","#endif"].join("\n"),THREE.ShaderChunk.map_fragment=["#ifdef USE_MAP","vec2 texCoord;","#ifdef PARTICLE","texCoord = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","#else","texCoord = uvCoord;","#endif","vec4 texelColor = texture2D( map, texCoord );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","mgl_FragColor = mgl_FragColor * texelColor;","#endif"].join("\n"),THREE.ShaderChunk.specularmap_pars_fragment=["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),THREE.ShaderChunk.specularmap_fragment=["vec3 specularMapColor;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, uvCoord );","specularMapColor = texelSpecular.rgb;","#else","specularMapColor = vec3( 1.0 );","#endif"].join("\n"),THREE.ShaderChunk.glossmap_pars_fragment=["#ifdef USE_GLOSSMAP","uniform sampler2D glossMap;","#endif"].join("\n"),THREE.ShaderChunk.lightmap_pars_fragment=["#ifdef USE_LIGHTMAP","uniform sampler2D lightMap;","#endif"].join("\n"),THREE.ShaderChunk.lightmap_fragment=["#ifdef USE_LIGHTMAP","float lightMapIntensity = texture2D( lightMap, uvCoord ).r;","#ifdef LIGHTMAP_GAMMA","lightMapIntensity *= lightMapIntensity;","#endif","#else","float lightMapIntensity = 1.0;","#endif"].join("\n"),THREE.ShaderChunk.bumpmap_pars_fragment=["#ifdef USE_BUMPDETAILMAP","uniform sampler2D bumpDetailMap;","#endif","#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","#endif"].join("\n"),THREE.ShaderChunk.derivativemap_pars_fragment=["#if defined( USE_BUMPMAP ) || defined( USE_DISPLACEMENTMAP )","vec2 dHdxy_fwd( const in sampler2D sourceMap, const in vec2 texCoord, const in float sourceScale ) {","vec2 dSTdx = dFdx( texCoord );","vec2 dSTdy = dFdy( texCoord );","float Hll = sourceScale * texture2D( sourceMap, texCoord ).x;","float dBx = sourceScale * texture2D( sourceMap, texCoord + dSTdx ).x - Hll;","float dBy = sourceScale * texture2D( sourceMap, texCoord + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( const in vec3 surf_pos, const in vec3 surf_norm, const in vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),THREE.ShaderChunk.normalmap_pars_fragment=["#ifdef USE_NORMALDETAILMAP","uniform sampler2D normalDetailMap;","#endif","#if defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( USE_NORMALDETAILMAP )","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( const in vec3 eye_pos, const in vec3 surf_norm, const in vec3 normal_pixel, const in vec2 texCoord ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( texCoord.st );","vec2 st1 = dFdy( texCoord.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = normal_pixel * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),THREE.ShaderChunk.parallax_pars_fragment=["#if defined( USE_PARALLAX ) && defined( USE_BUMPMAP )","uniform float parallaxScale;","vec2 computeParallaxProjection( const in vec3 surf_pos, const in vec3 surf_norm, const in vec3 surf_view, const in vec2 texCoord ) {","vec2 TexDx = dFdx( texCoord );","vec2 TexDy = dFdy( texCoord );","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 vR1 = cross( vSigmaY, vN );","vec3 vR2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, vR1 );","vec3 vV = surf_view;","vec2 vProjVscr = ( 1.0 / fDet ) * vec2( dot( vR1, vV ), dot( vR2, vV ) );","vec2 vProjVtex = TexDx * vProjVscr.x + TexDy * vProjVscr.y;","return vProjVtex;","}","#endif"].join("\n"),THREE.ShaderChunk.parallax_fragment=["#if defined( USE_PARALLAX ) && defined( USE_BUMPMAP )","float height = parallaxScale * ( 2.0 * texture2D( bumpMap, vUv ).x - 1.0 );","vec2 parallaxProjection = computeParallaxProjection( vViewPosition, normal, eyeVector, vUv );","vec2 uvOffset = parallaxProjection * height;","uvCoord += uvOffset;","#ifdef PARALLAX_REFINE_STEPS","for ( int i = 0; i < PARALLAX_REFINE_STEPS; i ++ ) {","height += parallaxScale * ( texture2D( bumpMap, uvCoord ).x - 1.0 );","uvOffset = parallaxProjection * height;","uvCoord = vUv + uvOffset;","}","#endif","#endif"].join("\n"),THREE.ShaderChunk.instances_pars_vertex=["#if defined( USE_INSTANCES )","attribute vec3 offset;","attribute vec4 rotation;","vec3 rotateVectorByQuaternion( vec3 v, vec4 q ) {","return v + 2.0 * cross( q.xyz, cross( q.xyz, v ) + q.w * v );","}","#endif"].join("\n"),THREE.ShaderChunk.begin_pos_vertex=["vec4 transformedPosition = vec4( position, 1.0 );"].join("\n"),THREE.ShaderChunk.displacementmap_pars_fragment=["#ifdef USE_DISPLACEMENTMAP","uniform sampler2D displacementMap;","uniform float displacementNormalScale;","#endif"].join("\n"),THREE.ShaderChunk.displacement_pars_vertex=["#ifdef USE_DISPLACEMENTMAP","uniform sampler2D displacementMap;","uniform vec2 displacementScaleBias;","#endif"].join("\n"),THREE.ShaderChunk.displacement_vertex=["#ifdef USE_DISPLACEMENTMAP","vec3 displacementValue = texture2D( displacementMap, transformedUV ).xyz;","float scaledDisplacement = displacementValue.x * displacementScaleBias.x + displacementScaleBias.y;","vec3 displaced = transformedPosition.xyz;","#ifdef DISPLACE_BY_POSITION","displaced += normalize( transformedPosition.xyz ) * scaledDisplacement;","#endif","#ifdef DISPLACE_BY_NORMAL","displaced += normalize( normal ) * scaledDisplacement;","#endif","transformedPosition.xyz = displaced;","#endif"].join("\n"),THREE.ShaderChunk.skinning_pars_vertex=["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),THREE.ShaderChunk.skinbase_vertex=["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),THREE.ShaderChunk.skinning_vertex=["#ifdef USE_SKINNING","vec4 skinned  = boneMatX * transformedPosition * skinWeight.x;","skinned 	  += boneMatY * transformedPosition * skinWeight.y;","transformedPosition = skinned;","#endif"].join("\n"),THREE.ShaderChunk.morphtarget_pars_vertex=["#ifdef USE_MORPHTARGETS","uniform float morphTargetInfluences[ 4 ];","#endif"].join("\n"),THREE.ShaderChunk.morphtarget_vertex=["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - transformedPosition.xyz ) * morphTargetInfluences[ 0 ];","#if MAX_MORPHTARGETS > 1","morphed += ( morphTarget1 - transformedPosition.xyz ) * morphTargetInfluences[ 1 ];","#if MAX_MORPHTARGETS > 2","morphed += ( morphTarget2 - transformedPosition.xyz ) * morphTargetInfluences[ 2 ];","#if MAX_MORPHTARGETS > 3","morphed += ( morphTarget3 - transformedPosition.xyz ) * morphTargetInfluences[ 3 ];","#endif","#endif","#endif","morphed += transformedPosition.xyz;","transformedPosition.xyz = morphed;","#endif"].join("\n"),THREE.ShaderChunk.end_pos_vertex=["vec4 mvPosition;","#if defined( USE_INSTANCES )","transformedPosition.xyz = rotateVectorByQuaternion( transformedPosition.xyz, rotation ) + offset;","#endif","mvPosition = modelViewMatrix * transformedPosition;","gl_Position = projectionMatrix * mvPosition;"].join("\n"),THREE.ShaderChunk.begin_nor_vertex=["vec3 transformedNormal = normal;"].join("\n"),THREE.ShaderChunk.morphnormal_vertex=["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - transformedNormal ) * morphTargetInfluences[ 0 ];","#if MAX_MORPHNORMALS > 1","morphedNormal +=  ( morphNormal1 - transformedNormal ) * morphTargetInfluences[ 1 ];","#if MAX_MORPHNORMALS > 2","morphedNormal +=  ( morphNormal2 - transformedNormal ) * morphTargetInfluences[ 2 ];","#if MAX_MORPHNORMALS > 3","morphedNormal +=  ( morphNormal3 - transformedNormal ) * morphTargetInfluences[ 3 ];","#endif","#endif","#endif","morphedNormal += transformedNormal;","transformedNormal = morphedNormal;","#endif"].join("\n"),THREE.ShaderChunk.skinnormal_vertex=["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","vec4 skinnedNormal = skinMatrix * vec4( transformedNormal, 0.0 );","transformedNormal = skinnedNormal.xyz;","#endif"].join("\n"),THREE.ShaderChunk.end_nor_vertex=["#if defined( USE_INSTANCES )","transformedNormal = rotateVectorByQuaternion( transformedNormal, rotation );","#endif","#ifdef FLIP_SIDED","transformedNormal = -transformedNormal;","#endif","transformedNormal = normalize( normalMatrix * transformedNormal );"].join("\n"),THREE.ShaderChunk.particle_pars_vertex=["#ifdef PARTICLE","uniform float particleSize;","uniform float screenWidth;","#endif"].join("\n"),THREE.ShaderChunk.particle_vertex=["#ifdef PARTICLE","#ifdef USE_PARTICLE_SIZEATTENUATION","vec4 projectedCorner = projectionMatrix * vec4( 0.5 * particleSize, 0.5 * particleSize, mvPosition.z, mvPosition.w );","gl_PointSize = screenWidth * projectedCorner.x / projectedCorner.w;","#else","gl_PointSize = particleSize;","#endif","#endif"].join("\n"),THREE.ShaderChunk.utils_pars_fragment=["float saturate( float x ) {","return clamp( x, 0.0, 1.0 );","}","vec3 saturate( vec3 x ) {","return clamp( x, vec3( 0.0 ), vec3( 1.0 ) );","}"].join("\n"),THREE.ShaderChunk.polylights_pars_fragment=["const int   NUM_SAMPLES = 8;","const float LUT_SIZE64  = 64.0;","const float LUT_SCALE64 = ( LUT_SIZE64 - 1.0 ) / LUT_SIZE64;","const float LUT_BIAS64  = 0.5 / LUT_SIZE64;","const float LUT_SIZE32  = 32.0;","const float LUT_SCALE32 = ( LUT_SIZE32 - 1.0 ) / LUT_SIZE32;","const float LUT_BIAS32  = 0.5 / LUT_SIZE32;","const float PI = 3.14159265;","#if __VERSION__ < 300","mat3 transpose( mat3 v ) {","mat3 tmp;","tmp[0] = vec3( v[0].x, v[1].x, v[2].x );","tmp[1] = vec3( v[0].y, v[1].y, v[2].y );","tmp[2] = vec3( v[0].z, v[1].z, v[2].z );","return tmp;","}","#endif","vec3 mul( mat3 m, vec3 v ) {","return m * v;","}","mat3 mul( mat3 m1, mat3 m2 ) {","return m1 * m2;","}","float IntegrateEdge( vec3 v1, vec3 v2 ) {","float cosTheta = dot( v1, v2 );","cosTheta = clamp( cosTheta, -0.9999, 0.9999 );","float theta = acos( cosTheta );","float res = cross( v1, v2 ).z * theta / sin( theta );","return res;","}","void ClipQuadToHorizon( inout vec3 L[5], out int n ) {","int config = 0;","if ( L[0].z > 0.0 ) config += 1;","if ( L[1].z > 0.0 ) config += 2;","if ( L[2].z > 0.0 ) config += 4;","if ( L[3].z > 0.0 ) config += 8;","n = 0;","if ( config == 0 ) {","} else if ( config == 1 ) {","n = 3;","L[1] = -L[1].z * L[0] + L[0].z * L[1];","L[2] = -L[3].z * L[0] + L[0].z * L[3];","} else if ( config == 2 ) {","n = 3;","L[0] = -L[0].z * L[1] + L[1].z * L[0];","L[2] = -L[2].z * L[1] + L[1].z * L[2];","} else if ( config == 3 ) {","n = 4;","L[2] = -L[2].z * L[1] + L[1].z * L[2];","L[3] = -L[3].z * L[0] + L[0].z * L[3];","} else if ( config == 4 ) {","n = 3;","L[0] = -L[3].z * L[2] + L[2].z * L[3];","L[1] = -L[1].z * L[2] + L[2].z * L[1];","} else if ( config == 5 ) {","n = 0;","} else if ( config == 6 ) {","n = 4;","L[0] = -L[0].z * L[1] + L[1].z * L[0];","L[3] = -L[3].z * L[2] + L[2].z * L[3];","} else if ( config == 7 ) {","n = 5;","L[4] = -L[3].z * L[0] + L[0].z * L[3];","L[3] = -L[3].z * L[2] + L[2].z * L[3];","} else if ( config == 8 ) {","n = 3;","L[0] = -L[0].z * L[3] + L[3].z * L[0];","L[1] = -L[2].z * L[3] + L[3].z * L[2];","L[2] =  L[3];","} else if ( config == 9 ) {","n = 4;","L[1] = -L[1].z * L[0] + L[0].z * L[1];","L[2] = -L[2].z * L[3] + L[3].z * L[2];","} else if ( config == 10 ) {","n = 0;","} else if ( config == 11 ) {","n = 5;","L[4] = L[3];","L[3] = -L[2].z * L[3] + L[3].z * L[2];","L[2] = -L[2].z * L[1] + L[1].z * L[2];","} else if ( config == 12 ) {","n = 4;","L[1] = -L[1].z * L[2] + L[2].z * L[1];","L[0] = -L[0].z * L[3] + L[3].z * L[0];","} else if ( config == 13 ) {","n = 5;","L[4] = L[3];","L[3] = L[2];","L[2] = -L[1].z * L[2] + L[2].z * L[1];","L[1] = -L[1].z * L[0] + L[0].z * L[1];","} else if ( config == 14 ) {","n = 5;","L[4] = -L[0].z * L[3] + L[3].z * L[0];","L[0] = -L[0].z * L[1] + L[1].z * L[0];","} else if ( config == 15 ) {","n = 4;","}","if ( n == 3 ) L[3] = L[0];","if ( n == 4 ) L[4] = L[0];","}","mat3 computeOrthoBasis( float dotNV, vec3 N, vec3 V ) {","vec3 T1, T2;","T1 = normalize( V - N * dotNV );","T2 = cross( N, T1 );","return transpose( mat3( T1, T2, N ) );","}","#ifdef POLY_TEXTURE","vec3 FetchDiffuseFilteredTexture( sampler2D texLightFiltered, float texSize, float texBias, vec3 p1_, vec3 p2_, vec3 p3_, vec3 p4_ ) {","vec3 V1 = p2_ - p1_;","vec3 V2 = p4_ - p1_;","vec3 planeOrtho = cross( V1, V2 );","float planeAreaSquared = dot( planeOrtho, planeOrtho );","float planeDistxPlaneArea = dot( planeOrtho, p1_ );","vec3 P = planeDistxPlaneArea * planeOrtho / planeAreaSquared - p1_;","float dot_V1_V2 = dot( V1, V2 );","float inv_dot_V1_V1 = 1.0 / dot( V1, V1 );","vec3 V2_ = V2 - V1 * dot_V1_V2 * inv_dot_V1_V1;","vec2 Puv;","Puv.y = dot( V2_, P ) / dot( V2_, V2_ );","Puv.x = dot( V1, P ) * inv_dot_V1_V1 - dot_V1_V2 * inv_dot_V1_V1 * Puv.y;","float d = abs( planeDistxPlaneArea ) / pow( planeAreaSquared, 0.75 );","#ifdef SUPPORTS_TEXTURE_LOD","vec3 texColor = texture2DLodEXT( texLightFiltered, vec2( 0.125, 0.125 ) + 0.75 * Puv, log( texSize * d ) / log( 3.0 ) + texBias ).rgb;","#else","vec3 texColor = texture2D( texLightFiltered, vec2( 0.125, 0.125 ) + 0.75 * Puv, log( texSize * d ) / log( 3.0 ) + texBias ).rgb;","#endif","texColor.rgb *= texColor.rgb;","return texColor;","}","vec3 LTC_Evaluate_opt_tex( vec3 P, mat3 Minv, vec3 points[4], bool twoSided, sampler2D texFilteredMap, float texSize, float texBias ) {","vec3 L[ 5 ];","L[ 0 ] = mul( Minv, points[ 0 ] - P );","L[ 1 ] = mul( Minv, points[ 1 ] - P );","L[ 2 ] = mul( Minv, points[ 2 ] - P );","L[ 3 ] = mul( Minv, points[ 3 ] - P );","vec3 textureLight = FetchDiffuseFilteredTexture( texFilteredMap, texSize, texBias, L[0], L[1], L[2], L[3] );","int n;","ClipQuadToHorizon( L, n );","if ( n == 0 ) return vec3( 0.0 );","L[0] = normalize( L[0] );","L[1] = normalize( L[1] );","L[2] = normalize( L[2] );","L[3] = normalize( L[3] );","L[4] = normalize( L[4] );","float sum = 0.0;","sum += IntegrateEdge( L[0], L[1] );","sum += IntegrateEdge( L[1], L[2] );","sum += IntegrateEdge( L[2], L[3] );","if ( n >= 4 ) sum += IntegrateEdge( L[3], L[4] );","if ( n == 5 ) sum += IntegrateEdge( L[4], L[0] );","sum = twoSided ? abs( sum ) : max( 0.0, -sum );","vec3 Lo_i = vec3( sum );","Lo_i *= textureLight;","return Lo_i;","}","vec3 LTC_Evaluate_tex( vec3 N, vec3 V, vec3 P, mat3 Minv, vec3 points[4], bool twoSided, sampler2D texFilteredMap, float texSize, float texBias ) {","vec3 T1, T2;","T1 = normalize( V - N * dot( V, N ) );","T2 = cross( N, T1 );","Minv = mul( Minv, transpose( mat3( T1, T2, N ) ) );","vec3 L[ 5 ];","L[ 0 ] = mul( Minv, points[ 0 ] - P );","L[ 1 ] = mul( Minv, points[ 1 ] - P );","L[ 2 ] = mul( Minv, points[ 2 ] - P );","L[ 3 ] = mul( Minv, points[ 3 ] - P );","vec3 textureLight = FetchDiffuseFilteredTexture( texFilteredMap, texSize, texBias, L[0], L[1], L[2], L[3] );","int n;","ClipQuadToHorizon( L, n );","if ( n == 0 ) return vec3( 0, 0, 0 );","L[0] = normalize( L[0] );","L[1] = normalize( L[1] );","L[2] = normalize( L[2] );","L[3] = normalize( L[3] );","L[4] = normalize( L[4] );","float sum = 0.0;","sum += IntegrateEdge( L[0], L[1] );","sum += IntegrateEdge( L[1], L[2] );","sum += IntegrateEdge( L[2], L[3] );","if ( n >= 4 ) sum += IntegrateEdge( L[3], L[4] );","if ( n == 5 ) sum += IntegrateEdge( L[4], L[0] );","sum = twoSided ? abs( sum ) : max( 0.0, -sum );","vec3 Lo_i = vec3( sum, sum, sum );","Lo_i *= textureLight;","return Lo_i;","}","#endif","vec3 LTC_Evaluate_opt( vec3 P, mat3 Minv, vec3 points[4], bool twoSided ) {","vec3 L[ 5 ];","L[ 0 ] = mul( Minv, points[ 0 ] - P );","L[ 1 ] = mul( Minv, points[ 1 ] - P );","L[ 2 ] = mul( Minv, points[ 2 ] - P );","L[ 3 ] = mul( Minv, points[ 3 ] - P );","int n;","ClipQuadToHorizon( L, n );","if ( n == 0 ) return vec3( 0.0 );","L[0] = normalize( L[0] );","L[1] = normalize( L[1] );","L[2] = normalize( L[2] );","L[3] = normalize( L[3] );","L[4] = normalize( L[4] );","float sum = 0.0;","sum += IntegrateEdge( L[0], L[1] );","sum += IntegrateEdge( L[1], L[2] );","sum += IntegrateEdge( L[2], L[3] );","if ( n >= 4 ) sum += IntegrateEdge( L[3], L[4] );","if ( n == 5 ) sum += IntegrateEdge( L[4], L[0] );","sum = twoSided ? abs( sum ) : max( 0.0, -sum );","vec3 Lo_i = vec3( sum );","return Lo_i;","}","vec3 LTC_Evaluate( vec3 N, vec3 V, vec3 P, mat3 Minv, vec3 points[4], bool twoSided ) {","vec3 T1, T2;","T1 = normalize( V - N * dot( V, N ) );","T2 = cross( N, T1 );","Minv = mul( Minv, transpose( mat3( T1, T2, N ) ) );","vec3 L[ 5 ];","L[ 0 ] = mul( Minv, points[ 0 ] - P );","L[ 1 ] = mul( Minv, points[ 1 ] - P );","L[ 2 ] = mul( Minv, points[ 2 ] - P );","L[ 3 ] = mul( Minv, points[ 3 ] - P );","int n;","ClipQuadToHorizon( L, n );","if ( n == 0 ) return vec3( 0, 0, 0 );","L[0] = normalize( L[0] );","L[1] = normalize( L[1] );","L[2] = normalize( L[2] );","L[3] = normalize( L[3] );","L[4] = normalize( L[4] );","float sum = 0.0;","sum += IntegrateEdge( L[0], L[1] );","sum += IntegrateEdge( L[1], L[2] );","sum += IntegrateEdge( L[2], L[3] );","if ( n >= 4 ) sum += IntegrateEdge( L[3], L[4] );","if ( n == 5 ) sum += IntegrateEdge( L[4], L[0] );","sum = twoSided ? abs( sum ) : max( 0.0, -sum );","vec3 Lo_i = vec3( sum, sum, sum );","return Lo_i;","}"].join("\n"),THREE.ShaderChunk.skin_pars_fragment=["vec3 PSSFitFunction( in float NdotL, in float r ) {","const vec3 a0 = vec3( 0.0605, 0.2076, 0.2243 );","const vec3 a1 = vec3( 0.0903, 0.1687, 0.2436 );","const vec3 a2 = vec3( -0.0210, -0.0942, -0.1116 );","const vec3 a3 = vec3( 0.6896, 0.6762, 0.6480 );","const vec3 a4 = vec3( -0.1110, -0.5023, -0.6703 );","const vec3 a5 = vec3( 0.8177, 0.9119, 0.9209 );","vec3 t = vec3( NdotL ) * ( a0 * r + a1 ) + ( a2 * r + a3 );","vec3 fade = saturate( a4 * r + a5 );","return t * t * t * fade + saturate( NdotL ) * ( 1.0 - fade );","}"].join("\n"),THREE.ShaderChunk.tonemappingFragmentPars=["#ifdef TONEMAPPING","const vec3 GAMMA = vec3( 1.0 / 2.2 );","const vec3 GAMMA_INVERSE = vec3( 2.2 );","const vec3 LUMA = vec3( 0.2126, 0.7152, 0.0722 );","uniform float brightness;","uniform float whitePoint;","#ifdef TONEMAP_UNCHARTED","const float A = 0.15;","const float B = 0.50;","const float C = 0.10;","const float D = 0.20;","const float E = 0.02;","const float F = 0.30;","const float W = 11.2;","vec3 Uncharted2Tonemap( vec3 x ) {","return ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;","}","vec3 Uncharted2TonemapInverse( vec3 x ) {","return -( 1.66667 * ( x - 0.0333333 ) ) / ( x - 0.933333 ) + ( 0.0111111 * sqrt( 19260.0 * x * x + 1524.0 * x + 25.0 ) ) / ( x - 0.933333 );","}","#endif","vec3 inverseTonemapping( vec3 inColor, float inBrightness, float inWhitePoint ) {","vec3 outColor = inColor;","#if defined( TONEMAP_SIMPLE )","outColor *= outColor;","#elif defined( TONEMAP_LINEAR )","outColor = pow( outColor, GAMMA_INVERSE );","#elif defined( TONEMAP_REINHARD )","outColor = pow( outColor, GAMMA_INVERSE );","outColor = outColor / ( 1.0 - outColor );","#elif defined( TONEMAP_REINHARD_LUMA )","float toneMappedLuma = dot( outColor, LUMA );","float luma = toneMappedLuma / ( 1.0 - toneMappedLuma );","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA_INVERSE );","outColor *= luma / toneMappedLuma;","#elif defined( TONEMAP_REINHARD_WHITE )","float whiteK = 2.0 * inWhitePoint;","whiteK *= whiteK;","float toneMappedLuma = dot( outColor, LUMA );","float y1 = 1.0 - toneMappedLuma;","float luma = ( - y1 + sqrt( y1 * y1 + 4.0 * toneMappedLuma * whiteK ) ) / ( 2.0 * whiteK );","outColor = pow( outColor, GAMMA_INVERSE );","outColor *= luma / toneMappedLuma;","#elif defined( TONEMAP_FILMIC )","outColor = -( 0.137097 * ( outColor - 0.294118 ) ) / ( outColor - 1.0 ) - ( 0.00360656 * sqrt( 701.0 * outColor * outColor - 106.0 * outColor + 125.0 ) ) / ( outColor - 1.0 );","outColor += 0.004;","outColor = max( outColor, vec3( 0.0 ) );","#elif defined( TONEMAP_FILMIC_2015 )","float iva = 1.425 * inWhitePoint + 0.05;","float inverseWhitePoint = ( ( inWhitePoint * iva + 0.004 ) / ( ( inWhitePoint * ( iva + 0.55 ) + 0.0491 ) ) ) - 0.0821;","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA_INVERSE );","outColor = outColor * inverseWhitePoint + 0.0821;","outColor = - ( 0.210526 * ( outColor - 0.0833333 ) ) / ( outColor - 1.0 ) - ( 0.00110957 * sqrt( 8013.0 * outColor * outColor + 24267.0 * outColor - 2030.0 ) ) / ( outColor - 1.0 );","outColor = max( outColor, vec3( 0.0 ) );","#elif defined( TONEMAP_PHOTOGRAPHIC )","const float exposureBias = 3.0;","const float saturationBias = 1.3;","outColor = pow( outColor, vec3( 2.2 / saturationBias ) );","outColor = - ( log( 1.0 - outColor ) / ( exposureBias * log( 2.0 ) ) );","outColor = max( outColor, vec3( 0.0 ) );","#elif defined( TONEMAP_UNCHARTED )","float exposureBias = 2.0;","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA_INVERSE );","outColor *= Uncharted2Tonemap( vec3( W * inWhitePoint ) );","outColor = Uncharted2TonemapInverse( outColor );","outColor /= exposureBias;","outColor = max( outColor, vec3( 0.0 ) );","#endif","outColor /= inBrightness;","return outColor;","}","vec3 applyTonemapping( vec3 inColor, float inBrightness, float inWhitePoint ) {","vec3 outColor = inColor * inBrightness;","#if defined( TONEMAP_SIMPLE )","outColor = sqrt( max( outColor, vec3( 0.0 ) ) );","#elif defined( TONEMAP_LINEAR )","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA );","#elif defined( TONEMAP_REINHARD )","outColor = outColor / ( 1.0 + outColor );","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA );","#elif defined( TONEMAP_REINHARD_LUMA )","float luma = dot( outColor, LUMA );","float toneMappedLuma = luma / ( 1.0 + luma );","outColor *= toneMappedLuma / luma;","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA );","#elif defined( TONEMAP_REINHARD_WHITE )","float white = 2.0 * inWhitePoint;","float luma = dot( outColor, LUMA );","float toneMappedLuma = luma * ( 1.0 + luma / ( white * white ) ) / ( 1.0 + luma );","outColor *= toneMappedLuma / luma;","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA );","#elif defined( TONEMAP_FILMIC )","vec3 x = max( vec3( 0.0 ), outColor - 0.004 );","outColor = ( x * ( 6.2 * x + 0.5 ) ) / ( x * ( 6.2 * x + 1.7 ) + 0.06 );","outColor = max( outColor, vec3( 0.0 ) );","#elif defined( TONEMAP_FILMIC_2015 )","vec4 vh = vec4( outColor, inWhitePoint );","vec4 va = ( 1.425 * vh ) + 0.05;","vec4 vf = ( ( vh * va + 0.004 ) / ( ( vh * ( va + 0.55 ) + 0.0491 ) ) ) - 0.0821;","outColor = vf.rgb / vf.www;","outColor = pow( max( outColor, vec3( 0.0 ) ), GAMMA );","#elif defined( TONEMAP_PHOTOGRAPHIC )","const float exposureBias = 3.0;","const float saturationBias = 1.3;","outColor = 1.0 - exp2( -exposureBias * outColor );","outColor = pow( max( outColor, vec3( 0.0 ) ), vec3( saturationBias / 2.2 ) );","#elif defined( TONEMAP_UNCHARTED )","float exposureBias = 2.0;","vec3 curr = Uncharted2Tonemap( exposureBias * outColor );","float white = W * inWhitePoint;","vec3 whiteScale = vec3( 1.0 ) / Uncharted2Tonemap( vec3( white ) );","vec3 color = curr * whiteScale;","outColor = pow( max( color, vec3( 0.0 ) ), GAMMA );","#endif","return outColor;","}","#endif"].join("\n"),THREE.ShaderChunk.ditheringFragmentPars=["#ifdef DITHERING_ENABLED","float nrand( vec2 n ) {","return fract( sin( dot( n.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );","}","vec3 applyDithering( vec3 inColor, vec2 rndSeed ) {","float rnd = nrand( rndSeed ) - 0.5;","inColor.rgb += rnd/255.0;","return inColor;","}","#endif"].join("\n"),THREE.ShaderChunk.vertexShaderFullscreenTriangle=["void main() {","gl_Position = vec4( position.xyz, 1.0 );","}"].join("\n"),THREE.ShaderChunk.vertexShaderFullscreenTriangleUV=["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = vec4( position.xyz, 1.0 );","}"].join("\n"),THREE.ShaderChunk.vertexShaderGeometry=["void main() { ","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),THREE.ShaderChunk.fog_pars_fragment=["#ifdef USE_FOG","uniform vec3 fogColor;","#if defined( EXPONENTIAL_FOG )","uniform float fogDensity;","#elif defined( LINEAR_FOG )","uniform vec2 fogNearFar;","#elif defined( ATMOSPHERIC_FOG )","uniform vec2 fogStartStrength;","#endif","#endif"].join("\n"),THREE.ShaderChunk.fog_fragment=["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","#if defined( EXPONENTIAL_FOG )","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#elif defined( LINEAR_FOG )","fogFactor = smoothstep( fogNearFar.x, fogNearFar.y, depth );","#elif defined( ATMOSPHERIC_FOG )","float linearDepth = linearizeDepth( vClipPosition.z / vClipPosition.w, cameraNearFar );","fogFactor = linearDepth / ( cameraNearFar.y - cameraNearFar.x );","fogFactor *= smoothstep( 0.0, fogStartStrength.x, linearDepth );","fogFactor = clamp( fogFactor, 0.0, fogStartStrength.y );","#endif","mgl_FragColor = mix( mgl_FragColor, vec4( fogColor, mgl_FragColor.w ), fogFactor );","#endif"].join("\n"),THREE.ShaderChunk.height_fog_pars_fragment=["#ifdef USE_HEIGHT_FOG","uniform float fogHeight;","uniform float fogVisibilityDistance;","uniform float fogFadeSpeed;","uniform vec3 fogShallowDepthColor;","uniform vec3 fogDeepDepthColor;","uniform vec3 fogRgbExtinctionDistance;","#endif"].join("\n"),THREE.ShaderChunk.height_fog_fragment=["#ifdef USE_HEIGHT_FOG","vec3 u = vertexPositionWS.xyz - cameraPosition;","vec3 w = cameraPosition - vec3( 0.0, fogHeight, 0.0 );","vec3 n = vec3( 0.0, 1.0, 0.0 );","float D = dot( n, u );","float N = -dot( n, w );","float sI = N / D;","vec3 intersectionPosition = cameraPosition + sI * u;","float fogThickness = length( intersectionPosition - vertexPositionWS.xyz );","if ( vertexPositionWS.y > fogHeight ) {","fogThickness = 0.0;","}","float fogThickness2 = intersectionPosition.y - vertexPositionWS.y;","if ( cameraPosition.y < fogHeight ) {","}","float r1 = clamp( fogFadeSpeed * fogThickness / fogVisibilityDistance, 0.0, 1.0 );","vec3 r2 = clamp( fogThickness2 / fogRgbExtinctionDistance, 0.0, 1.0 );","mgl_FragColor.xyz = mix( mix( mgl_FragColor.xyz, fogShallowDepthColor * globalLightFactor, r1 ), fogDeepDepthColor * globalLightFactor, r2 );","#endif"].join("\n"),THREE.ShaderChunk.worldpos_vertex=["#if defined( USE_SHADOWMAP )","vec4 worldPosition = modelMatrix * transformedPosition;","#endif"].join("\n"),THREE.ShaderChunk.area_lights_utils=["#if MAX_AREA_LIGHTS > 0","vec3 projectOnPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {","return point - dot( point - planeCenter, planeNorm ) * planeNorm;","}","bool sideOfPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {","return ( dot( point - planeCenter, planeNorm ) >= 0.0 );","}","vec3 linePlaneIntersect( vec3 lp, vec3 lv, vec3 pc, vec3 pn ) {","return lp + lv * ( dot( pn, pc - lp ) / dot( pn, lv ) );","}","float calculateAttenuation( float dist, float constantAttenuation, float linearAttenuation, float quadraticAttenuation ) {","return ( 1.0 / ( constantAttenuation + linearAttenuation * dist + quadraticAttenuation * dist * dist ) );","}","#endif"].join("\n"),THREE.ShaderChunk.lights_phong_pars_fragment=["#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirectionVS[ MAX_DIR_LIGHTS ];","uniform int directionalLightPars[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirectionVS[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPositionVS[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPHERE_LIGHTS > 0","uniform vec3 sphereLightColor[ MAX_SPHERE_LIGHTS ];","uniform vec3 sphereLightPositionVS[ MAX_SPHERE_LIGHTS ];","uniform vec3 sphereLightPars[ MAX_SPHERE_LIGHTS ];","#endif","#if MAX_TUBE_LIGHTS > 0","uniform vec3 tubeLightColor[ MAX_TUBE_LIGHTS ];","uniform vec3 tubeLightPosition0VS[ MAX_TUBE_LIGHTS ];","uniform vec3 tubeLightPosition1VS[ MAX_TUBE_LIGHTS ];","uniform vec2 tubeLightPars[ MAX_TUBE_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPositionVS[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirectionVS[ MAX_SPOT_LIGHTS ];","uniform vec4 spotLightPars[ MAX_SPOT_LIGHTS ];","#endif","#if MAX_AREA_LIGHTS > 0","uniform vec3 areaLightColor[ MAX_AREA_LIGHTS ];","uniform vec3 areaLightPosition[ MAX_AREA_LIGHTS ];","uniform vec3 areaLightNormal[ MAX_AREA_LIGHTS ];","uniform vec3 areaLightRight[ MAX_AREA_LIGHTS ];","uniform vec3 areaLightUp[ MAX_AREA_LIGHTS ];","uniform vec4 areaLightPars[ MAX_AREA_LIGHTS ];","uniform vec3 areaLightAttenuation[ MAX_AREA_LIGHTS ];","#ifdef AREA_TEXTURE","uniform sampler2D areaLightTexture[ MAX_AREA_LIGHTS ];","#endif","#endif","#if MAX_POLY_LIGHTS > 0","uniform vec3 polyLightColor[ MAX_POLY_LIGHTS ];","uniform vec3 polyLightPoints[ MAX_POLY_LIGHTS * 4 ];","uniform vec2 polyLightPars[ MAX_POLY_LIGHTS ];","uniform sampler2D samplerLtcMat;","uniform sampler2D samplerLtcMag;","#ifdef POLY_TEXTURE","uniform sampler2D polyLightTexture[ MAX_POLY_LIGHTS ];","uniform vec2 polyLightTexturePars[ MAX_POLY_LIGHTS ];","#endif",THREE.ShaderChunk.polylights_pars_fragment,"#endif","#if MAX_IMAGE_LIGHTS > 0","vec3 fix_cube_lookup( vec3 v, float mipLevelClamp, float cubeSize ) {","float M = max( max( abs( v.x ), abs( v.y ) ), abs( v.z ) );","float scale = 1.0 - exp2( mipLevelClamp ) / cubeSize;","if ( abs( v.x ) != M ) v.x *= scale;","if ( abs( v.y ) != M ) v.y *= scale;","if ( abs( v.z ) != M ) v.z *= scale;","return v;","}","#if !defined( SUPPORTS_TEXTURE_LOD )","uniform samplerCube imageLightTextureMip[ MAX_IMAGE_LIGHTS ];","#endif","uniform samplerCube imageLightTextureDiffuse[ MAX_IMAGE_LIGHTS ];","uniform samplerCube imageLightTextureSpecular[ MAX_IMAGE_LIGHTS ];","uniform vec4 imageLightPars[ MAX_IMAGE_LIGHTS ];","uniform vec3 imageLightPositionWS[ MAX_IMAGE_LIGHTS ];","uniform vec4 imageLightSize[ MAX_IMAGE_LIGHTS ];","#endif","#if MAX_IMAGE_LIGHTS > 0 || defined( USE_HEIGHT_FOG )","uniform mat4 viewInverseMatrix;","#endif","#if MAX_IMAGE_LIGHTS > 0 || MAX_HEMI_LIGHTS > 0 || defined( TRANSPARENT )","vec3 EnvironmentBRDF( float gloss, float dotNV, vec3 rf0 ) {","vec4 t = vec4( 1.0 / 0.96, 0.475, ( 0.0275 - 0.25 * 0.04 ) / 0.96, 0.25 );","t *= vec4( gloss );","t += vec4( 0.0, 0.0, ( 0.015 - 0.75 * 0.04 ) / 0.96, 0.75 );","float a0 = t.x * min( t.y, exp2( -9.28 * dotNV ) ) + t.z;","float a1 = t.w;","return clamp( a0 + rf0 * ( a1 - a0 ), 0.0, 1.0 );","}","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","float SmithGeometryFactor1( vec3 L, vec3 V, vec3 N, float shininess ) {","vec3 H = L + V;","float dotVN = dot( V, N );","float dotVH = dot( V, H );","if ( ( dotVH / dotVN ) <= 0.0 ) return 0.0;","float f = acos( dotVN );","float a = sqrt( 0.5 * shininess + 1.0 ) / tan( f );","float G = 1.0;","if ( a < 1.6 )","G = ( 3.535 * a + 2.181 * a * a ) / ( 1.0 + 2.276 * a + 2.577 * a * a );","return G;","}","float SmithGeometryFactor2( float dotLN, vec3 V, vec3 N, float shininess ) {","float dotNV = max( dot( N, V ), 0.0 );","float a = 1.0 / ( sqrt( 0.7854 * shininess + 1.571 ) );","return 1.0 / ( ( dotLN * ( 1.0 - a ) + a ) * ( dotNV * ( 1.0 - a ) + a ) );","}","float KelemenGeometryFactor( float dotLH ) {","return 1.0 / ( dotLH * dotLH );","}","float GGX_SchlickGeometryFactor_V1( in float k, in float dotNX ) {","return dotNX / ( dotNX * ( 1.0 - k ) + k );","}","float GGX_SchlickGeometryFactor_V2( in float k, in float dotNX ) {","return 1.0 / ( dotNX + sqrt( k + ( 1.0 - k ) * dotNX * dotNX ) );","}","float GGX_Specular( in float m, in vec3 n, in vec3 h, in vec3 v, in vec3 l ) {","float nDotH = saturate( dot( n, h ) );","float nDotL = saturate( dot( n, l ) );","float nDotV = saturate( dot( n, v ) );","float nDotH2 = nDotH * nDotH;","float m2 = pow( m, 4.0 );","float d = m2 / ( pow( nDotH * nDotH * ( m2 - 1.0 ) + 1.0, 2.0 ) );","float v1i = GGX_SchlickGeometryFactor_V2( m2, nDotL );","float v1o = GGX_SchlickGeometryFactor_V2( m2, nDotV );","float vis = v1i * v1o;","return d * vis;","}","float BlinnPhong_Specular( in float shininess, in float dotLN, in float dotNormalHalf, in vec3 eyeVector, in vec3 normal ) {","float geo = SmithGeometryFactor2( dotLN, eyeVector, normal, shininess );","return geo * max( pow( dotNormalHalf, shininess ), 0.0 );","}","float computeSpecOcclusion( float NdotV, float AO, float roughness ) {","return saturate( pow( NdotV + AO, exp2( -16.0 * roughness - 1.0 ) ) - 1.0 + AO );","}","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),THREE.ShaderChunk.lights_phong_fragment=["#ifdef DOUBLE_SIDED","normal *= ( 2.0 * float( gl_FrontFacing ) - 1.0 );","#endif","#if defined( USE_DISPLACEMENTMAP )","normal = perturbNormalArb( vViewPosition, normal, dHdxy_fwd( displacementMap, uvCoord, displacementNormalScale ) );","#endif","#if defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP )","vec4 normalGlossMap = texture2D( normalMap, uvCoord );","#endif","#if defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP )","normal = perturbNormal2Arb( vViewPosition, normal, normalGlossMap.xyz, uvCoord );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( vViewPosition, normal, dHdxy_fwd( bumpMap, uvCoord, bumpScale ) );","#endif","#ifdef USE_BUMPDETAILMAP","normal = perturbNormalArb( vViewPosition, normal, dHdxy_fwd( bumpDetailMap, uvCoord * detailRepeatScale.xy, detailRepeatScale.z ) );","#endif","#if defined( USE_GLOSSMAP )","vec4 glossMap = texture2D( glossMap, uvCoord );","float glossMapValue = exp2( 13.0 * glossMap.x + 1.0 );","#elif defined( USE_NORMALGLOSSMAP )","float glossMapValue = exp2( 13.0 * normalGlossMap.a + 1.0 );","#else","float glossMapValue = 1.0;","#endif","vec3 globalLightFactor = vec3( 0.0 );","#if MAX_IMAGE_LIGHTS > 0 || defined( USE_HEIGHT_FOG )","vec4 vertexPositionWS = viewInverseMatrix * vec4( vertexPosition, 1.0 );","#endif","float shininess = glossMapValue * specular.a;","float specularNormalization = shininess * 0.125 + 0.25;","vec3 specularColor = specular.rgb * specularMapColor;","const float maxShininess = 8192.0;","float gloss = clamp( shininess / maxShininess, 0.0, 1.0 );","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","#if defined( WRAP_AROUND ) && defined( WRAP_AROUND_SKIN )","float curvature = length( fwidth( vNormal.xyz ) ) / length( fwidth( vertexPosition.xyz ) );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec3 lightPosition = pointLightPositionVS[ i ];","vec3 lightVector = lightPosition - vViewPosition;","float lightDistance = length( lightVector );","float attenuation = 1.0;","if ( pointLightDistance[ i ] > 0.0 ) {","float cutoff = 0.3;","float denom = lightDistance / pointLightDistance[ i ] + 1.0;","attenuation = 1.0 / ( denom * denom );","attenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );","attenuation = max( attenuation, 0.0 );","attenuation *= attenuation;","}","lightVector = lightVector / lightDistance;","float dotLNUnclamped = dot( normal, lightVector );","float dotLN = max( dotLNUnclamped, 0.0 );","#ifdef WRAP_AROUND","#ifdef WRAP_AROUND_SKIN","vec3 pointDiffuseWeight = PSSFitFunction( dot( vNormal, lightVector ), curvature );","#else","float pointDiffuseWeightFull = dotLN;","float pointDiffuseWeightHalf = max( 0.25 * dotLNUnclamped + 0.25, 0.0 );","vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#endif","#else","float pointDiffuseWeight = dotLN;","#endif","pointDiffuseWeight *= attenuation;","vec3 diffuseTerm = ( diffuse.rgb * pointLightColor[ i ] ) * pointDiffuseWeight;","vec3 pointHalfVector = normalize( lightVector + eyeVector );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotLH = max( dot( lightVector, pointHalfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","pointSpecular += attenuation * specularNormalization * BlinnPhong_Specular( shininess, dotLN, pointDotNormalHalf, eyeVector, normal ) * ( fresnel * dotLN ) * pointLightColor[ i ];","#elif defined( BRDF_GGX )","pointSpecular += attenuation * GGX_Specular( roughness, normal, pointHalfVector, eyeVector, lightVector ) * ( fresnel * dotLN ) * pointLightColor[ i ];","#endif","#else","float pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );","pointSpecular += attenuation * ( pointSpecularWeight * dotLN ) * ( specularColor * pointLightColor[ i ] );","#endif","#ifdef PHYSICALLY_BASED_SHADING","pointDiffuse  += ( 1.0 - fresnel ) * diffuseTerm;","#else","pointDiffuse  += diffuseTerm;","#endif","globalLightFactor += pointLightColor[ i ] * attenuation;","}","#endif","#if MAX_SPHERE_LIGHTS > 0","vec3 sphereDiffuse  = vec3( 0.0 );","vec3 sphereSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPHERE_LIGHTS; i ++ ) {","vec3 lightPosition = sphereLightPositionVS[ i ];","vec3 lightVectorFull = lightPosition - vViewPosition;","float lightDistance = length( lightVectorFull );","float attenuation = 1.0;","float maxDistance = sphereLightPars[ i ].x;","float lightRadius = sphereLightPars[ i ].y;","if ( maxDistance > 0.0 ) {","float cutoff = 0.3;","float denom = lightDistance / maxDistance + 1.0;","attenuation = 1.0 / ( denom * denom );","attenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );","attenuation = max( attenuation, 0.0 );","attenuation *= attenuation;","}","vec3 lightVector = lightVectorFull / lightDistance;","float dotLNUnclamped = dot( normal, lightVector );","float dotLN = max( dotLNUnclamped, 0.0 );","#ifdef WRAP_AROUND","#ifdef WRAP_AROUND_SKIN","vec3 sphereDiffuseWeight = PSSFitFunction( dot( vNormal, lightVector ), curvature );","#else","float sphereDiffuseWeightFull = dotLN;","float sphereDiffuseWeightHalf = max( 0.25 * dotLNUnclamped + 0.25, 0.0 );","vec3 sphereDiffuseWeight = mix( vec3( sphereDiffuseWeightFull ), vec3( sphereDiffuseWeightHalf ), wrapRGB );","#endif","#else","float sphereDiffuseWeight = dotLN;","#endif","sphereDiffuseWeight *= attenuation;","vec3 diffuseTerm = ( diffuse.rgb * sphereLightColor[ i ] ) * sphereDiffuseWeight;","vec3 specularTerm;","vec3 reflectVS1 = reflect( eyeVector, normal );","vec3 centerToRay = lightVectorFull - dot( lightVectorFull, reflectVS1 ) * reflectVS1;","vec3 closestPoint = lightVectorFull - centerToRay * saturate( lightRadius / length( centerToRay ) );","lightVector = normalize( closestPoint );","dotLN = max( dot( lightVector, normal ), 0.0 );","float alpha = roughness * roughness;","float alphaPrime = saturate( alpha + 0.5 * saturate( lightRadius / lightDistance ) );","float sphereNormalization = alpha / alphaPrime;","sphereNormalization *= sphereNormalization;","vec3 sphereHalfVector = normalize( lightVector + eyeVector );","float sphereDotNormalHalf = max( dot( normal, sphereHalfVector ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotLH = max( dot( lightVector, sphereHalfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","specularTerm = sphereNormalization * attenuation * BlinnPhong_Specular( shininess, dotLN, sphereDotNormalHalf, eyeVector, normal ) * ( fresnel * dotLN ) * sphereLightColor[ i ];","#elif defined( BRDF_GGX )","specularTerm = sphereNormalization * attenuation * GGX_Specular( roughness, normal, sphereHalfVector, eyeVector, lightVector ) * ( fresnel * dotLN ) * sphereLightColor[ i ];","#endif","#else","float sphereSpecularWeight = max( pow( sphereDotNormalHalf, shininess ), 0.0 );","specularTerm = attenuation * ( sphereSpecularWeight * dotLN ) * ( specularColor * sphereLightColor[ i ] );","#endif","#ifdef USE_SHADOWMAP","int shadowIndex = int( sphereLightPars[ i ].z );","if ( i == shadowIndex + SPHERE_INDEX_OFFSET ) {","diffuseTerm  *= occlusion[ i ];","specularTerm *= occlusion[ i ];","}","#endif","sphereSpecular += specularTerm;","#ifdef PHYSICALLY_BASED_SHADING","sphereDiffuse  += ( 1.0 - fresnel ) * diffuseTerm;","#else","sphereDiffuse  += diffuseTerm;","#endif","globalLightFactor += sphereLightColor[ i ] * attenuation;","}","#endif","#if MAX_TUBE_LIGHTS > 0","vec3 tubeDiffuse  = vec3( 0.0 );","vec3 tubeSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_TUBE_LIGHTS; i ++ ) {","vec3 lightPosition0 = tubeLightPosition0VS[ i ];","vec3 lightPosition1 = tubeLightPosition1VS[ i ];","float attenuation = 1.0;","float maxDistance = tubeLightPars[ i ].x;","float lightRadius = tubeLightPars[ i ].y;","vec3 lightVector0 = lightPosition0 - vertexPosition;","vec3 lightVector1 = lightPosition1 - vertexPosition;","float length0 = length( lightVector0 );","float length1 = length( lightVector1 );","float a = saturate( 0.5 * ( dot( normal, lightVector0 ) / length0 + dot( normal, lightVector1 ) / length1 ) );","float b = ( length0 * length1 + dot( lightVector0, lightVector1 ) ) * 0.5 + 1.0;","float dotLN = a;","vec3 tubeDiffuseWeight = vec3( dotLN );","vec3 diffuseTerm = ( diffuse.rgb * tubeLightColor[ i ] ) * tubeDiffuseWeight;","vec3 reflectVS1 = reflect( eyeVector, normal );","vec3 lightVectorD = lightVector1 - lightVector0;","float lengthD = length( lightVectorD );","float dotRD = dot( reflectVS1, lightVectorD );","float ta = dot( reflectVS1, lightVector0 ) * dotRD - dot( lightVector0, lightVectorD );","float tb = lengthD * lengthD - dotRD * dotRD;","float t = ta / tb;","vec3 closestPoint = lightVector0 + saturate( t ) * lightVectorD;","vec3 lightVectorClosest = closestPoint;","vec3 centerToRay = lightVectorClosest - dot( lightVectorClosest, reflectVS1 ) * reflectVS1;","closestPoint = lightVectorClosest - centerToRay * saturate( lightRadius / length( centerToRay ) );","vec3 lightVector = normalize( closestPoint );","vec3 lightVectorFull = ( lightPosition0 + lightPosition1 ) * 0.5 - vertexPosition.xyz;","float distance = length( lightVectorFull );","float alpha = roughness * roughness;","float alphaPrime = saturate( alpha + 0.5 * saturate( lightRadius / distance ) );","float sphereNormalization = alpha / alphaPrime;","sphereNormalization *= sphereNormalization;","float alphaPrimeLine = saturate( alpha + 0.5 * saturate( lengthD / distance ) );","float lineNormalization = alpha / alphaPrimeLine;","float tubeNormalization = sphereNormalization * lineNormalization;","if ( maxDistance > 0.0 ) {","attenuation = 1.0 / b;","}","vec3 sphereHalfVector = normalize( lightVector + eyeVector );","float sphereDotNormalHalf = max( dot( normal, sphereHalfVector ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotLH = max( dot( lightVector, sphereHalfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","tubeSpecular += tubeNormalization * attenuation * BlinnPhong_Specular( shininess, dotLN, sphereDotNormalHalf, eyeVector, normal ) * ( fresnel * dotLN ) * tubeLightColor[ i ];","#elif defined( BRDF_GGX )","tubeSpecular += tubeNormalization * attenuation * GGX_Specular( roughness, normal, sphereHalfVector, eyeVector, lightVector ) * ( fresnel * dotLN ) * tubeLightColor[ i ];","#endif","#else","float sphereSpecularWeight = max( pow( sphereDotNormalHalf, shininess ), 0.0 );","sphereSpecular += attenuation * ( sphereSpecularWeight * dotLN ) * ( specularColor * sphereLightColor[ i ] );","#endif","#ifdef PHYSICALLY_BASED_SHADING","tubeDiffuse  += ( 1.0 - fresnel ) * diffuseTerm * attenuation;","#else","tubeDiffuse  += diffuseTerm * attenuation;","#endif","globalLightFactor += tubeLightColor[ i ] * attenuation;","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec3 lightPosition = spotLightPositionVS[ i ];","vec3 lightVector = lightPosition - vViewPosition;","float lightDistance = length( lightVector );","float spotLightAngleCos = spotLightPars[ i ].x;","float spotLightExponent = spotLightPars[ i ].y;","float spotLightDistance = spotLightPars[ i ].z;","float attenuation = 1.0;","if ( spotLightDistance > 0.0 )","attenuation = 1.0 - min( lightDistance / spotLightDistance, 1.0 );","lightVector = lightVector / lightDistance;","float rho = dot( spotLightDirectionVS[ i ], lightVector );","if ( rho > spotLightAngleCos ) {;","float theta = spotLightAngleCos + 0.0001;","float phi = spotLightAngleCos + 0.05;","const float falloff = 4.0;","float spotEffect = 0.0;","if ( rho >= phi ) {","spotEffect = 1.0;","} else if ( rho <= theta ) {","spotEffect = 0.0;","} else { ","spotEffect = pow( ( rho - theta ) / ( phi - theta ), falloff );","}","attenuation *= spotEffect;","float dotLNUnclamped = dot( normal, lightVector );","float dotLN = max( dotLNUnclamped, 0.0 );","#ifdef WRAP_AROUND","#ifdef WRAP_AROUND_SKIN","vec3 spotDiffuseWeight = PSSFitFunction( dot( vNormal, lightVector ), curvature );","#else","float spotDiffuseWeightFull = dotLN;","float spotDiffuseWeightHalf = max( 0.25 * dotLNUnclamped + 0.25, 0.0 );","vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#endif","#else","float spotDiffuseWeight = dotLN;","#endif","spotDiffuseWeight *= attenuation;","vec3 diffuseTerm = spotDiffuseWeight * ( diffuse.rgb * spotLightColor[ i ] );","vec3 spotHalfVector = normalize( lightVector + eyeVector );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotLH = max( dot( lightVector, spotHalfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","vec3 specularTerm = attenuation * specularNormalization * BlinnPhong_Specular( shininess, dotLN, spotDotNormalHalf, eyeVector, normal ) * ( fresnel * dotLN ) * spotLightColor[ i ];","#elif defined( BRDF_GGX )","vec3 specularTerm = attenuation * GGX_Specular( roughness, normal, spotHalfVector, eyeVector, lightVector ) * ( fresnel * dotLN ) * spotLightColor[ i ];","#endif","#else","float spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );","vec3 specularTerm = attenuation * ( spotSpecularWeight * dotLN ) * ( specularColor * spotLightColor[ i ] );","#endif","#ifdef USE_SHADOWMAP","int shadowIndex = int( spotLightPars[ i ].w );","if ( i == shadowIndex + SPOT_INDEX_OFFSET ) {","diffuseTerm  *= occlusion[ i ];","specularTerm *= occlusion[ i ];","}","#endif","#ifdef PHYSICALLY_BASED_SHADING","spotDiffuse  += ( 1.0 - fresnel ) * diffuseTerm;","#else","spotDiffuse  += diffuseTerm;","#endif","spotSpecular += specularTerm;","globalLightFactor += spotLightColor[ i ] * attenuation;","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec3 lightDirection = directionalLightDirectionVS[ i ];","vec3 lightVector = normalize( lightDirection );","float dotLNUnclamped = dot( normal, lightVector );","float dotLN = max( dotLNUnclamped, 0.0 );","#ifdef WRAP_AROUND","#ifdef WRAP_AROUND_SKIN","vec3 dirDiffuseWeight = PSSFitFunction( dot( vNormal, lightVector ), curvature );","#else","float dirDiffuseWeightFull = dotLN;","float dirDiffuseWeightHalf = max( 0.25 * dotLNUnclamped + 0.25, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#endif","#else","float dirDiffuseWeight = dotLN;","#endif","vec3 diffuseTerm = diffuse.rgb * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( lightVector + eyeVector );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotLH = max( dot( lightVector, dirHalfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","vec3 specularTerm = specularNormalization * BlinnPhong_Specular( shininess, dotLN, dirDotNormalHalf, eyeVector, normal ) * ( fresnel * dotLN ) * directionalLightColor[ i ];","#elif defined( BRDF_GGX )","vec3 specularTerm = GGX_Specular( roughness, normal, dirHalfVector, eyeVector, lightVector ) * ( fresnel * dotLN ) * directionalLightColor[ i ];","#endif","#else","float dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );","vec3 specularTerm = ( dirSpecularWeight * dotLN ) * ( specularColor * directionalLightColor[ i ] );","#endif","#ifdef USE_SHADOWMAP","int shadowIndex = directionalLightPars[ i ];","if ( i == shadowIndex + DIR_INDEX_OFFSET ) {","diffuseTerm  *= occlusion[ i ];","specularTerm *= occlusion[ i ];","}","#endif","#ifdef PHYSICALLY_BASED_SHADING","dirDiffuse  += ( 1.0 - fresnel ) * diffuseTerm;","#else","dirDiffuse  += diffuseTerm;","#endif","dirSpecular += specularTerm;","globalLightFactor += directionalLightColor[ i ];","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec3 lightDirection = hemisphereLightDirectionVS[ i ];","vec3 lightVector = normalize( lightDirection.xyz );","vec3 halfVector = normalize( lightVector + eyeVector );","vec3 fresnelHemi = EnvironmentBRDF( gloss, dot( eyeVector, halfVector ), specularColor );","float dotProductHemi = dot( normal, lightVector );","float hemiDiffuseWeightUnclamped = 0.5 * dotProductHemi;","float hemiDiffuseWeight = clamp( hemiDiffuseWeightUnclamped, 0.0, 1.0 );","#ifdef WRAP_AROUND","float hemiDiffuseWeightUnclamped2 = -0.5 * dotProductHemi + 0.5;","float hemiDiffuseWeight2 = clamp( hemiDiffuseWeightUnclamped2, 0.0, 1.0 );","vec3 diffuseHemi = 0.75 * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) + 0.25 * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight2 );","#else","vec3 diffuseHemi = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#endif","diffuseHemi *= ( 1.0 - fresnelHemi );","vec3 R = reflect( -eyeVector, normal );","R = normalize( R );","float hemiSpecularWeight = clamp( dot( R, lightVector ) * 0.5 + 0.5, 0.0, 1.0 );","vec3 specularHemi = fresnelHemi * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiSpecularWeight );","hemiDiffuse += diffuse.rgb * diffuseHemi;","hemiSpecular += specularHemi;","globalLightFactor += hemisphereLightSkyColor[ i ];","}","#endif","#if MAX_AREA_LIGHTS > 0","vec3 areaDiffuse  = vec3( 0.0 );","vec3 areaSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_AREA_LIGHTS; i ++ ) {","float w = areaLightPars[ i ].x;","float h = areaLightPars[ i ].y;","vec3 proj = projectOnPlane( vertexPosition, areaLightPosition[ i ], areaLightNormal[ i ] );","vec3 dir = proj - areaLightPosition[ i ];","vec2 diagonal = vec2( dot( dir, areaLightRight[ i ] ), dot( dir, areaLightUp[ i ] ) );","vec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );","vec3 nearestPointInside = areaLightPosition[ i ] + ( areaLightRight[ i ] * nearest2D.x + areaLightUp[ i ] * nearest2D.y );","vec3 lightDir = normalize( nearestPointInside - vertexPosition );","float NdotL = max( dot( areaLightNormal[ i ], -lightDir ), 0.0 );","float NdotL2 = max( dot( normal, lightDir ), 0.0 );","float dotLN = sqrt( NdotL * NdotL2 );","vec3 areaDiffuseWeight = vec3( dotLN );","#ifdef WRAP_AROUND","if ( NdotL > 0.0 ) {","#ifdef WRAP_AROUND_SKIN","areaDiffuseWeight = PSSFitFunction( sqrt( NdotL * dot( vNormal, lightDir ) ), curvature );","#else","float dotLNHalf = max( 0.25 * dotLN + 0.25, 0.0 );","areaDiffuseWeight = mix( areaDiffuseWeight, vec3( dotLNHalf ), wrapRGB );","#endif","}","#endif","float dist = distance( vertexPosition, nearestPointInside );","float attenuation = calculateAttenuation( dist, areaLightAttenuation[ i ].x, areaLightAttenuation[ i ].y, areaLightAttenuation[ i ].z );","areaDiffuseWeight *= attenuation;","vec3 areaDiffuseTerm = areaDiffuseWeight * ( diffuse.rgb * areaLightColor[ i ] );","#ifdef AREA_TEXTURE","if ( areaLightPars[ i ].z > 0.0 ) {","float d = distance( vertexPosition, nearestPointInside );","vec2 co = ( diagonal.xy + vec2( w, h ) ) / ( 2.0 * vec2( w, h ) );","co.y = 1.0 - co.y;","vec3 ve = vertexPosition - areaLightPosition[ i ];","vec4 diff = vec4( 0.0 );","if ( dot( ve, areaLightNormal[ i ] ) < 0.0 ) {","diff = vec4( 0.0 );","} else {","float lod = max( pow( d, 0.1 ), 0.0 ) * 5.0;","vec4 t00 = texture2D( areaLightTexture[ i ], co, lod );","vec4 t01 = texture2D( areaLightTexture[ i ], co, lod + 1.0 );","diff = mix( t00, t01, 0.5 );","}","areaDiffuseTerm *= diff.xyz;","}","#endif","vec3 areaSpecularTerm = vec3( 0.0 );","vec3 fresnel = vec3( 0.0 );","vec3 R = reflect( eyeVector, normal );","vec3 E = linePlaneIntersect( vertexPosition, R, areaLightPosition[ i ], areaLightNormal[ i ] );","float specAngle = dot( R, areaLightNormal[ i ] );","if ( dot( vertexPosition - areaLightPosition[ i ], areaLightNormal[ i ] ) >= 0.0 && specAngle > 0.0 ) {","vec3 dirSpec = E - areaLightPosition[ i ];","vec2 dirSpec2D = vec2( dot( dirSpec, areaLightRight[ i ] ), dot( dirSpec, areaLightUp[ i ] ) );","vec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -w, w ), clamp( dirSpec2D.y, -h, h ) );","vec3 nearestPointInsideSpec = areaLightPosition[ i ] + ( areaLightRight[ i ] * nearestSpec2D.x + areaLightUp[ i ] * nearestSpec2D.y );","vec3 lightDirSpec = normalize( nearestPointInsideSpec - vertexPosition );","vec3 halfVectorSpec = normalize( lightDirSpec + eyeVector );","float dotNormalHalf = max( dot( normal, halfVectorSpec ), 0.0 );","float dotLH = max( dot( lightDirSpec, halfVectorSpec ), 0.0 );","fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","areaSpecularTerm = specularNormalization * BlinnPhong_Specular( shininess, dotLN, dotNormalHalf, eyeVector, normal ) * ( fresnel * areaDiffuseWeight ) * specAngle * areaLightColor[ i ];","#elif defined( BRDF_GGX )","areaSpecularTerm = GGX_Specular( roughness, normal, halfVectorSpec, eyeVector, lightDirSpec ) * ( fresnel * areaDiffuseWeight ) * specAngle * areaLightColor[ i ];","#endif","#ifdef AREA_TEXTURE","if ( areaLightPars[ i ].z > 0.0 ) {","float areaHard = 16.0;","float areaGloss = 16.0;","vec3 specPlane = areaLightPosition[ i ] + ( areaLightRight[ i ] * dirSpec2D.x + areaLightUp[ i ] * dirSpec2D.y );","float dist = max( distance( vertexPosition, specPlane ), 0.0 );","float d = ( ( 1.0 / areaHard ) / 2.0 ) * ( dist / areaGloss );","w = max( w, 0.0 );","h = max( h, 0.0 );","vec2 co = dirSpec2D / ( d + 1.0 );","co /= 2.0 * vec2( w, h );","co = co + vec2( 0.5 );","co.y = 1.0 - co.y;","float lod = ( 2.0 / areaHard * max( dist, 0.0 ) );","vec4 t00 = texture2D( areaLightTexture[ i ], co, lod );","vec4 t01 = texture2D( areaLightTexture[ i ], co, lod + 1.0 );","vec4 spec = mix( t00, t01, 0.5 );","areaSpecularTerm *= spec.xyz;","}","#endif","}","#ifdef USE_SHADOWMAP","int shadowIndex = int( areaLightPars[ i ].w );","if ( i == shadowIndex + AREA_INDEX_OFFSET ) {","areaDiffuseTerm  *= occlusion[ i ];","areaSpecularTerm *= occlusion[ i ];","}","#endif","areaDiffuse  += ( 1.0 - fresnel * specAngle ) * areaDiffuseTerm;","areaSpecular += areaSpecularTerm;","globalLightFactor += areaLightColor[ i ] * attenuation;","}","#endif","#if  MAX_IMAGE_LIGHTS > 0 || defined( TRANSPARENT )","vec3 fresnelEnv = EnvironmentBRDF( gloss, dot( eyeVector, normal ), specularColor );","#endif","#if MAX_IMAGE_LIGHTS > 0","vec3 imageDiffuse  = vec3( 0.0 );","vec3 imageSpecular = vec3( 0.0 );","vec3 reflectVS = reflect( -eyeVector, normal );","vec4 reflectWS = viewInverseMatrix * vec4( reflectVS, 0.0 );","vec4 normalWS = viewInverseMatrix * vec4( normal, 0.0 );","for( int i = 0; i < MAX_IMAGE_LIGHTS; i ++ ) {","float maxMipSpecular = imageLightPars[ i ].x;","float lightIntensity = imageLightPars[ i ].y;","float lightLocal 	  = abs( imageLightPars[ i ].z ) - 1.0;","float fixSeams		  = sign( imageLightPars[ i ].z );","float samplerSize 	  = imageLightPars[ i ].w;","float encodingType   = abs( imageLightSize[ i ].w ) - 1.0;","float encodingGamma  = sign( imageLightSize[ i ].w );","float localFade = 1.0;","if ( lightLocal > 0.0 ) {","vec3 lightPositionWS = imageLightPositionWS[ i ];","vec3 lightSize = imageLightSize[ i ].xyz;","vec3 BoxMin = lightPositionWS - lightSize;","vec3 BoxMax = lightPositionWS + lightSize;","vec3 FirstPlaneIntersect = ( BoxMax - vertexPositionWS.xyz ) / reflectWS.xyz;","vec3 SecondPlaneIntersect = ( BoxMin - vertexPositionWS.xyz ) / reflectWS.xyz;","vec3 FurthestPlane = max( FirstPlaneIntersect, SecondPlaneIntersect );","float Distance = min( min( FurthestPlane.x, FurthestPlane.y ), FurthestPlane.z );","vec3 IntersectPositionWS = vertexPositionWS.xyz + reflectWS.xyz * Distance;","reflectWS.xyz = IntersectPositionWS - lightPositionWS;","vec3 lightVectorWS = abs( lightPositionWS.xyz - vertexPositionWS.xyz );","if ( lightVectorWS.x > lightSize.x || lightVectorWS.y > lightSize.y || lightVectorWS.z > lightSize.z ) {","localFade = 0.0;","} else {","vec3 normLength = lightVectorWS / lightSize;","float maxLength = max( normLength.x, max( normLength.y, normLength.z ) );","localFade = max( 1.0 - maxLength, 0.0 );","}","}","vec3 cubeCoord = reflectWS.xyz;","float maxMipLevel = maxMipSpecular - 2.0;","#ifdef SUPPORTS_TEXTURE_LOD","float mipLod = 0.0;","if ( encodingType > 0.0 ) {","mipLod = ( maxMipLevel - 1.0 ) * ( 1.0 - gloss );","} else {","mipLod = max( ( maxMipLevel * ( 1.0 - gloss ) ), 1.5 );","}","if ( fixSeams > 0.0 ) {","cubeCoord = fix_cube_lookup( cubeCoord, mipLod, samplerSize );","}","float cubeCurvature = length( fwidth( cubeCoord ) );","mipLod += cubeCurvature * 0.01;","vec4 cubeColorSpecularSample = textureCubeLodEXT( imageLightTextureSpecular[ i ], cubeCoord, mipLod );","#else","const float mipUnit = 255.0 / 16.0;","float mipLevelMinification = mipUnit * textureCube( imageLightTextureMip[ i ], cubeCoord ).a;","float mipLevelMagnification = mipUnit * textureCube( imageLightTextureMip[ i ], cubeCoord, maxMipSpecular - 1.0 ).a;","float mipLevel;","if ( mipLevelMinification == 0.0 ) {","mipLevel = mipLevelMagnification - ( maxMipSpecular - 1.0 );","} else {","mipLevel = mipLevelMinification;","}","float mipBias = 0.0;","if ( encodingType > 0.0 ) {","mipBias = max( ( maxMipLevel - 1.0 ) * ( 1.0 - gloss ) - mipLevel, -3.0 );","} else {","mipBias = max( ( maxMipLevel * ( 1.0 - gloss ) ) - mipLevel, 0.0 );","}","if ( fixSeams > 0.0 ) {","cubeCoord = fix_cube_lookup( cubeCoord, mipLevel, samplerSize );","}","vec4 cubeColorSpecularSample = textureCube( imageLightTextureSpecular[ i ], cubeCoord, mipBias );","#endif","vec4 cubeColorDiffuseSample = textureCube( imageLightTextureDiffuse[ i ], normalWS.xyz );","vec3 cubeColorSpecular = cubeColorSpecularSample.rgb;","vec3 cubeColorDiffuse = cubeColorDiffuseSample.rgb;","if ( encodingType == 1.0 ) {","cubeColorSpecular *= cubeColorSpecularSample.a * 5.0;","cubeColorDiffuse *= cubeColorDiffuseSample.a * 5.0;","}","if ( encodingGamma > 0.0 ) {","cubeColorSpecular *= cubeColorSpecular;","cubeColorDiffuse *= cubeColorDiffuse;","}","imageSpecular += localFade * lightIntensity * cubeColorSpecular * fresnelEnv;","imageDiffuse += localFade * lightIntensity * cubeColorDiffuse * ( 1.0 - fresnelEnv ) * diffuse.rgb;","globalLightFactor += cubeColorDiffuse[ i ] * lightIntensity;","}","#endif","#if MAX_POLY_LIGHTS > 0","vec3 polyDiffuse  = vec3( 0.0 );","vec3 polySpecular = vec3( 0.0 );","vec3 lightPoints[ 4 ];","float dotNV = dot( normal, eyeVector );","float theta = acos( dotNV );","vec2 uvBase = vec2( roughness, theta / ( 0.5 * PI ) );","vec2 uv64 = uvBase * LUT_SCALE64 + LUT_BIAS64;","vec2 uv32 = uvBase * LUT_SCALE32 + LUT_BIAS32;","vec4 tMat = texture2D( samplerLtcMat, uv64 );","mat3 MinvInitSpecular = mat3(","vec3(   1,   0, tMat.y ),","vec3(   0, tMat.z,   0 ),","vec3( tMat.w,   0, tMat.x )",");","mat3 MinvInitDiffuse = mat3( 1.0 );","mat3 orthoBasis = computeOrthoBasis( dotNV, normal, eyeVector );","MinvInitSpecular = mul( MinvInitSpecular, orthoBasis );","MinvInitDiffuse = mul( MinvInitDiffuse, orthoBasis );","mat3 MinvSpecular;","mat3 MinvDiffuse;","vec4 schlick = texture2D( samplerLtcMag, uv32 );","#if __VERSION__ < 300","vec3 specIntensity = specularColor * schlick.x + ( 1.0 - specularColor ) * schlick.w;","#else","vec3 specIntensity = specularColor * schlick.x + ( 1.0 - specularColor ) * schlick.y;","#endif","for( int i = 0; i < MAX_POLY_LIGHTS; i ++ ) {","bool lightTwoSided = bool( polyLightPars[ i ].x );","lightPoints[ 0 ] = polyLightPoints[ i * 4 ];","lightPoints[ 1 ] = polyLightPoints[ i * 4 + 1 ];","lightPoints[ 2 ] = polyLightPoints[ i * 4 + 2 ];","lightPoints[ 3 ] = polyLightPoints[ i * 4 + 3 ];","MinvSpecular = MinvInitSpecular;","MinvDiffuse = MinvInitDiffuse;","#ifdef POLY_TEXTURE","float texSize = polyLightTexturePars[ i ].x;","float texBias = polyLightTexturePars[ i ].y;","vec3 pSpecular = LTC_Evaluate_opt_tex( vertexPosition.xyz, MinvSpecular, lightPoints, lightTwoSided, polyLightTexture[ i ], texSize, texBias );","vec3 pDiffuse  = LTC_Evaluate_opt_tex( vertexPosition.xyz, MinvDiffuse, lightPoints, lightTwoSided, polyLightTexture[ i ], texSize, texBias );","#else","vec3 pSpecular = LTC_Evaluate_opt( vertexPosition.xyz, MinvSpecular, lightPoints, lightTwoSided );","vec3 pDiffuse  = LTC_Evaluate_opt( vertexPosition.xyz, MinvDiffuse, lightPoints, lightTwoSided );","#endif","vec3 polyDiffuseTerm = pDiffuse * polyLightColor[ i ];","vec3 polySpecularTerm = pSpecular * polyLightColor[ i ];","#ifdef USE_SHADOWMAP","int shadowIndex = int( polyLightPars[ i ].y );","if ( i == shadowIndex + POLY_INDEX_OFFSET ) {","polyDiffuseTerm  *= occlusion[ i ];","polySpecularTerm *= occlusion[ i ];","}","#endif","polyDiffuse += polyDiffuseTerm;","polySpecular += polySpecularTerm;","}","polyDiffuse *= diffuse.rgb;","polySpecular *= specIntensity;","polyDiffuse *= ( 1.0 - specIntensity );","polyDiffuse /= 2.0 * PI;","polySpecular /= 2.0 * PI;","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_HEMI_LIGHTS > 0 || MAX_IMAGE_LIGHTS > 0","float NdotV = dot( normal, eyeVector );","float specOcclusion = computeSpecOcclusion( NdotV, lightMapIntensity, roughness );","#endif","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse * lightMapIntensity;","totalSpecular += hemiSpecular * specOcclusion;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPHERE_LIGHTS > 0","totalDiffuse += sphereDiffuse;","totalSpecular += sphereSpecular;","#endif","#if MAX_TUBE_LIGHTS > 0","totalDiffuse += tubeDiffuse;","totalSpecular += tubeSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#if MAX_AREA_LIGHTS > 0","totalDiffuse += areaDiffuse;","totalSpecular += areaSpecular;","#endif","#if MAX_IMAGE_LIGHTS > 0","totalDiffuse += imageDiffuse * lightMapIntensity;","totalSpecular += imageSpecular * specOcclusion;","#endif","#if MAX_POLY_LIGHTS > 0","totalDiffuse += polyDiffuse;","totalSpecular += polySpecular;","#endif","#ifdef TRANSPARENT","float fresnelStrength = length( fresnelEnv );","fresnelStrength = min( fresnelStrength, 1.0 );","float reflection = mix( mgl_FragColor.a, 1.0, fresnelStrength );","mgl_FragColor.a = reflection;","totalDiffuse *= reflection;","#endif","#ifdef METAL","mgl_FragColor.rgb = mgl_FragColor.rgb * ( totalDiffuse + totalSpecular );","#else","mgl_FragColor.rgb = mgl_FragColor.rgb * ( totalDiffuse ) + totalSpecular;","#endif","#ifdef TRANSPARENT","mgl_FragColor.rgb *= mgl_FragColor.a;","#endif"].join("\n"),THREE.ShaderChunk.shadowmap_pars_fragment=["#ifdef USE_SHADOWMAP","#ifdef USE_SHADOWSAMPLER","uniform sampler2DShadow shadowMap[ MAX_SHADOWS ];","#else","uniform sampler2D shadowMap[ MAX_SHADOWS ];","#endif","uniform vec4 shadowMapPars[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","#ifdef DEPTH_TEXTURES","float unpackDepth( const in vec4 depth ) {","return depth.x;","}","#else","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / 16777216.0, 1.0 / 65536.0, 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif","#ifdef USE_SHADOWSAMPLER","float sampleShadowPCFSoft( sampler2DShadow shadowMap, vec2 shadowMapSize, vec2 shadowCoord, float vertexDepth ) {","vec2 pixelOffset = vec2( 1.0 ) / shadowMapSize;","float dx0 = -pixelOffset.x;","float dy0 = -pixelOffset.y;","float dx1 =  pixelOffset.x;","float dy1 =  pixelOffset.y;","float shadowValue = 0.0;","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx0, dy0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( 0.0, dy0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx1, dy0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx0, 0.0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord, 				      vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx1, 0.0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx0, dy1 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( 0.0, dy1 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx1, dy1 ), vertexDepth ) );","shadowValue /= 9.0;","return 1.0 - shadowValue;","}","#else","float sampleShadowPCFSoft( sampler2D shadowMap, vec2 shadowMapSize, vec2 shadowCoord, float vertexDepth ) {","vec2 pixelOffset = vec2( 1.0 ) / shadowMapSize;","float dx0 = -pixelOffset.x;","float dy0 = -pixelOffset.y;","float dx1 =  pixelOffset.x;","float dy1 =  pixelOffset.y;","float shadowDepth;","mat3 shadowKernel;","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( dx0, dy0 ) ) );","shadowKernel[0][0] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( dx0, 0.0 ) ) );","shadowKernel[0][1] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( dx0, dy1 ) ) );","shadowKernel[0][2] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( 0.0, dy0 ) ) );","shadowKernel[1][0] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord ) );","shadowKernel[1][1] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( 0.0, dy1 ) ) );","shadowKernel[1][2] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( dx1, dy0 ) ) );","shadowKernel[2][0] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( dx1, 0.0 ) ) );","shadowKernel[2][1] = float( vertexDepth > shadowDepth );","shadowDepth = unpackDepth( texture2D( shadowMap, shadowCoord + vec2( dx1, dy1 ) ) );","shadowKernel[2][2] = float( vertexDepth > shadowDepth );","shadowKernel *= 0.25;","vec2 fractionalCoord = 1.0 - fract( shadowCoord * shadowMapSize );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","float shadowValue = dot( shadowValues, vec4( 1.0 ) );","return shadowValue;","}","#endif","#endif"].join("\n"),THREE.ShaderChunk.shadowmap_fragment=["#ifdef USE_SHADOWMAP","float occlusion[ MAX_SHADOWS ];","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[4];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","frustumColors[3] = vec3( 1.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","float combinedOcclusion = 1.0;","#endif","float shadowDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","occlusion[ i ] = 1.0;","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","vec2 shadowMapSize = shadowMapPars[ i ].xy;","float shadowDarkness = shadowMapPars[ i ].z;","float shadowBias = shadowMapPars[ i ].w;","float vertexDepth = shadowCoord.z;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, vertexDepth <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, vertexDepth <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias;","#if defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadowValue = sampleShadowPCFSoft( shadowMap[ i ], shadowMapSize, shadowCoord.xy, vertexDepth );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT_HQ )","vec2 pixelOffset = vec2( 2.0 ) / shadowMapSize;","float shadowValue0 = sampleShadowPCFSoft( shadowMap[ i ], shadowMapSize, shadowCoord.xy + vec2( -pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue1 = sampleShadowPCFSoft( shadowMap[ i ], shadowMapSize, shadowCoord.xy + vec2(  pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue2 = sampleShadowPCFSoft( shadowMap[ i ], shadowMapSize, shadowCoord.xy + vec2( 0.0, -pixelOffset.y ), vertexDepth );","float shadowValue3 = sampleShadowPCFSoft( shadowMap[ i ], shadowMapSize, shadowCoord.xy + vec2( 0.0,  pixelOffset.y ), vertexDepth );","float shadowValue = ( shadowValue0 + shadowValue1 + shadowValue2 + shadowValue3 ) * 0.25;","#else","#ifdef USE_SHADOWSAMPLER","float shadowValue = 1.0 - texture( shadowMap[ i ], vec3( shadowCoord.xz, vertexDepth ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float shadowDepth = unpackDepth( rgbaDepth );","float shadowValue = float( vertexDepth > shadowDepth );","#endif","#endif","occlusion[ i ] = 1.0 - shadowDarkness * shadowValue;","#ifdef SHADOWMAP_CASCADE","combinedOcclusion *= occlusion[ i ];","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) mgl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) mgl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef SHADOWMAP_CASCADE","occlusion[ DIR_INDEX_OFFSET ] = combinedOcclusion;","#endif","#endif"].join("\n"),THREE.ShaderChunk.shadowmap_pars_vertex=["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),THREE.ShaderChunk.shadowmap_vertex=["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),THREE.ShaderChunk.alphatest_fragment=["#ifdef ALPHATEST","if ( mgl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),THREE.ShaderChunk.linear_to_gamma_fragment=["#ifdef GAMMA_OUTPUT","mgl_FragColor.xyz = sqrt( mgl_FragColor.xyz );","#endif"].join("\n"),THREE.ShaderChunk.tonemapping_fragment=["#ifdef TONEMAPPING","mgl_FragColor.rgb = applyTonemapping( mgl_FragColor.rgb, brightness, whitePoint );","#endif"].join("\n"),THREE.ShaderChunk.dithering_fragment=["#ifdef DITHERING_ENABLED","mgl_FragColor.rgb = applyDithering( mgl_FragColor.rgb, gl_FragCoord.xy );","#endif"].join("\n"),THREE.UniformsLib.fog={fogDensity:{type:"f",value:25e-5,shared:!0},fogNearFar:{type:"v2",value:new THREE.Vector2(1,2e3),shared:!0},fogStartStrength:{type:"v2",value:new THREE.Vector2(100,.1),shared:!0},fogColor:{type:"c",value:new THREE.Color(16777215),shared:!0}},THREE.UniformsLib.heightFog={fogHeight:{type:"f",value:-15,shared:!0},fogVisibilityDistance:{type:"f",value:50,shared:!0},fogFadeSpeed:{type:"f",value:.15,shared:!0},fogShallowDepthColor:{type:"c",value:(new THREE.Color).setRGB(.0078,.5176,.7),shared:!0},fogDeepDepthColor:{type:"c",value:(new THREE.Color).setRGB(.0039,.00196,.145),shared:!0},fogRgbExtinctionDistance:{type:"v3",value:new THREE.Vector3(7,30,40),shared:!0}},THREE.UniformsLib.lights={directionalLightDirectionVS:{type:"fv3",value:[],shared:!0},directionalLightColor:{type:"fv3",value:[],shared:!0},directionalLightPars:{type:"iv1",value:[],shared:!0},hemisphereLightDirectionVS:{type:"fv3",value:[],shared:!0},hemisphereLightSkyColor:{type:"fv3",value:[],shared:!0},hemisphereLightGroundColor:{type:"fv3",value:[],shared:!0},pointLightColor:{type:"fv3",value:[],shared:!0},pointLightPositionVS:{type:"fv3",value:[],shared:!0},pointLightDistance:{type:"fv1",value:[],shared:!0},sphereLightColor:{type:"fv3",value:[],shared:!0},sphereLightPositionVS:{type:"fv3",value:[],shared:!0},sphereLightPars:{type:"fv3",value:[],shared:!0},tubeLightColor:{type:"fv3",value:[],shared:!0},tubeLightPosition0VS:{type:"fv3",value:[],shared:!0},tubeLightPosition1VS:{type:"fv3",value:[],shared:!0},tubeLightPars:{type:"fv2",value:[],shared:!0},spotLightColor:{type:"fv3",value:[],shared:!0},spotLightPositionVS:{type:"fv3",value:[],shared:!0},spotLightDirectionVS:{type:"fv3",value:[],shared:!0},spotLightPars:{type:"fv4",value:[],shared:!0},areaLightColor:{type:"fv3",value:[],shared:!0},areaLightPosition:{type:"fv3",value:[],shared:!0},areaLightNormal:{type:"fv3",value:[],shared:!0},areaLightRight:{type:"fv3",value:[],shared:!0},areaLightUp:{type:"fv3",value:[],shared:!0},areaLightPars:{type:"fv4",value:[],shared:!0},areaLightAttenuation:{type:"fv3",value:[],shared:!0},areaLightTexture:{type:"tv",value:[],shared:!0},imageLightTextureDiffuse:{type:"tv",value:[],shared:!0},imageLightTextureSpecular:{type:"tv",value:[],shared:!0},imageLightTextureMip:{type:"tv",value:[],shared:!0},imageLightPars:{type:"fv4",value:[],shared:!0},imageLightPositionWS:{type:"fv3",value:[],shared:!0},imageLightSize:{type:"fv4",value:[],shared:!0},polyLightColor:{type:"fv3",value:[],shared:!0},polyLightPoints:{type:"fv3",value:[],shared:!0},polyLightPars:{type:"fv2",value:[],shared:!0},polyLightTexture:{type:"tv",value:[],shared:!0},polyLightTexturePars:{type:"fv2",value:[],shared:!0},samplerLtcMat:{type:"t",value:null,shared:!0},samplerLtcMag:{type:"t",value:null,shared:!0}},THREE.UniformsLib.dynamicParticle={time:{type:"f",value:0},timeRange:{type:"f",value:1.25},timeOffset:{type:"f",value:0},numFrames:{type:"f",value:1},frameDuration:{type:"f",value:1},tDepth:{type:"t",value:null,shared:!0},viewSize:{type:"v2",value:new THREE.Vector2(800,600),shared:!0}},THREE.UniformsLib.shadowmap={shadowMap:{type:"tv",value:[],shared:!0},shadowMapPars:{type:"v4v",value:[],shared:!0},shadowMatrix:{type:"m4v",value:[],shared:!0}},THREE.ShaderLib.emissive={uniforms:THREE.UniformsUtils.merge([{diffuse:{type:"v4",value:new THREE.Vector4(.9,.9,.9,1)}},THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.particle,THREE.UniformsLib.displacement]),vertexShader:[THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.particle_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.end_pos_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.particle_vertex,"}"].join("\n"),fragmentShader:["uniform vec4 diffuse;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.tonemappingFragmentPars,THREE.ShaderChunk.ditheringFragmentPars,THREE.ShaderChunk.linearDepthFragmentPars,"void main() {","mgl_FragColor = diffuse;","#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined ( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) )","vec2 uvCoord = vUv;","#endif",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,"mgl_FragColor.xyz *= lightMapIntensity;",THREE.ShaderChunk.fog_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.tonemapping_fragment,THREE.ShaderChunk.dithering_fragment,"}"].join("\n")},THREE.ShaderLib.phong={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.heightFog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,THREE.UniformsLib.displacement,{diffuse:{type:"v4",value:new THREE.Vector4(.9,.9,.9,1)},specular:{type:"v4",value:new THREE.Vector4(.1,.1,.1,30)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)},glossMap:{type:"t",value:null},specularMap:{type:"t",value:null},parallaxScale:{type:"f",value:1},detailRepeatScale:{type:"v3",value:new THREE.Vector3(1,1,1)},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,500)}}]),vertexShader:["varying vec3 vViewPosition;","varying vec3 vNormal;","#if defined( ATMOSPHERIC_FOG )","varying vec4 vClipPosition;","#endif",THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.begin_nor_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.end_nor_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.end_pos_vertex,"vViewPosition = mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"#if defined( ATMOSPHERIC_FOG )","vClipPosition = gl_Position;","#endif","}"].join("\n"),fragmentShader:["uniform vec4 diffuse;","uniform vec4 specular;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.height_fog_pars_fragment,THREE.ShaderChunk.area_lights_utils,THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.derivativemap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.parallax_pars_fragment,THREE.ShaderChunk.displacementmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.glossmap_pars_fragment,THREE.ShaderChunk.tonemappingFragmentPars,THREE.ShaderChunk.ditheringFragmentPars,THREE.ShaderChunk.linearDepthFragmentPars,"#if defined( USE_BUMPDETAILMAP ) || defined( USE_NORMALDETAILMAP )","uniform vec3 detailRepeatScale;","#endif","#if defined( ATMOSPHERIC_FOG )","uniform vec2 cameraNearFar;","varying vec4 vClipPosition;","#endif","void main() {","mgl_FragColor = vec4( vec3 ( 1.0 ), diffuse.a );","#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_BUMPDETAILMAP ) || defined( USE_NORMALDETAILMAP ) || defined ( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) || defined( USE_DISPLACEMENTMAP ) )","vec2 uvCoord = vUv;","#endif","vec3 normal = normalize( vNormal );","vec3 vertexPosition = vViewPosition;","vec3 eyeVector = normalize( -vertexPosition );",THREE.ShaderChunk.parallax_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.height_fog_fragment,THREE.ShaderChunk.fog_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.tonemapping_fragment,THREE.ShaderChunk.dithering_fragment,"vec4 pixelColor = mgl_FragColor;","#if defined( TRANSLUCENT_PASS )","mgl_FragColor = vec4( pixelColor.a );","#endif","}"].join("\n")},THREE.ShaderLib.dynamicParticle={uniforms:THREE.UniformsUtils.merge([{diffuse:{type:"v4",value:new THREE.Vector4(.9,.9,.9,1)},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,500)},additiveFactor:{type:"f",value:0},directionalLightPositionVS:{type:"fv4",value:[],shared:!0}},THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.particle,THREE.UniformsLib.dynamicParticle,THREE.UniformsLib.lights,THREE.UniformsLib.fogAtmo]),vertexShader:[THREE.ShaderChunk.particle_pars_vertex,"uniform float time;","uniform float timeRange;","uniform float timeOffset;","#ifdef OFFSCREEN_PARTICLES","varying vec4 vClipPosition;","#endif","#ifdef USE_LIGHTS","varying vec3 vViewPosition;","#endif","varying vec4 vSpinLifeTime;","attribute vec4 velocitySpinStart;","attribute vec4 accelerationSpinSpeed;","attribute vec4 startSizeEndSizeStartTimeLifeTime;","void main() {","float startSize = startSizeEndSizeStartTimeLifeTime.x;","float endSize = startSizeEndSizeStartTimeLifeTime.y;","float startTime = startSizeEndSizeStartTimeLifeTime.z;","float lifeTime = startSizeEndSizeStartTimeLifeTime.w;","vec3 velocity = velocitySpinStart.xyz;","float spinStart = velocitySpinStart.w;","vec3 acceleration = accelerationSpinSpeed.xyz;","float spinSpeed = accelerationSpinSpeed.w;","float localTime = mod( ( time - timeOffset - startTime ), timeRange );","float percentLife = localTime / lifeTime;","vec3 newPosition = position + velocity * localTime + acceleration * localTime * localTime;","vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","float currentSize = 0.5 * particleSize * mix( startSize, endSize, percentLife );","currentSize *= step( 0.0, percentLife );","currentSize *= step( -1.0, -percentLife );","if ( currentSize == 0.0 ) gl_Position = vec4( -100000000.0 );","#ifdef OFFSCREEN_PARTICLES","vClipPosition = gl_Position;","#endif","#ifdef USE_LIGHTS","vViewPosition = mvPosition.xyz;","#endif","vec4 projectedCorner = projectionMatrix * vec4( currentSize, currentSize, mvPosition.z, mvPosition.w );","gl_PointSize = screenWidth * projectedCorner.x / projectedCorner.w;","percentLife *= step( 0.0, percentLife );","percentLife *= step( -1.0, -percentLife );","vSpinLifeTime = vec4( spinStart, spinSpeed, percentLife, localTime );","}"].join("\n"),fragmentShader:[THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.tonemappingFragmentPars,THREE.ShaderChunk.ditheringFragmentPars,"uniform sampler2D map;","uniform vec4 diffuse;","uniform float time;","uniform float numFrames;","uniform float frameDuration;","uniform vec2 cameraNearFar;","uniform float additiveFactor;","#ifdef OFFSCREEN_PARTICLES","uniform sampler2D tDepth;","uniform vec2 viewSize;","varying vec4 vClipPosition;","#ifdef RGBA_DEPTH","float unpackDepth( vec4 rgba ) {","return dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) );","}","#endif","#if defined( OIT_PARTICLES )","float alphaWeight( float a, float z ) {","return a * max( 1e-2, min( 3.0 * 1e3, 0.03 / ( 1e-5 + pow( abs(z) / 200.0, 4.0 ) ) ) );","}","#endif",THREE.ShaderChunk.fogAtmoFragmentPars,THREE.ShaderChunk.linearDepthFragmentPars,"#endif","#ifdef USE_LIGHTS","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec4 directionalLightPositionVS[ MAX_DIR_LIGHTS ];","uniform int directionalLightPars[ MAX_DIR_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPositionVS[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPositionVS[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirectionVS[ MAX_SPOT_LIGHTS ];","uniform vec4 spotLightPars[ MAX_SPOT_LIGHTS ];","#endif","varying vec3 vViewPosition;","float computeAttenuation( float distanceToLight, float lightRange ) {","const float cutoff = 0.3;","float denom = distanceToLight / lightRange + 1.0;","float attenuation = 1.0 / ( denom * denom );","attenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );","attenuation = max( attenuation, 0.0 );","attenuation *= attenuation;","return attenuation;","}","#endif","varying vec4 vSpinLifeTime;","void main() {","#if defined( OFFSCREEN_PARTICLES )","vec2 screenCoord = gl_FragCoord.xy / viewSize;","#if defined( RGBA_DEPTH )","float sceneDepth = unpackDepth( texture2D( tDepth, screenCoord ) );","#elif defined( FLOAT_DEPTH )","float sceneDepth = texture2D( tDepth, screenCoord ).w;","#elif defined( TEXTURE_DEPTH )","float sceneDepth = texture2D( tDepth, screenCoord ).x * 2.0 - 1.0;","#endif","float myDepth = vClipPosition.z / vClipPosition.w;","float myLinearDepth = linearizeDepth( myDepth, cameraNearFar );","float sceneLinearDepth = linearizeDepth( sceneDepth, cameraNearFar );","const float scale = 0.1;","float zFade = clamp( scale * abs( myLinearDepth - sceneLinearDepth ), 0.0, 1.0 );","if ( myDepth > sceneDepth ) discard;","#endif","float spinStart = vSpinLifeTime.x;","float spinSpeed = vSpinLifeTime.y;","float percentLife = vSpinLifeTime.z;","float localTime = vSpinLifeTime.w;","const float frameStart = 0.0;","vec2 texCoord = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) - 0.5;","float s = sin( spinStart + spinSpeed * time );","float c = cos( spinStart + spinSpeed * time );","vec2 rotatedCoord1 = vec2( texCoord.x * c + texCoord.y * s, -texCoord.x * s + texCoord.y * c ) + 0.5;","rotatedCoord1 = clamp( rotatedCoord1, 0.0, 1.0 );","vec2 rotatedCoord2 = rotatedCoord1;","float frame1 = mod( floor( localTime / frameDuration + frameStart ), numFrames );","float uOffset1 = frame1 / numFrames;","rotatedCoord1.x = uOffset1 + ( rotatedCoord1.x ) * ( 1.0 / numFrames );","vec4 pixel1 = texture2D( map, rotatedCoord1 );","pixel1.xyz *= pixel1.xyz;","#ifdef INTERPOLATE_PARTICLE_FRAMES","float frame2 = mod( floor( localTime / frameDuration + frameStart + 1.0 ), numFrames );","float uOffset2 = frame2 / numFrames;","float frameTime = fract( localTime / frameDuration + frameStart );","rotatedCoord2.x = uOffset2 + ( rotatedCoord2.x ) * ( 1.0 / numFrames );","vec4 pixel2 = texture2D( map, rotatedCoord2 );","pixel2.xyz *= pixel2.xyz;","pixel1 = mix( pixel1, pixel2, frameTime );","#endif","if ( pixel1.a < 0.001 ) discard;","vec4 particleColor = pixel1 * diffuse;","#ifdef USE_LIGHTS","vec3 vertexPosition = vViewPosition;","vec3 pColor = particleColor.rgb;","vec3 accumulatedColor = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec3 lightColor = directionalLightColor[ i ];","vec4 lightPositionDistance = directionalLightPositionVS[ i ];","vec3 lightPosition = lightPositionDistance.xyz;","float lightDistance = lightPositionDistance.w;","float d = distance( lightPosition, vertexPosition );","float attenuation = computeAttenuation( d, lightDistance );","accumulatedColor += attenuation * lightColor * pColor;","}","#endif","#if MAX_POINT_LIGHTS > 0","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec3 lightColor = pointLightColor[ i ];","vec3 lightPosition = pointLightPositionVS[ i ];","float lightDistance = pointLightDistance[ i ];","float d = distance( lightPosition, vertexPosition );","float attenuation = computeAttenuation( d, lightDistance );","accumulatedColor += attenuation * lightColor * pColor;","}","#endif","#if MAX_SPOT_LIGHTS > 0","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec3 lightColor = spotLightColor[ i ];","vec3 lightPosition = spotLightPositionVS[ i ];","vec3 lightVector = lightPosition - vertexPosition;","float lightDistance = length( lightVector );","float spotLightAngleCos = spotLightPars[ i ].x;","float spotLightExponent = spotLightPars[ i ].y;","float spotLightDistance = spotLightPars[ i ].z;","float attenuation = 1.0;","if ( spotLightDistance > 0.0 )","attenuation = 1.0 - min( lightDistance / spotLightDistance, 1.0 );","lightVector = lightVector / lightDistance;","float rho = dot( spotLightDirectionVS[ i ], lightVector );","if ( rho > spotLightAngleCos ) {;","float theta = spotLightAngleCos + 0.0001;","float phi = spotLightAngleCos + 0.05;","const float falloff = 4.0;","float spotEffect = 0.0;","if ( rho >= phi ) {","spotEffect = 1.0;","} else if ( rho <= theta ) {","spotEffect = 0.0;","} else { ","spotEffect = pow( ( rho - theta ) / ( phi - theta ), falloff );","}","attenuation *= spotEffect;","accumulatedColor += attenuation * lightColor * pColor;","}","}","#endif","particleColor.rgb = accumulatedColor;","#endif","#if defined( OFFSCREEN_PARTICLES )","#ifdef FOG_ENABLED","particleColor.rgb = addFog( particleColor.rgb, myLinearDepth );","#endif","particleColor.a *= zFade;","#endif","#if defined( OIT_PARTICLES ) && defined( OFFSCREEN_PARTICLES )","float ai = particleColor.a;","vec3 Ci = particleColor.rgb * particleColor.a;","float wzi = alphaWeight( ai, myLinearDepth );","#endif","#if defined( OIT_MRT_PASS )","mgl_FragData[ 0 ] = vec4( Ci * wzi, ai );","mgl_FragData[ 1 ] = vec4( ai * wzi );","if ( additiveFactor > 0.0 ) mgl_FragData[ 1 ] = vec4( additiveFactor );","#elif defined( OIT_ACCUMULATION_PASS )","mgl_FragColor = vec4( Ci * wzi, ai );","#elif defined( OIT_REVEALAGE_PASS )","mgl_FragColor = vec4( ai * wzi );","if ( additiveFactor > 0.0 ) mgl_FragColor = vec4( additiveFactor );","#elif defined( TRANSLUCENT_PASS )","mgl_FragColor = vec4( particleColor.a );","#else","mgl_FragColor = particleColor;","#endif","}"].join("\n")},THREE.ShaderLib.depthRGBA={uniforms:THREE.UniformsUtils.merge([{slopeScale:{type:"f",value:2,shared:!0},slopeBias:{type:"f",value:0,shared:!0},slopeMax:{type:"f",value:.001,shared:!0},epsilon:{type:"f",value:.1},alphaTest:{type:"f",value:.5},map:{type:"t",value:null}},{offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}},THREE.UniformsLib.displacement]),vertexShader:[THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"#ifdef USE_DISPLACEMENTMAP","uniform vec4 offsetRepeat;","#endif","#ifdef SPRITE","attribute vec3 offset;","attribute vec2 scale;","varying vec2 vUv;","#endif","void main() {","#ifdef SPRITE","#ifdef BILLBOARD","vec4 tmpPosition = modelViewMatrix * vec4( offset, 1.0 ) + vec4( position * vec3( scale, 1.0 ), 0.0 );","gl_Position = projectionMatrix * tmpPosition;","#else","vec3 spritePosition = position * vec3( scale, 1.0 ) + offset;","vec4 mvPosition = modelViewMatrix * vec4( spritePosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","#endif","vUv = uv;","#else","#ifdef USE_DISPLACEMENTMAP","vec2 transformedUV = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.end_pos_vertex,"#endif","}"].join("\n"),fragmentShader:["#ifdef SPRITE","uniform float epsilon;","uniform float alphaTest;","uniform sampler2D map;","varying vec2 vUv;","#endif","#if !defined( DEPTH_TEXTURES )","#ifdef SLOPE_DEPTH_BIAS","uniform float slopeScale;","uniform float slopeBias;","uniform float slopeMax;","#endif","vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","#endif","void main() {","#ifdef SPRITE","vec4 texture = texture2D( map, vUv );","#ifdef SDF","#if defined( GL_OES_standard_derivatives ) || __VERSION__ >= 300","float w = clamp( 200.0 * epsilon * ( abs( dFdx( vUv.x ) ) + abs( dFdy( vUv.y ) ) ), 0.0, 0.5 );","#else","float w = epsilon;","#endif","float alpha = smoothstep( 0.5 - w, 0.5 + w, texture.r );","alpha = pow( alpha, 1.0/2.2 );","#else","float alpha = texture.a;","#endif","if ( alpha < alphaTest ) discard;","#endif","#ifndef DEPTH_TEXTURES","float depth = gl_FragCoord.z;","#ifdef SLOPE_DEPTH_BIAS","float dx = dFdx( depth );","float dy = dFdy( depth );","float m = max( abs(dx), abs(dy) );","m = min( m, slopeMax );","depth += m * slopeScale + slopeBias;","#endif","mgl_FragColor = pack_depth( depth );","#endif","}"].join("\n")},THREE.DeferredUniformsLib={},THREE.DeferredShaderChunk={},THREE.DeferredShaders={},THREE.DeferredUniformsLib.gbuffers={samplerColor:{type:"t",value:null,shared:!0},samplerNormalDepth:{type:"t",value:null,shared:!0},samplerDiffuseRGB:{type:"t",value:null,shared:!0},samplerSpecularRGB:{type:"t",value:null,shared:!0},samplerWrapRGB:{type:"t",value:null,shared:!0},samplerNormal:{type:"t",value:null,shared:!0},samplerDepth:{type:"t",value:null,shared:!0},viewSize:{type:"v2",value:new THREE.Vector2(800,600),shared:!0}},THREE.DeferredUniformsLib.multiShadowMaps={samplerShadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:.5},shadowBias:{type:"f",value:0},matShadow:{type:"m4v",value:[]}},THREE.DeferredUniformsLib.projectedTexture={samplerTexture:{type:"t",value:null},textureBias:{type:"f",value:0},matTexture:{type:"m4",value:new THREE.Matrix4}},THREE.DeferredUniformsLib.wireframe={wireframeDiffuse:{type:"c",value:new THREE.Color(0)},wireframeSpecular:{type:"c",value:new THREE.Color(0)},wireframeShininessThickness:{type:"v2",value:new THREE.Vector2(0,1.5)}},THREE.DeferredShaderChunk.wireframeParsFragment=["#ifdef WIREFRAME","uniform vec3 wireframeDiffuse;","uniform vec3 wireframeSpecular;","uniform vec2 wireframeShininessThickness;","varying vec3 vCenter;","float edgeFactor() {","vec3 d = fwidth( vCenter );","vec3 a3 = smoothstep( vec3( 0.0 ), d * wireframeShininessThickness.y, vCenter );","return min( min( a3.x, a3.y ), a3.z );","}","#endif"].join("\n"),THREE.DeferredShaderChunk.wireframeFragment=["#ifdef WIREFRAME","diffuseColor.rgb = mix( wireframeDiffuse, diffuseColor.rgb, edgeFactor() );","specularColor.rgb = mix( wireframeSpecular, specularColor.rgb, edgeFactor() );","shininess = mix( wireframeShininessThickness.x, shininess, edgeFactor() );","#endif"].join("\n"),THREE.DeferredShaderChunk.wireframeParsVertex=["#ifdef WIREFRAME","attribute vec3 center;","varying vec3 vCenter;","#endif"].join("\n"),THREE.DeferredShaderChunk.wireframeVertex=["#ifdef WIREFRAME","vCenter = center;","#endif"].join("\n"),THREE.DeferredShaderChunk.gbuffersUniforms=["#ifdef USE_MRT","uniform sampler2D samplerDiffuseRGB;","uniform sampler2D samplerSpecularRGB;","uniform sampler2D samplerWrapRGB;","uniform sampler2D samplerNormal;","uniform sampler2D samplerDepth;","#else","uniform sampler2D samplerColor;","uniform sampler2D samplerNormalDepth;","#endif","uniform vec2 viewSize;"].join("\n"),THREE.DeferredShaderChunk.multiShadowMapsUniforms=["#ifdef USE_SHADOWMAP","#ifdef USE_SHADOWSAMPLER","uniform sampler2DShadow samplerShadowMap[ SHADOWMAP_COUNT ];","#else","uniform sampler2D samplerShadowMap[ SHADOWMAP_COUNT ];","#endif","uniform mat4 matShadow[ SHADOWMAP_COUNT ];","uniform float shadowBias;","uniform float shadowDarkness;","uniform vec2 shadowMapSize;","#endif"].join("\n"),THREE.DeferredShaderChunk.projectedTextureUniforms=["#ifdef PROJECTED_TEXTURE","uniform sampler2D samplerTexture;","uniform float textureBias;","uniform mat4 matTexture;","#endif"].join("\n"),THREE.DeferredShaderChunk.packFloat=["const float unit = 255.0/256.0;","float vec3_to_float( vec3 data ) {","highp float compressed = dot( floor( data * 255.0 + 0.5 ), vec3( 1.0, 256.0, 65536.0 ) );","return compressed;","}","float vec21_to_float( float dataHi, float dataLo ) {","highp float compressed = floor( dataHi ) + unit * dataLo;","return compressed;","}","vec3 packWrapAroundShininess( float wrapAround, float shininess ) {","vec3 tmp;","tmp.r = wrapAround + 0.5;","tmp.b = fract( shininess / 256.0 );","tmp.g = floor( shininess / 256.0 ) / 256.0;","return tmp;","}","vec4 packDepth( const in float depth ) {","vec4 enc = vec4( 1.0, 255.0, 65025.0, 16581375.0 ) * depth;","enc = fract( enc );","enc -= enc.yzww * vec4( 1.0/255.0, 1.0/255.0, 1.0/255.0, 0.0 );","return enc;","}"].join("\n"),THREE.DeferredShaderChunk.unpackFloat=["const float unitInverse = 256.0/255.0;","vec3 float_to_vec3( float data ) {","vec3 uncompressed;","uncompressed.z = data / 65536.0;","uncompressed.y = 256.0 * fract( uncompressed.z );","uncompressed.x = 256.0 * fract( uncompressed.y );","return floor( uncompressed ) / 255.0;","}","vec2 float_to_vec21( float data ) {","vec2 uncompressed;","uncompressed.x = floor( data );","uncompressed.y = fract( data ) * unitInverse;","return uncompressed;","}","float unpackDepth( const in vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}"].join("\n"),THREE.DeferredShaderChunk.computeVertexPositionVS=["vec2 texCoord = gl_FragCoord.xy / viewSize;","#ifdef USE_MRT","#ifdef TEXTURE_DEPTH","vec4 texDepth = texture2D( samplerDepth, texCoord );","float z = texDepth.x * 2.0 - 1.0;","#else","vec4 packedDepth = texture2D( samplerDepth, texCoord );","float z = unpackDepth( packedDepth );","#endif","#else","vec4 normalDepth = texture2D( samplerNormalDepth, texCoord );","float z = normalDepth.w;","#endif","if ( z <= 0.0 || z >= 1.0 ) discard;","vec2 xy = texCoord * 2.0 - 1.0;","vec4 vertexPositionProjected = vec4( xy, z, 1.0 );","vec4 vertexPositionVS = matProjInverse * vertexPositionProjected;","vertexPositionVS.xyz /= vertexPositionVS.w;","vertexPositionVS.w = 1.0;"].join("\n"),THREE.DeferredShaderChunk.computeNormal=["#ifdef USE_MRT","vec4 normalTex = texture2D( samplerNormal, texCoord );","vec3 normal = normalTex.xyz * 2.0 - 1.0;","#else","vec3 normal = normalDepth.xyz * 2.0 - 1.0;","#endif","normal = normalize( normal );"].join("\n"),THREE.DeferredShaderChunk.unpackColorMap=["#ifdef USE_MRT","vec4 albedoShininessLo = texture2D( samplerDiffuseRGB, texCoord );","vec3 albedo = albedoShininessLo.rgb * albedoShininessLo.rgb;","vec4 specularColorShininessHi = texture2D( samplerSpecularRGB, texCoord );","vec3 specularColor = specularColorShininessHi.rgb * specularColorShininessHi.rgb;","float shininess = specularColorShininessHi.a * 256.0 * 256.0 + albedoShininessLo.a * 256.0;","vec4 wrapRGBWrapAround = texture2D( samplerWrapRGB, texCoord );","vec3 wrapRGB = wrapRGBWrapAround.rgb;","float wrapAround = sign( wrapRGBWrapAround.a - 0.5 );","float lightMapIntensity = normalTex.a;","#else","vec4 colorMap = texture2D( samplerColor, texCoord );","vec3 albedo = float_to_vec3( abs( colorMap.x ) );","albedo *= albedo;","vec3 specularColor = float_to_vec3( abs( colorMap.y ) );","specularColor *= specularColor;","vec3 wrapRGB = float_to_vec3( abs( colorMap.w ) );","vec2 shininessLightmap = float_to_vec21( abs( colorMap.z ) );","float shininess = shininessLightmap.x;","float lightMapIntensity = shininessLightmap.y;","float wrapAround = sign( colorMap.z );","#endif"].join("\n"),THREE.DeferredShaderChunk.computeDiffuse=["float dotLNUnclamped = dot( lightVector, normal );","float dotLN = max( dotLNUnclamped, 0.0 );","vec3 diffuse = vec3( dotLN );","if ( wrapAround < 0.0 ) {","#ifdef SKIN_HQ","float curvature = length( fwidth( normal ) ) / length( fwidth( vertexPositionVS.xyz ) );","diffuse = PSSFitFunction( dotLNUnclamped, curvature );","#else","float dotLNHalf = max( 0.25 * dotLNUnclamped + 0.25, 0.0 );","diffuse = mix( diffuse, vec3( dotLNHalf ), wrapRGB );","#endif","}"].join("\n"),THREE.DeferredShaderChunk.geometryFactor=["float SmithGeometryFactor1( vec3 H, vec3 V, vec3 N, float shininess ) {","float dotVN = dot( V, N );","float dotVH = dot( V, H );","if ( ( dotVH / dotVN ) <= 0.0 ) return 0.0;","float f = acos( dotVN );","float a = sqrt( 0.5 * shininess + 1.0 ) / tan( f );","float G = 1.0;","if ( a < 1.6 )","G = ( 3.535 * a + 2.181 * a * a ) / ( 1.0 + 2.276 * a + 2.577 * a * a );","return G;","}","float SmithGeometryFactor2( float dotLN, vec3 V, vec3 N, float shininess ) {","float dotNV = max( dot( N, V ), 0.0 );","float a = 1.0 / ( sqrt( 0.7854 * shininess + 1.571 ) );","return 1.0 / ( ( dotLN * ( 1.0 - a ) + a ) * ( dotNV * ( 1.0 - a ) + a ) );","}","float KelemenGeometryFactor( float dotLH ) {","return 1.0 / ( dotLH * dotLH );","}","float GGX_SchlickGeometryFactor_V1( in float k, in float dotNX ) {","return dotNX / ( dotNX * ( 1.0 - k ) + k );","}","float GGX_SchlickGeometryFactor_V2( in float k, in float dotNX ) {","return 1.0 / ( dotNX + sqrt( k + ( 1.0 - k ) * dotNX * dotNX ) );","}"].join("\n"),THREE.DeferredShaderChunk.environmentBRDF=["vec3 EnvironmentBRDF( float gloss, float dotNV, vec3 rf0 ) {","vec4 t = vec4( 1.0 / 0.96, 0.475, ( 0.0275 - 0.25 * 0.04 ) / 0.96, 0.25 );","t *= vec4( gloss );","t += vec4( 0.0, 0.0, ( 0.015 - 0.75 * 0.04 ) / 0.96, 0.75 );","float a0 = t.x * min( t.y, exp2( -9.28 * dotNV ) ) + t.z;","float a1 = t.w;","return clamp( a0 + rf0 * ( a1 - a0 ), 0.0, 1.0 );","}"].join("\n"),THREE.DeferredShaderChunk.specularOcclusion=["float computeSpecOcclusion( float NdotV, float AO, float roughness ) {","return saturate( pow( NdotV + AO, exp2( -16.0 * roughness - 1.0 ) ) - 1.0 + AO );","}"].join("\n"),THREE.DeferredShaderChunk.specularBRDF=["float GGX_Specular( in float m, in vec3 n, in vec3 h, in vec3 v, in vec3 l ) {","float nDotH = saturate( dot( n, h ) );","float nDotL = saturate( dot( n, l ) );","float nDotV = saturate( dot( n, v ) );","float nDotH2 = nDotH * nDotH;","float m2 = pow( m, 4.0 );","float d = m2 / ( pow( nDotH * nDotH * ( m2 - 1.0 ) + 1.0, 2.0 ) );","float v1i = GGX_SchlickGeometryFactor_V2( m2, nDotL );","float v1o = GGX_SchlickGeometryFactor_V2( m2, nDotV );","float vis = v1i * v1o;","return d * vis;","}","float BlinnPhong_Specular( in float shininess, in float dotLN, in float dotNormalHalf, in vec3 eyeVector, in vec3 normal ) {","float specularNormalization = shininess * 0.125 + 0.25;","float geo = SmithGeometryFactor2( dotLN, eyeVector, normal, shininess );","return ( specularNormalization * geo ) * max( pow( dotNormalHalf, shininess ), 0.0 );","}"].join("\n"),THREE.DeferredShaderChunk.computeSpecular=["vec3 eyeVector = normalize( -vertexPositionVS.xyz );","vec3 halfVector = normalize( lightVector + eyeVector );","float dotNormalHalf = max( dot( normal, halfVector ), 0.0 );","float dotLightHalf = max( dot( lightVector, halfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLightHalf, 5.0 );","fresnel *= float( dot( specularColor, vec3( 1.0 ) ) > 0.0 );","#if defined( BRDF_BLINN_PHONG )","vec3 specular = BlinnPhong_Specular( shininess, dotLN, dotNormalHalf, eyeVector, normal ) * ( fresnel * dotLN );","#elif defined( BRDF_GGX )","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","vec3 specular = GGX_Specular( roughness, normal, halfVector, eyeVector, lightVector ) * ( fresnel * dotLN );","#else","vec3 specular = specularColor * max( pow( dotNormalHalf, shininess ), 0.0 ) * dotLN;","#endif"].join("\n"),THREE.DeferredShaderChunk.combine=["vec3 light = lightIntensity * lightColor;","mgl_FragColor = vec4( light * ( albedo * diffuse + specular ), attenuation );"].join("\n"),THREE.DeferredShaderChunk.directionalOcclusion=["#ifdef OCCLUSION_ENABLED","uniform mat4 matProj;","float checkOcclusion( in vec3 pointVS ) {","vec4 pointCS = matProj * vec4( pointVS, 1.0 );","pointCS.xyz /= pointCS.w;","vec2 pointUV = pointCS.xy * 0.5 + 0.5;","#ifdef USE_MRT","#ifdef TEXTURE_DEPTH","vec4 depthSample = texture2D( samplerDepth, pointUV );","float sampleZ = depthSample.x * 2.0 - 1.0;","#else","vec4 depthSample = texture2D( samplerDepth, pointUV );","float sampleZ = unpackDepth( depthSample );","#endif","#else","vec4 normalDepthSample = texture2D( samplerNormalDepth, pointUV );","float sampleZ = normalDepthSample.w;","#endif","float occlusion = 1.0;","if ( pointCS.z > sampleZ ) occlusion = 0.0;","return occlusion;","}","vec2 rand( const in vec2 coord ) {","float nx = dot ( coord, vec2( 12.9898, 78.233 ) );","float ny = dot ( coord, vec2( 25.9796, 156.466 ) );","vec2 noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );","return noise;","}","#endif"].join("\n"),THREE.DeferredShaderChunk.shadowMapPCFSoft=["#ifdef USE_SHADOWSAMPLER","float sampleShadowPCFSoft( sampler2DShadow shadowMap, vec2 shadowMapSize, vec2 shadowCoord, float vertexDepth ) {","vec2 pixelOffset = vec2( 1.0 ) / shadowMapSize;","float dx0 = -pixelOffset.x;","float dy0 = -pixelOffset.y;","float dx1 =  pixelOffset.x;","float dy1 =  pixelOffset.y;","float shadowValue = 0.0;","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx0, dy0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( 0.0, dy0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx1, dy0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx0, 0.0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord, 				      vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx1, 0.0 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx0, dy1 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( 0.0, dy1 ), vertexDepth ) );","shadowValue += texture( shadowMap, vec3( shadowCoord + vec2( dx1, dy1 ), vertexDepth ) );","shadowValue /= 9.0;","return 1.0 - shadowValue;","}","#else","float sampleShadowPCFSoft( sampler2D shadowMap, vec2 shadowMapSize, vec2 shadowCoord, float vertexDepth ) {","vec2 pixelOffset = vec2( 1.0 ) / shadowMapSize;","float dx0 = -pixelOffset.x;","float dy0 = -pixelOffset.y;","float dx1 =  pixelOffset.x;","float dy1 =  pixelOffset.y;","float shadowDepth;","mat3 shadowKernel;","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, dy0 ) ).x;","shadowKernel[0][0] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, 0.0 ) ).x;","shadowKernel[0][1] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx0, dy1 ) ).x;","shadowKernel[0][2] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( 0.0, dy0 ) ).x;","shadowKernel[1][0] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord ).x;","shadowKernel[1][1] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( 0.0, dy1 ) ).x;","shadowKernel[1][2] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, dy0 ) ).x;","shadowKernel[2][0] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, 0.0 ) ).x;","shadowKernel[2][1] = float( vertexDepth > shadowDepth );","shadowDepth = texture2D( shadowMap, shadowCoord + vec2( dx1, dy1 ) ).x;","shadowKernel[2][2] = float( vertexDepth > shadowDepth );","shadowKernel *= 0.25;","vec2 fractionalCoord = 1.0 - fract( shadowCoord * shadowMapSize );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","float shadowValue = dot( shadowValues, vec4( 1.0 ) );","return shadowValue;","}","#endif"].join("\n"),THREE.DeferredShaderChunk.normalsParsFragment=["#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( USE_DISPLACEMENTMAP )","varying vec3 vViewPosition;","#endif",THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.derivativemap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,"#if defined( USE_BUMPDETAILMAP ) || defined( USE_NORMALDETAILMAP )","uniform vec3 detailRepeatScale;","#endif","varying vec3 normalView;"].join("\n"),THREE.DeferredShaderChunk.normalsFragment=["#if defined( USE_DISPLACEMENTMAP )","normal = perturbNormalArb( vViewPosition, normal, dHdxy_fwd( displacementMap, uvCoord, displacementNormalScale ) );","#endif","#if defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP )","#ifdef USE_NORMALDETAILMAP","vec4 normalDetail = texture2D( normalDetailMap, uvCoord *  detailRepeatScale.xy ) * 2.0 - 1.0;","normalDetail.rgb = normalize( normalDetail.rgb * vec3( detailRepeatScale.zz, 1.0 ) ) * 0.5 + 0.5;","vec3 n1 = normalGloss.xyz  * vec3(  2.0,  2.0, 2.0 ) + vec3( -1.0, -1.0,  0.0 );","vec3 n2 = normalDetail.xyz * vec3( -2.0, -2.0, 2.0 ) + vec3(  1.0,  1.0, -1.0 );","normalGloss.xyz  = normalize( n1 * dot( n1, n2 ) / n1.z - n2 ) * 0.5 + 0.5;","#endif","normal = perturbNormal2Arb( vViewPosition, normal, normalGloss.xyz, uvCoord );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( vViewPosition, normal, dHdxy_fwd( bumpMap, uvCoord, bumpScale ) );","#endif","#ifdef USE_BUMPDETAILMAP","normal = perturbNormalArb( vViewPosition, normal, dHdxy_fwd( bumpDetailMap, uvCoord * detailRepeatScale.xy, detailRepeatScale.z ) );","#endif","#if defined ( USE_NORMALDETAILMAP ) && ! ( defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) )","vec4 normalDetail = texture2D( normalDetailMap, uvCoord * detailRepeatScale.xy ) * 2.0 - 1.0;","normalDetail.rgb = normalize( normalDetail.rgb * vec3( detailRepeatScale.zz, 1.0 ) ) * 0.5 + 0.5;","normal = perturbNormal2Arb( vViewPosition, normal, normalDetail.xyz, uvCoord * detailRepeatScale.xy );","#endif","#ifdef DOUBLE_SIDED","float flipNormal = 2.0 * float( gl_FrontFacing ) - 1.0;","normal = flipNormal * normal;","#endif","normal = normal * 0.5 + 0.5;"].join("\n"),THREE.DeferredShaderChunk.colorsFragment=["float shininess = specular.a;","float wrapAround = diffuse.a;","vec4 diffuseColor  = vec4( diffuse.rgb, 1.0 );","vec4 specularColor = vec4( specular.rgb, 1.0 );","#ifdef USE_MAP","#ifdef PARTICLE","vec2 texCoord = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","#else","vec2 texCoord = uvCoord;","#endif","vec4 diffuseMapColor = texture2D( map, texCoord );","diffuseColor *= diffuseMapColor;","#endif","#ifdef ALPHATEST","if ( diffuseColor.a < ALPHATEST ) discard;","#endif","#ifdef USE_COLOR","diffuseColor.rgb *= vColor;","#endif",THREE.ShaderChunk.specularmap_fragment,"specularColor.rgb *= specularMapColor;","#ifdef USE_LIGHTMAP","float lightMapIntensity = texture2D( lightMap, uvCoord ).r;","#ifdef LIGHTMAP_GAMMA","lightMapIntensity *= lightMapIntensity;","#endif","#else","float lightMapIntensity = 1.0;","#endif","#if defined( USE_GLOSSMAP )","vec4 glossMapVal = texture2D( glossMap, uvCoord );","float gloss = exp2( 13.0 * glossMapVal.r + 1.0 );","#elif defined( USE_NORMALGLOSSMAP )","float gloss = exp2( 13.0 * normalGloss.a + 1.0 );","#else","float gloss = 1.0;","#endif","shininess = clamp( shininess * gloss, 0.0, 8192.0 );"].join("\n"),THREE.DeferredShaderChunk.hemiTerm=["const float maxShininess = 8192.0;","float gloss = min( shininess / maxShininess, 1.0 );","vec3 fresnelHemi = EnvironmentBRDF( gloss, dot( eyeVector, halfVector ), specularColor );","float dotProductHemi = dot( normal, lightVectorHemi );","float hemiDiffuseWeightUnclamped = 0.5 * dotProductHemi + 0.5;","float hemiDiffuseWeight = clamp( hemiDiffuseWeightUnclamped, 0.0, 1.0 );","vec3 diffuseHemi;","if ( wrapAround < 0.0 ) {","float hemiDiffuseWeightUnclamped2 = -0.5 * dotProductHemi + 0.5;","float hemiDiffuseWeight2 = clamp( hemiDiffuseWeightUnclamped2, 0.0, 1.0 );","diffuseHemi = 0.75 * mix( lightColorGround, lightColorSky, hemiDiffuseWeight ) + 0.25 * mix( lightColorGround, lightColorSky, hemiDiffuseWeight2 );","} else {","diffuseHemi = mix( lightColorGround, lightColorSky, hemiDiffuseWeight );","}","diffuseHemi *= ( 1.0 - fresnelHemi );","vec3 R = reflect( -eyeVector, normal );","R = normalize( R );","float hemiSpecularWeight = clamp( dot( R, lightVectorHemi ) * 0.5 + 0.5, 0.0, 1.0 );","vec3 specularHemi = fresnelHemi * mix( lightColorGround, lightColorSky, hemiSpecularWeight );","float diffuseOcclusion = lightMapIntensity;","#ifdef USE_SSAO","float ssaoOcclusion = texture2D( samplerSSAO, texCoord ).x;","ssaoOcclusion *= ssaoOcclusion;","diffuseOcclusion = min( diffuseOcclusion, ssaoOcclusion );","#endif","float NdotV = dot( normal, eyeVector );","float specularOcclusion = computeSpecOcclusion( NdotV, diffuseOcclusion, roughness );","vec3 hemiTerm = lightIntensityHemi * ( albedo * diffuseHemi * diffuseOcclusion + specularHemi * specularOcclusion );"].join("\n"),THREE.DeferredShaderChunk.shadowPrep=["float sectorOcclusion = 1.0;","vec4 posLightCS = matShadow[ i ] * vertexPositionVS;","vec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );"].join("\n"),THREE.DeferredShaderChunk.shadowCheck=["float vertexDepth = posLightCS.z / posLightCS.w;","#if defined( DEPTH_TEXTURES )","vertexDepth = vertexDepth * 0.5 + 0.5;","#endif","#if !defined( SLOPE_DEPTH_BIAS )","vertexDepth -= shadowBias;","#endif","#if defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadowValue = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT_HQ )","vec2 pixelOffset = vec2( 2.0 ) / shadowMapSize;","float shadowValue0 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2( -pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue1 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2(  pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue2 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2( 0.0, -pixelOffset.y ), vertexDepth );","float shadowValue3 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2( 0.0,  pixelOffset.y ), vertexDepth );","float shadowValue = ( shadowValue0 + shadowValue1 + shadowValue2 + shadowValue3 ) * 0.25;","#else","#ifdef USE_SHADOWSAMPLER","float shadowValue = 1.0 - texture( samplerShadowMap[ i ], vec3( shadowCoord, vertexDepth ) );","#else","float shadowDepth = texture2D( samplerShadowMap[ i ], shadowCoord ).x;","float shadowValue = float( vertexDepth > shadowDepth );","#endif","#endif","sectorOcclusion = 1.0 - shadowDarkness * shadowValue;","occlusion *= sectorOcclusion;"].join("\n"),THREE.DeferredShaderChunk.directionalShadows=["float occlusion = 1.0;","#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[5];","frustumColors[0] = vec3( 1.0, 0.0, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.0 );","frustumColors[2] = vec3( 0.0, 0.0, 1.0 );","frustumColors[3] = vec3( 0.0, 0.5, 1.0 );","frustumColors[4] = vec3( 0.2, 0.5, 1.0 );","vec3 debugColor = vec3( 1.0 );","#endif","#ifdef OSX_HACK","bool found = false;","#endif","for ( int i = 0; i < SHADOWMAP_COUNT; i ++ ) {",THREE.DeferredShaderChunk.shadowPrep,"#ifdef OSX_HACK","if ( inFrustum && !found ) {","#else","if ( inFrustum ) {","#endif",THREE.DeferredShaderChunk.shadowCheck,"#ifdef SHADOWMAP_DEBUG","debugColor *= frustumColors[ i ];","#endif","#if SHADOWMAP_COUNT > 1","#ifdef OSX_HACK","found = true;","#else","break;","#endif","#endif","}","}","#endif"].join("\n"),THREE.DeferredShaderChunk.directionalProjectedTexture=["#ifdef PROJECTED_TEXTURE","vec4 posTextureCS = matTexture * vertexPositionVS;","#ifdef PROJECTED_SHADOW","vec2 textureCoord = ( posTextureCS.xy / posTextureCS.w ) * 0.5 + 0.5;","bvec4 inTexFrustumVec = bvec4 ( textureCoord.x >= 0.0, textureCoord.x <= 1.0, textureCoord.y >= 0.0, textureCoord.y <= 1.0 );","bool inTexFrustum = all( inTexFrustumVec );","if ( inTexFrustum ) {","vec4 textureColor = texture2DProj( samplerTexture, posTextureCS, textureBias );","float translucency = 1.0 - textureColor.r * shadowDarkness;","occlusion = min( occlusion, translucency );","}","#else","vec4 textureColor = texture2DProj( samplerTexture, posTextureCS, textureBias );","textureColor.rgb *= textureColor.rgb;","diffuse *= textureColor.rgb;","specular *= textureColor.rgb;","#endif","#endif"].join("\n"),THREE.DeferredShaders.combined={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.particle,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacement,THREE.DeferredUniformsLib.wireframe,{diffuse:{type:"v4",value:new THREE.Vector4(1,1,1,1)},specular:{type:"v4",value:new THREE.Vector4(.1,.1,.1,30)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)},detailRepeatScale:{type:"v3",value:new THREE.Vector3(1,1,1)},glossMap:{type:"t",value:null},specularMap:{type:"t",value:null},parallaxScale:{type:"f",value:1}}]),fragmentShader:["uniform vec4 diffuse;","uniform vec4 specular;","uniform vec3 wrapRGB;","#ifndef TEXTURE_DEPTH","varying vec4 clipPos;","#endif",THREE.DeferredShaderChunk.wireframeParsFragment,THREE.DeferredShaderChunk.normalsParsFragment,THREE.DeferredShaderChunk.packFloat,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.glossmap_pars_fragment,THREE.ShaderChunk.parallax_pars_fragment,THREE.ShaderChunk.displacementmap_pars_fragment,"void main() {","#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined ( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) || defined( USE_DISPLACEMENTMAP ) )","vec2 uvCoord = vUv;","#endif","vec3 normal = normalize( normalView );","#if defined( USE_BUMPMAP ) && defined( USE_PARALLAX )","vec3 eyeVector = normalize( -vViewPosition );","#endif",THREE.ShaderChunk.parallax_fragment,"#if defined( USE_NORMALGLOSSMAP ) || defined( USE_NORMALMAP )","vec4 normalGloss = texture2D( normalMap, uvCoord );","#endif",THREE.DeferredShaderChunk.normalsFragment,THREE.DeferredShaderChunk.colorsFragment,THREE.DeferredShaderChunk.wireframeFragment,"float shininessLo = fract( shininess / 256.0 );","float shininessHi = floor( shininess / 256.0 ) / 256.0;","mgl_FragData[ 0 ] = vec4( diffuseColor.rgb, shininessLo );","mgl_FragData[ 1 ] = vec4( specularColor.rgb, shininessHi );","mgl_FragData[ 2 ] = vec4( wrapRGB.rgb, wrapAround + 0.5 );","mgl_FragData[ 3 ] = vec4( normal.xyz, lightMapIntensity );","#ifndef TEXTURE_DEPTH","mgl_FragData[ 4 ] = vec4( packDepth( clipPos.z / clipPos.w ) );","#endif","}"].join("\n"),vertexShader:[THREE.DeferredShaderChunk.wireframeParsVertex,THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.particle_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( USE_DISPLACEMENTMAP )","varying vec3 vViewPosition;","#endif","varying vec3 normalView;","#ifndef TEXTURE_DEPTH","varying vec4 clipPos;","#endif","void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.begin_nor_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.end_nor_vertex,THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.end_pos_vertex,THREE.ShaderChunk.particle_vertex,"normalView = transformedNormal;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( USE_DISPLACEMENTMAP )","vViewPosition = mvPosition.xyz;","#endif","#ifdef USE_COLOR","vColor = color;","#endif","#ifndef TEXTURE_DEPTH","clipPos = gl_Position;","#endif",THREE.DeferredShaderChunk.wireframeVertex,"}"].join("\n")},THREE.DeferredShaders.occluder={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.particle,THREE.UniformsLib.displacement,{alphaMap:{type:"t",value:null},detailRepeatScale:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["varying vec4 clipPos;","#ifdef ALPHATEST","uniform sampler2D alphaMap;","varying vec2 vUv;","#endif",THREE.DeferredShaderChunk.packFloat,"void main() {","#ifdef ALPHATEST","vec2 textureCoord;","#ifdef PARTICLE","textureCoord = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","#else","textureCoord = vUv;","#endif","float alphaValue = texture2D( alphaMap, textureCoord ).a;","if ( alphaValue < ALPHATEST ) discard;","#endif","mgl_FragColor = vec4( packDepth( clipPos.z / clipPos.w ) );","}"].join("\n"),vertexShader:[THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.particle_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"#ifdef ALPHATEST","varying vec2 vUv;","#endif","varying vec4 clipPos;","void main() {","#if !defined( PARTICLE ) &&( defined( ALPHATEST ) || defined( USE_DISPLACEMENTMAP ) )","vec2 transformedUV = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif",THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.end_pos_vertex,THREE.ShaderChunk.particle_vertex,"#ifdef ALPHATEST","vUv = transformedUV;","#endif","clipPos = gl_Position;","}"].join("\n")},THREE.DeferredShaders.color={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.particle,THREE.UniformsLib.displacement,THREE.DeferredUniformsLib.wireframe,{diffuse:{type:"v4",value:new THREE.Vector4(1,1,1,1)},specular:{type:"v4",value:new THREE.Vector4(.1,.1,.1,30)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)},glossMap:{type:"t",value:null},specularMap:{type:"t",value:null},normalMap:{type:"t",value:null},bumpMap:{type:"t",value:null},samplerNormalDepth:{type:"t",value:null,shared:!0},viewSize:{type:"v2",value:new THREE.Vector2(800,600),shared:!0},parallaxScale:{type:"f",value:1}}]),fragmentShader:["uniform vec4 diffuse;","uniform vec4 specular;","uniform vec3 wrapRGB;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,"#ifdef USE_NORMALGLOSSMAP","uniform sampler2D normalMap;","#endif","#if defined( USE_PARALLAX ) && defined( USE_BUMPMAP )","uniform sampler2D bumpMap;","varying vec3 normalView;","varying vec3 vViewPosition;","#endif",THREE.DeferredShaderChunk.wireframeParsFragment,THREE.ShaderChunk.glossmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.parallax_pars_fragment,THREE.DeferredShaderChunk.packFloat,"void main() {","#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined ( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) )","vec2 uvCoord = vUv;","#endif","#if defined( USE_PARALLAX ) && defined( USE_BUMPMAP )","vec3 normal = normalize( normalView );","vec3 eyeVector = normalize( -vViewPosition );","#endif",THREE.ShaderChunk.parallax_fragment,"#ifdef USE_NORMALGLOSSMAP","vec4 normalGloss = texture2D( normalMap, uvCoord );","#endif",THREE.DeferredShaderChunk.colorsFragment,THREE.DeferredShaderChunk.wireframeFragment,"float compressedDiffuse = vec3_to_float( diffuseColor.rgb );","float compressedSpecular = vec3_to_float( specularColor.rgb );","float compressedWrapRGB = vec3_to_float( wrapRGB.rgb );","float wrapAroundShininessOcclusion = wrapAround * vec21_to_float( shininess, lightMapIntensity );","mgl_FragColor = vec4( compressedDiffuse, compressedSpecular, wrapAroundShininessOcclusion, compressedWrapRGB );","}"].join("\n"),vertexShader:[THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.particle_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,THREE.DeferredShaderChunk.wireframeParsVertex,"#if defined( USE_PARALLAX ) && defined( USE_BUMPMAP )","varying vec3 normalView;","varying vec3 vViewPosition;","#endif","void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.begin_nor_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.end_nor_vertex,THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.end_pos_vertex,THREE.ShaderChunk.particle_vertex,"#if defined( USE_PARALLAX ) && defined( USE_BUMPMAP )","normalView = transformedNormal;","vViewPosition = mvPosition.xyz;","#endif","#ifdef USE_COLOR","vColor = color;","#endif",THREE.DeferredShaderChunk.wireframeVertex,"}"].join("\n")},THREE.DeferredShaders.normalDepth={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacement,{alphaMap:{type:"t",value:null},detailRepeatScale:{type:"v3",value:new THREE.Vector3(1,1,1)},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},parallaxScale:{type:"f",value:1}}]),fragmentShader:["#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( ALPHATEST ) || defined( USE_DISPLACEMENTMAP )","varying vec2 vUv;","#endif","#ifdef ALPHATEST","uniform sampler2D alphaMap;","#endif",THREE.DeferredShaderChunk.normalsParsFragment,THREE.ShaderChunk.parallax_pars_fragment,THREE.ShaderChunk.displacementmap_pars_fragment,"varying vec4 clipPos;","void main() {","#if !defined( PARTICLE ) && ( defined( USE_MAP ) || defined( USE_LIGHTMAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined ( USE_NORMALGLOSSMAP ) || defined ( USE_GLOSSMAP ) || defined( USE_SPECULARMAP ) || defined( ALPHATEST ) || defined( USE_DISPLACEMENTMAP ) )","vec2 uvCoord = vUv;","#endif","vec3 normal = normalize( normalView );","#if defined( USE_BUMPMAP ) && defined( USE_PARALLAX )","vec3 eyeVector = normalize( -vViewPosition );","#endif",THREE.ShaderChunk.parallax_fragment,"#ifdef ALPHATEST","vec2 textureCoord;","#ifdef PARTICLE","textureCoord = vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y );","#else","textureCoord = uvCoord;","#endif","float alphaValue = texture2D( alphaMap, textureCoord ).a;","if ( alphaValue < ALPHATEST ) discard;","#endif","#if defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP )","vec4 normalGloss = texture2D( normalMap, uvCoord );","#endif",THREE.DeferredShaderChunk.normalsFragment,"mgl_FragColor = vec4( normal, clipPos.z / clipPos.w );","}"].join("\n"),vertexShader:["varying vec3 normalView;","varying vec4 clipPos;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( ALPHATEST )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP )","varying vec3 vViewPosition;","#endif",THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.particle_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.begin_nor_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.end_nor_vertex,THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.end_pos_vertex,THREE.ShaderChunk.particle_vertex,"normalView = transformedNormal;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP ) || defined( USE_DISPLACEMENTMAP )","vViewPosition = mvPosition.xyz;","#endif","clipPos = gl_Position;","}"].join("\n")},THREE.DeferredShaders.depth={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.displacement,{slopeScale:{type:"f",value:2,shared:!0},slopeBias:{type:"f",value:0,shared:!0},slopeMax:{type:"f",value:.001,shared:!0},depthTextureBias:{type:"f",value:5e-4,shared:!0},alphaMap:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}}]),fragmentShader:["#ifdef ALPHATEST","uniform sampler2D alphaMap;","varying vec2 vUv;","#endif","#ifndef DEPTH_TEXTURES","#ifdef SLOPE_DEPTH_BIAS","uniform float slopeScale;","uniform float slopeBias;","uniform float slopeMax;","#endif","varying vec4 clipPos;","#endif","void main() {","#ifdef ALPHATEST","float alphaValue = texture2D( alphaMap, vUv ).a;","if ( alphaValue < ALPHATEST ) discard;","#endif","#ifndef DEPTH_TEXTURES","float depth = clipPos.z / clipPos.w;","#ifdef SLOPE_DEPTH_BIAS","float dx = dFdx( depth );","float dy = dFdy( depth );","float m = max( abs(dx), abs(dy) );","m = min( m, slopeMax );","mgl_FragColor.x = depth + m * slopeScale + slopeBias;","#else","mgl_FragColor.x = depth;","#endif","#endif","}"].join("\n"),vertexShader:["#ifdef ALPHATEST","varying vec2 vUv;","#endif","#if defined( ALPHATEST ) || defined( USE_DISPLACEMENTMAP )","uniform vec4 offsetRepeat;","#endif","#ifdef DEPTH_TEXTURES","uniform float depthTextureBias;","#else","varying vec4 clipPos;","#endif",THREE.ShaderChunk.instances_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.particle_pars_vertex,THREE.ShaderChunk.displacement_pars_vertex,"void main() {","#if defined( ALPHATEST ) || defined( USE_DISPLACEMENTMAP )","vec2 transformedUV = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_pos_vertex,THREE.ShaderChunk.displacement_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.end_pos_vertex,THREE.ShaderChunk.particle_vertex,"#ifndef DEPTH_TEXTURES","clipPos = gl_Position;","#else","gl_Position.z += depthTextureBias;","#endif","#ifdef ALPHATEST","vUv = transformedUV;","#endif","}"].join("\n")},THREE.DeferredShaders.pointLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,THREE.DeferredUniformsLib.multiShadowMaps,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightDistance:{type:"f",value:1}}]),fragmentShader:["uniform float lightDistance;","uniform float lightIntensity;","uniform vec3 lightColor;","uniform vec3 lightPositionVS;","uniform mat4 matProjInverse;",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.multiShadowMapsUniforms,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,"vec3 lightVector = lightPositionVS - vertexPositionVS.xyz;","float distance = length( lightVector );","if ( distance > lightDistance ) discard;",THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"lightVector = lightVector / distance;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,"diffuse -= diffuse * fresnel;","const float cutoff = 0.3;","float denom = distance / lightDistance + 1.0;","float attenuation = 1.0 / ( denom * denom );","attenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );","attenuation = max( attenuation, 0.0 );","attenuation *= attenuation;","float occlusion = 1.0;","#ifdef USE_SHADOWMAP","for ( int i = 0; i < SHADOWMAP_COUNT; i ++ ) {",THREE.DeferredShaderChunk.shadowPrep,"if ( inFrustum && posLightCS.z >= 0.0 ) {",THREE.DeferredShaderChunk.shadowCheck,"#ifndef OSX_HACK","break;","#endif","}","}","#endif","attenuation *= occlusion;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderGeometry},THREE.DeferredShaders.sphereLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,THREE.DeferredUniformsLib.multiShadowMaps,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightDistance:{type:"f",value:1},lightRadius:{type:"f",value:1}}]),fragmentShader:["uniform float lightRadius;","uniform float lightDistance;","uniform float lightIntensity;","uniform vec3 lightColor;","uniform vec3 lightPositionVS;","uniform mat4 matProjInverse;",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.multiShadowMapsUniforms,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,"vec3 lightVectorFull = lightPositionVS - vertexPositionVS.xyz;","float distance = length( lightVectorFull );","if ( distance > lightDistance ) discard;",THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightVectorFull / distance;",THREE.DeferredShaderChunk.computeDiffuse,"vec3 eye = normalize( -vertexPositionVS.xyz );","vec3 reflectVS = reflect( eye, normal );","vec3 centerToRay = lightVectorFull - dot( lightVectorFull, reflectVS ) * reflectVS;","vec3 closestPoint = lightVectorFull - centerToRay * saturate( lightRadius / length( centerToRay ) );","lightVector = normalize( closestPoint );","dotLN = max( dot( lightVector, normal ), 0.0 );",THREE.DeferredShaderChunk.computeSpecular,"float alpha = roughness * roughness;","float alphaPrime = saturate( alpha + 0.5 * saturate( lightRadius / distance ) );","float sphereNormalization = alpha / alphaPrime;","sphereNormalization *= sphereNormalization;","specular *= sphereNormalization;","diffuse -= diffuse * fresnel;","const float cutoff = 0.3;","float denom = distance / lightDistance + 1.0;","float attenuation = 1.0 / ( denom * denom );","attenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );","attenuation = max( attenuation, 0.0 );","attenuation *= attenuation;","float occlusion = 1.0;","#ifdef USE_SHADOWMAP","for ( int i = 0; i < SHADOWMAP_COUNT; i ++ ) {",THREE.DeferredShaderChunk.shadowPrep,"if ( inFrustum && posLightCS.z >= 0.0 ) {",THREE.DeferredShaderChunk.shadowCheck,"#ifndef OSX_HACK","break;","#endif","}","}","#endif","attenuation *= occlusion;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderGeometry},THREE.DeferredShaders.tubeLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,{matProj:{type:"m4",value:new THREE.Matrix4,shared:!0},matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightPosition0VS:{type:"v3",value:new THREE.Vector3(0,-1,0)},lightPosition1VS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightDistance:{type:"f",value:1},lightRadius:{type:"f",value:1}}]),fragmentShader:["uniform float lightRadius;","uniform float lightDistance;","uniform float lightIntensity;","uniform vec3 lightColor;","uniform vec3 lightPosition0VS;","uniform vec3 lightPosition1VS;","uniform mat4 matProjInverse;",THREE.ShaderChunk.utils_pars_fragment,THREE.DeferredShaderChunk.multiShadowMapsUniforms,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,THREE.DeferredShaderChunk.directionalOcclusion,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector0 = lightPosition0VS - vertexPositionVS.xyz;","vec3 lightVector1 = lightPosition1VS - vertexPositionVS.xyz;","float length0 = length( lightVector0 );","float length1 = length( lightVector1 );","float a = saturate( 0.5 * ( dot( normal, lightVector0 ) / length0 + dot( normal, lightVector1 ) / length1 ) );","float b = ( length0 * length1 + dot( lightVector0, lightVector1 ) ) * 0.5 + 1.0;","float dotLN = a;","vec3 diffuse = vec3( dotLN );","vec3 eye = normalize( -vertexPositionVS.xyz );","vec3 reflectVS = reflect( eye, normal );","vec3 lightVectorD = lightVector1 - lightVector0;","float lengthD = length( lightVectorD );","float dotRD = dot( reflectVS, lightVectorD );","float ta = dot( reflectVS, lightVector0 ) * dotRD - dot( lightVector0, lightVectorD );","float tb = lengthD * lengthD - dotRD * dotRD;","float t = ta / tb;","vec3 closestPoint = lightVector0 + saturate( t ) * lightVectorD;","vec3 lightVectorClosest = closestPoint;","vec3 centerToRay = lightVectorClosest - dot( lightVectorClosest, reflectVS ) * reflectVS;","closestPoint = lightVectorClosest - centerToRay * saturate( lightRadius / length( centerToRay ) );","vec3 lightVector = normalize( closestPoint );",THREE.DeferredShaderChunk.computeSpecular,"vec3 lightVectorFull = ( lightPosition0VS + lightPosition1VS ) * 0.5 - vertexPositionVS.xyz;","float distance = length( lightVectorFull );","float alpha = roughness * roughness;","float alphaPrime = saturate( alpha + 0.5 * saturate( lightRadius / distance ) );","float sphereNormalization = alpha / alphaPrime;","sphereNormalization *= sphereNormalization;","float alphaPrimeLine = saturate( alpha + 0.5 * saturate( lengthD / distance ) );","float lineNormalization = alpha / alphaPrimeLine;","specular *= sphereNormalization;","specular *= lineNormalization;","diffuse -= diffuse * fresnel;","#ifdef OCCLUSION_ENABLED","const float occlusionScale = 0.9;","vec2 r = rand( texCoord ) + 0.1;","float occlusionDistanceC = occlusionScale * r.x;","float occlusionDistance0 = occlusionScale * r.y;","float occlusionDistance1 = occlusionScale * rand( texCoord + 0.01 ).y + 0.1;","float occlusionC = checkOcclusion( vertexPositionVS.xyz + occlusionDistanceC * lightVector );","float occlusion0 = checkOcclusion( vertexPositionVS.xyz + occlusionDistance0 * lightVector0 / length0 );","float occlusion1 = checkOcclusion( vertexPositionVS.xyz + occlusionDistance1 * lightVector1 / length1 );","float occlusion = ( 0.5 * occlusionC + 0.25 * occlusion0 + 0.25 * occlusion1 );","#else","float occlusion = 1.0;","#endif","float attenuation = 1.0 / b;","attenuation *= occlusion;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.spotLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,THREE.DeferredUniformsLib.projectedTexture,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightDistance:{type:"f",value:1},lightAngleCos:{type:"f",value:1},matShadow:{type:"m4",value:new THREE.Matrix4},samplerShadowMap:{type:"t",value:null},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:.5},shadowBias:{type:"f",value:0}}]),fragmentShader:["uniform vec3 lightPositionVS;","uniform vec3 lightDirectionVS;","uniform vec3 lightColor;","uniform float lightIntensity;","uniform float lightAngleCos;","uniform mat4 matProjInverse;","#ifdef USE_SHADOWMAP","uniform mat4 matShadow;","#ifdef USE_SHADOWSAMPLER","uniform sampler2DShadow samplerShadowMap;","#else","uniform sampler2D samplerShadowMap;","#endif","uniform float shadowBias;","uniform float shadowDarkness;","uniform vec2 shadowMapSize;","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.projectedTextureUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = normalize( lightPositionVS.xyz - vertexPositionVS.xyz );","float rho = dot( lightDirectionVS, lightVector );","if ( rho <= lightAngleCos ) discard;","float theta = lightAngleCos + 0.0001;","float phi = lightAngleCos + 0.05;","const float falloff = 4.0;","float spot = 0.0;","if ( rho >= phi ) {","spot = 1.0;","} else if ( rho <= theta ) {","spot = 0.0;","} else { ","spot = pow( ( rho - theta ) / ( phi - theta ), falloff );","}",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,"diffuse *= spot;","specular *= spot;","diffuse -= diffuse * fresnel;","float occlusion = 1.0;","#ifdef USE_SHADOWMAP","vec4 posLightCS = matShadow * vertexPositionVS;","vec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;","float vertexDepth = posLightCS.z / posLightCS.w;","#if defined( DEPTH_TEXTURES )","vertexDepth = vertexDepth * 0.5 + 0.5;","#endif","#if !defined( SLOPE_DEPTH_BIAS )","vertexDepth -= shadowBias;","#endif","#if defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadowValue = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord, vertexDepth );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT_HQ )","vec2 pixelOffset = vec2( 2.0 ) / shadowMapSize;","float shadowValue0 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2( -pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue1 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2(  pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue2 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2( 0.0, -pixelOffset.y ), vertexDepth );","float shadowValue3 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2( 0.0,  pixelOffset.y ), vertexDepth );","float shadowValue = ( shadowValue0 + shadowValue1 + shadowValue2 + shadowValue3 ) * 0.25;","#else","#ifdef USE_SHADOWSAMPLER","float shadowValue = 1.0 - texture( samplerShadowMap, vec3( shadowCoord, vertexDepth ) );","#else","float shadowDepth = texture2D( samplerShadowMap, shadowCoord ).x;","float shadowValue = float( vertexDepth > shadowDepth );","#endif","#endif","occlusion = 1.0 - shadowDarkness * shadowValue;","#endif","#ifdef PROJECTED_TEXTURE","vec4 posTextureCS = matTexture * vertexPositionVS;","#ifdef PROJECTED_SHADOW","vec2 textureCoord = ( posTextureCS.xy / posTextureCS.w ) * 0.5 + 0.5;","bvec4 inTexFrustumVec = bvec4 ( textureCoord.x >= 0.0, textureCoord.x <= 1.0, textureCoord.y >= 0.0, textureCoord.y <= 1.0 );","bool inTexFrustum = all( inTexFrustumVec );","if ( inTexFrustum ) {","vec4 textureColor = texture2DProj( samplerTexture, posTextureCS, textureBias );","float translucency = 1.0 - textureColor.r * shadowDarkness;","occlusion = min( occlusion, translucency );","}","#else","vec4 textureColor = texture2DProj( samplerTexture, posTextureCS );","textureColor.xyz *= textureColor.xyz;","diffuse *= textureColor.xyz;","specular *= textureColor.xyz;","#endif","#endif","float attenuation = occlusion;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.directionalLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,THREE.DeferredUniformsLib.multiShadowMaps,THREE.DeferredUniformsLib.projectedTexture,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1}}]),fragmentShader:["uniform float lightIntensity;","uniform vec3 lightColor;","uniform vec3 lightDirectionVS;","uniform mat4 matProjInverse;",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.multiShadowMapsUniforms,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.projectedTextureUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVS;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,THREE.DeferredShaderChunk.directionalShadows,THREE.DeferredShaderChunk.directionalProjectedTexture,"diffuse -= diffuse * fresnel;","float attenuation = occlusion;",THREE.DeferredShaderChunk.combine,"#ifdef SHADOWMAP_DEBUG","mgl_FragColor.xyz *= debugColor;","#endif","}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.hemisphereLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColorSky:{type:"c",value:new THREE.Color(0)},lightColorGround:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},samplerSSAO:{type:"t",value:null}}]),fragmentShader:["uniform float lightIntensity;","uniform vec3 lightColorSky;","uniform vec3 lightColorGround;","uniform vec3 lightDirectionVS;","uniform mat4 matProjInverse;","#ifdef USE_SSAO","uniform sampler2D samplerSSAO;","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.environmentBRDF,THREE.DeferredShaderChunk.specularOcclusion,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVectorHemi = lightDirectionVS;","float lightIntensityHemi = lightIntensity;","vec3 eyeVector = normalize( -vertexPositionVS.xyz );","vec3 halfVector = normalize( lightVectorHemi + eyeVector );","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );",THREE.DeferredShaderChunk.hemiTerm,"mgl_FragColor = vec4( hemiTerm, 1.0 );","}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.dayLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,THREE.DeferredUniformsLib.multiShadowMaps,THREE.DeferredUniformsLib.projectedTexture,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightDirectionVSSun:{type:"v3",value:new THREE.Vector3(0,1,0)},lightDirectionVSHemi:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColorSun:{type:"c",value:new THREE.Color(0)},lightColorSky:{type:"c",value:new THREE.Color(0)},lightColorGround:{type:"c",value:new THREE.Color(0)},lightIntensitySun:{type:"f",value:1},lightIntensityHemi:{type:"f",value:1},samplerSSAO:{type:"t",value:null}}]),fragmentShader:["uniform float lightIntensitySun;","uniform float lightIntensityHemi;","uniform vec3 lightColorSun;","uniform vec3 lightColorSky;","uniform vec3 lightColorGround;","uniform vec3 lightDirectionVSSun;","uniform vec3 lightDirectionVSHemi;","uniform mat4 matProjInverse;","#ifdef USE_SSAO","uniform sampler2D samplerSSAO;","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.multiShadowMapsUniforms,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.projectedTextureUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,THREE.DeferredShaderChunk.environmentBRDF,THREE.DeferredShaderChunk.specularOcclusion,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVSSun;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,THREE.DeferredShaderChunk.directionalShadows,THREE.DeferredShaderChunk.directionalProjectedTexture,"diffuse -= diffuse * fresnel;","vec3 directionalTerm = ( occlusion * lightIntensitySun ) * lightColorSun * ( albedo * diffuse + specular );","vec3 lightVectorHemi = lightDirectionVSHemi;",THREE.DeferredShaderChunk.hemiTerm,"mgl_FragColor = vec4( directionalTerm + hemiTerm, 1.0 );","#ifdef SHADOWMAP_DEBUG","mgl_FragColor.xyz *= debugColor;","#endif","}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.dayLightCube={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,THREE.DeferredUniformsLib.multiShadowMaps,THREE.DeferredUniformsLib.projectedTexture,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightDirectionVSSun:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColorSun:{type:"c",value:new THREE.Color(0)},lightIntensitySun:{type:"f",value:1},lightIntensityAmbient:{type:"f",value:1},matViewInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},samplerSpecular:{type:"t",value:null},samplerDiffuse:{type:"t",value:null},samplerMip:{type:"t",value:null},samplerSSAO:{type:"t",value:null},maxMipSpecular:{type:"f",value:7},samplerSize:{type:"f",value:0},lightPositionWS:{type:"v3",value:new THREE.Vector3(0,0,0)},lightSize:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform float lightIntensitySun;","uniform float lightIntensityAmbient;","uniform vec3 lightColorSun;","uniform vec3 lightDirectionVSSun;","uniform mat4 matProjInverse;","uniform mat4 matViewInverse;","uniform samplerCube samplerSpecular;","uniform samplerCube samplerDiffuse;","#if !defined( SUPPORTS_TEXTURE_LOD )","uniform samplerCube samplerMip;","#endif","#ifdef USE_SSAO","uniform sampler2D samplerSSAO;","#endif","uniform float maxMipSpecular;","#ifdef FIX_SEAMS","uniform float samplerSize;","vec3 fix_cube_lookup( vec3 v, float mipLevelClamp, float cubeSize ) {","float M = max( max( abs( v.x ), abs( v.y ) ), abs( v.z ) );","float scale = 1.0 - exp2( mipLevelClamp ) / cubeSize;","if ( abs( v.x ) != M ) v.x *= scale;","if ( abs( v.y ) != M ) v.y *= scale;","if ( abs( v.z ) != M ) v.z *= scale;","return v;","}","#endif","#ifdef LIGHT_LOCAL","uniform vec3 lightPositionWS;","uniform vec3 lightSize;","float maxLength( vec3 v ) {","return max( v.x, max( v.y, v.z ) );","}","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.multiShadowMapsUniforms,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.projectedTextureUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,THREE.DeferredShaderChunk.environmentBRDF,THREE.DeferredShaderChunk.specularOcclusion,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"float localFade = 1.0;","#ifdef LIGHT_LOCAL","vec4 vertexPositionWS = matViewInverse * vertexPositionVS;","vec3 lightVectorWS = abs( lightPositionWS.xyz - vertexPositionWS.xyz );","if ( lightVectorWS.x > lightSize.x || lightVectorWS.y > lightSize.y || lightVectorWS.z > lightSize.z ) {","localFade = 0.0;","} else {","localFade = max( 1.0 - maxLength( lightVectorWS / lightSize ), 0.0 );","}","#endif","vec3 lightVector = lightDirectionVSSun;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,THREE.DeferredShaderChunk.directionalShadows,THREE.DeferredShaderChunk.directionalProjectedTexture,"diffuse -= diffuse * fresnel;","vec3 directionalTerm = ( occlusion * lightIntensitySun ) * lightColorSun * ( albedo * diffuse + specular );","float gloss = shininess / 8192.0;","vec3 reflectVS = reflect( -eyeVector, normal );","vec4 reflectWS = matViewInverse * vec4( reflectVS, 0.0 );","#ifdef LIGHT_LOCAL","vec3 BoxMin = lightPositionWS - lightSize;","vec3 BoxMax = lightPositionWS + lightSize;","vec3 FirstPlaneIntersect  = ( BoxMax - vertexPositionWS.xyz ) / reflectWS.xyz;","vec3 SecondPlaneIntersect = ( BoxMin - vertexPositionWS.xyz ) / reflectWS.xyz;","vec3 FurthestPlane = max( FirstPlaneIntersect, SecondPlaneIntersect );","float Distance = min( min( FurthestPlane.x, FurthestPlane.y ), FurthestPlane.z );","vec3 IntersectPositionWS = vertexPositionWS.xyz + reflectWS.xyz * Distance;","reflectWS.xyz = IntersectPositionWS - lightPositionWS;","#endif","vec3 cubeCoord = reflectWS.xyz;","float maxMipLevel = maxMipSpecular - 2.0;","#ifdef SUPPORTS_TEXTURE_LOD","#if defined( IBL_HDR_RGBM ) || defined( IBL_HDR_RGBA32F ) || defined( IBL_HDR_RGBA16F )","float mipLod = ( maxMipLevel - 1.0 ) * ( 1.0 - gloss );","#else","float mipLod = max( ( maxMipLevel * ( 1.0 - gloss ) ), 1.5 );","#endif","#ifdef FIX_SEAMS","cubeCoord = fix_cube_lookup( cubeCoord, mipLod, samplerSize );","#endif","vec4 cubeColorSpecularSample = textureCubeLodEXT( samplerSpecular, cubeCoord, mipLod );","#else","const float mipUnit = 255.0 / 16.0;","#ifdef SPECULAR_MIP_FIX","float curvature = length( fwidth( cubeCoord ) );","float mipLevelMinification = mipUnit * textureCube( samplerMip, cubeCoord, -curvature ).a;","float mipLevelMagnification = mipUnit * textureCube( samplerMip, cubeCoord, maxMipSpecular - 1.0 - curvature ).a;","#else","const float curvature = 0.0;","float mipLevelMinification = mipUnit * textureCube( samplerMip, cubeCoord ).a;","float mipLevelMagnification = mipUnit * textureCube( samplerMip, cubeCoord, maxMipSpecular - 1.0 ).a;","#endif","float mipLevel;","if ( mipLevelMinification == 0.0 ) {","mipLevel = mipLevelMagnification - ( maxMipSpecular - 1.0 );","} else {","mipLevel = mipLevelMinification;","}","#if defined( IBL_HDR_RGBM ) || defined( IBL_HDR_RGBA32F ) || defined( IBL_HDR_RGBA16F )","float mipBias = max( ( maxMipLevel - 1.0 ) * ( 1.0 - gloss ) - mipLevel, -3.0 );","#else","float mipBias = max( ( maxMipLevel * ( 1.0 - gloss ) ) - mipLevel, 0.0 );","#endif","mipBias -= curvature;","#ifdef FIX_SEAMS","cubeCoord = fix_cube_lookup( cubeCoord, mipLevel, samplerSize );","#endif","vec4 cubeColorSpecularSample = textureCube( samplerSpecular, cubeCoord, mipBias );","#endif","vec4 normalWS = matViewInverse * vec4( normal, 0.0 );","vec4 cubeColorDiffuseSample = textureCube( samplerDiffuse, normalWS.xyz );","vec3 cubeColorSpecular = cubeColorSpecularSample.rgb;","vec3 cubeColorDiffuse = cubeColorDiffuseSample.rgb;","#ifdef IBL_HDR_RGBM","cubeColorSpecular *= cubeColorSpecularSample.a * 5.0;","cubeColorDiffuse *= cubeColorDiffuseSample.a * 5.0;","#endif","#ifdef IBL_GAMMA_TEXTURE","cubeColorSpecular *= cubeColorSpecular;","cubeColorDiffuse *= cubeColorDiffuse;","#endif","vec3 fresnelEnv = EnvironmentBRDF( gloss, dot( eyeVector, normal ), specularColor );","vec3 imageDiffuse = ( 1.0 - fresnelEnv ) * cubeColorDiffuse;","vec3 imageSpecular = fresnelEnv * cubeColorSpecular;","float diffuseOcclusion = lightMapIntensity;","#ifdef USE_SSAO","float ssaoOcclusion = texture2D( samplerSSAO, texCoord ).x;","ssaoOcclusion *= ssaoOcclusion;","diffuseOcclusion = min( diffuseOcclusion, ssaoOcclusion );","#endif","float NdotV = dot( normal, eyeVector );","float specularOcclusion = computeSpecOcclusion( NdotV, diffuseOcclusion, roughness );","vec3 imageTerm = lightIntensityAmbient * ( albedo * imageDiffuse * diffuseOcclusion + imageSpecular * specularOcclusion ) * localFade;","mgl_FragColor = vec4( directionalTerm + imageTerm, 1.0 );","#ifdef SHADOWMAP_DEBUG","mgl_FragColor.xyz *= debugColor;","#endif","}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.polyLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},matViewInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightPoints:{type:"v3v",value:[new THREE.Vector3(-10,10,0),new THREE.Vector3(10,10,0),new THREE.Vector3(10,-10,0),new THREE.Vector3(-10,-10,0)]},lightTwoSided:{type:"i",value:0},samplerLtcMat:{type:"t",value:null},samplerLtcMag:{type:"t",value:null},matShadow:{type:"m4",value:new THREE.Matrix4},samplerShadowMap:{type:"t",value:null},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:.5},shadowBias:{type:"f",value:0},samplerTexture:{type:"t",value:null},samplerTextureSize:{type:"f",value:0},samplerTextureBias:{type:"f",value:0}}]),fragmentShader:["uniform float lightIntensity;","uniform vec3 lightColor;","uniform vec3 lightPoints[ 4 ];","uniform int lightTwoSided;","uniform mat4 matProjInverse;","uniform mat4 matViewInverse;","uniform sampler2D samplerLtcMat;","uniform sampler2D samplerLtcMag;","#ifdef POLY_TEXTURE","uniform sampler2D samplerTexture;","uniform float samplerTextureSize;","uniform float samplerTextureBias;","#endif","#ifdef USE_SHADOWMAP","uniform mat4 matShadow;","#ifdef USE_SHADOWSAMPLER","uniform sampler2DShadow samplerShadowMap;","#else","uniform sampler2D samplerShadowMap;","#endif","uniform float shadowBias;","uniform float shadowDarkness;","uniform vec2 shadowMapSize;","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.ShaderChunk.polylights_pars_fragment,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 eyeVector = normalize( -vertexPositionVS.xyz );","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","float theta = acos( dot( normal, eyeVector ) );","vec2 uv = vec2( roughness, theta / ( 0.5 * PI ) );","vec2 uv64 = uv * LUT_SCALE64 + LUT_BIAS64;","vec2 uv32 = uv * LUT_SCALE32 + LUT_BIAS32;","vec4 t = texture2D( samplerLtcMat, uv64 );","mat3 Minv = mat3(","vec3(   1,   0, t.y ),","vec3(   0, t.z,   0 ),","vec3( t.w,   0, t.x )",");","#ifdef POLY_TEXTURE","vec3 specular = LTC_Evaluate_tex( normal, eyeVector, vertexPositionVS.xyz, Minv, lightPoints, bool( lightTwoSided ), samplerTexture, samplerTextureSize, samplerTextureBias );","vec3 diffuse  = LTC_Evaluate_tex( normal, eyeVector, vertexPositionVS.xyz, mat3( 1 ), lightPoints, bool( lightTwoSided ), samplerTexture, samplerTextureSize, samplerTextureBias );","#else","vec3 specular = LTC_Evaluate( normal, eyeVector, vertexPositionVS.xyz, Minv, lightPoints, bool( lightTwoSided ) );","vec3 diffuse  = LTC_Evaluate( normal, eyeVector, vertexPositionVS.xyz, mat3( 1 ), lightPoints, bool( lightTwoSided ) );","#endif","vec4 schlick = texture2D( samplerLtcMag, uv32 );","#if __VERSION__ < 300","vec3 specIntensity = specularColor * schlick.x + ( 1.0 - specularColor ) * schlick.w;","#else","vec3 specIntensity = specularColor * schlick.x + ( 1.0 - specularColor ) * schlick.y;","#endif","specular *= specIntensity;","diffuse *= ( 1.0 - specIntensity );","diffuse /= 2.0 * PI;","specular /= 2.0 * PI;","float occlusion = 1.0;","#ifdef USE_SHADOWMAP","vec4 posLightCS = matShadow * vertexPositionVS;","vec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;","float vertexDepth = posLightCS.z / posLightCS.w;","#if defined( DEPTH_TEXTURES )","vertexDepth = vertexDepth * 0.5 + 0.5;","#endif","#if !defined( SLOPE_DEPTH_BIAS )","vertexDepth -= shadowBias;","#endif","#if defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadowValue = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord, vertexDepth );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT_HQ )","vec2 pixelOffset = vec2( 2.0 ) / shadowMapSize;","float shadowValue0 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2( -pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue1 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2(  pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue2 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2( 0.0, -pixelOffset.y ), vertexDepth );","float shadowValue3 = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord + vec2( 0.0,  pixelOffset.y ), vertexDepth );","float shadowValue = ( shadowValue0 + shadowValue1 + shadowValue2 + shadowValue3 ) * 0.25;","#else","#ifdef USE_SHADOWSAMPLER","float shadowValue = 1.0 - texture( samplerShadowMap, vec3( shadowCoord, vertexDepth ) );","#else","float shadowDepth = texture2D( samplerShadowMap, shadowCoord ).x;","float shadowValue = float( vertexDepth > shadowDepth );","#endif","#endif","occlusion = 1.0 - shadowDarkness * shadowValue;","#endif","float attenuation = occlusion;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.polyLightMulti={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},matViewInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},polyLightColor:{type:"fv3",value:[]},polyLightPars:{type:"fv1",value:[]},polyLightPoints:{type:"v3v",value:[]},samplerLtcMat:{type:"t",value:null},samplerLtcMag:{type:"t",value:null},samplerShadowMap:{type:"tv",value:[]},shadowMapPars:{type:"fv4",value:[]},shadowMatrix:{type:"m4v",value:[]},samplerTexture:{type:"tv",value:[]},samplerTexturePars:{type:"fv2",value:[]}}]),fragmentShader:["uniform vec3 polyLightColor[ MAX_POLY_LIGHTS_MULTI ];","uniform float polyLightPars[ MAX_POLY_LIGHTS_MULTI ];","uniform vec3 polyLightPoints[ MAX_POLY_LIGHTS_MULTI * 4 ];","uniform mat4 matProjInverse;","uniform mat4 matViewInverse;","uniform sampler2D samplerLtcMat;","uniform sampler2D samplerLtcMag;","#ifdef POLY_TEXTURE","uniform sampler2D samplerTexture[ MAX_POLY_LIGHTS_MULTI ];","uniform vec2 samplerTexturePars[ MAX_POLY_LIGHTS_MULTI ];","#endif","#ifdef USE_SHADOWMAP","uniform mat4 shadowMatrix[ MAX_POLY_LIGHTS_MULTI ];","uniform vec4 shadowMapPars[ MAX_POLY_LIGHTS_MULTI ];","#ifdef USE_SHADOWSAMPLER","uniform sampler2DShadow samplerShadowMap[ MAX_POLY_LIGHTS_MULTI ];","#else","uniform sampler2D samplerShadowMap[ MAX_POLY_LIGHTS_MULTI ];","#endif","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.ShaderChunk.polylights_pars_fragment,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 eyeVector = normalize( -vertexPositionVS.xyz );","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","float dotNV = dot( normal, eyeVector );","float theta = acos( dotNV );","vec2 uv = vec2( roughness, theta / ( 0.5 * PI ) );","vec2 uv64 = uv * LUT_SCALE64 + LUT_BIAS64;","vec2 uv32 = uv * LUT_SCALE32 + LUT_BIAS32;","vec4 tMat = texture2D( samplerLtcMat, uv64 );","mat3 MinvInitSpecular = mat3(","vec3(   1,   0, tMat.y ),","vec3(   0, tMat.z,   0 ),","vec3( tMat.w,   0, tMat.x )",");","mat3 MinvInitDiffuse = mat3( 1.0 );","mat3 orthoBasis = computeOrthoBasis( dotNV, normal, eyeVector );","MinvInitSpecular = mul( MinvInitSpecular, orthoBasis );","MinvInitDiffuse = mul( MinvInitDiffuse, orthoBasis );","mat3 MinvSpecular;","mat3 MinvDiffuse;","vec3 lightPoints[ 4 ];","vec3 specular = vec3( 0.0 );","vec3 diffuse = vec3( 0.0 );","for( int i = 0; i < MAX_POLY_LIGHTS_MULTI; i ++ ) {","bool lightTwoSided = bool( polyLightPars[ i ] );","lightPoints[ 0 ] = polyLightPoints[ i * 4 ];","lightPoints[ 1 ] = polyLightPoints[ i * 4 + 1 ];","lightPoints[ 2 ] = polyLightPoints[ i * 4 + 2 ];","lightPoints[ 3 ] = polyLightPoints[ i * 4 + 3 ];","MinvSpecular = MinvInitSpecular;","MinvDiffuse = MinvInitDiffuse;","#ifdef POLY_TEXTURE","float texSize = samplerTexturePars[ i ].x;","float texBias = samplerTexturePars[ i ].y;","vec3 specularPart = LTC_Evaluate_opt_tex( vertexPositionVS.xyz, MinvSpecular, lightPoints, lightTwoSided, samplerTexture[ i ], texSize, texBias );","vec3 diffusePart  = LTC_Evaluate_opt_tex( vertexPositionVS.xyz, MinvDiffuse, lightPoints, lightTwoSided, samplerTexture[ i ], texSize, texBias );","#else","vec3 specularPart = LTC_Evaluate_opt( vertexPositionVS.xyz, MinvSpecular, lightPoints, lightTwoSided );","vec3 diffusePart  = LTC_Evaluate_opt( vertexPositionVS.xyz, MinvDiffuse, lightPoints, lightTwoSided );","#endif","float occlusion = 1.0;","#ifdef USE_SHADOWMAP","mat4 matShadow = shadowMatrix[ i ];","vec2 shadowMapSize = shadowMapPars[ i ].xy;","float shadowDarkness = shadowMapPars[ i ].z;","float shadowBias = shadowMapPars[ i ].w;","vec4 posLightCS = matShadow * vertexPositionVS;","vec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;","float vertexDepth = posLightCS.z / posLightCS.w;","#if defined( DEPTH_TEXTURES )","vertexDepth = vertexDepth * 0.5 + 0.5;","#endif","#if !defined( SLOPE_DEPTH_BIAS )","vertexDepth -= shadowBias;","#endif","#if defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadowValue = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord, vertexDepth );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT_HQ )","vec2 pixelOffset = vec2( 2.0 ) / shadowMapSize;","float shadowValue0 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2( -pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue1 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2(  pixelOffset.x, 0.0 ), vertexDepth );","float shadowValue2 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2( 0.0, -pixelOffset.y ), vertexDepth );","float shadowValue3 = sampleShadowPCFSoft( samplerShadowMap[ i ], shadowMapSize, shadowCoord + vec2( 0.0,  pixelOffset.y ), vertexDepth );","float shadowValue = ( shadowValue0 + shadowValue1 + shadowValue2 + shadowValue3 ) * 0.25;","#else","#ifdef USE_SHADOWSAMPLER","float shadowValue = 1.0 - texture( samplerShadowMap[ i ], vec3( shadowCoord, vertexDepth ) );","#else","float shadowDepth = texture2D( samplerShadowMap[ i ], shadowCoord ).x;","float shadowValue = float( vertexDepth > shadowDepth );","#endif","#endif","occlusion = 1.0 - shadowDarkness * shadowValue;","#endif","specularPart *= occlusion;","diffusePart *= occlusion;","specular += specularPart * polyLightColor[ i ];","diffuse += diffusePart * polyLightColor[ i ];","}","vec4 schlick = texture2D( samplerLtcMag, uv32 );","#if __VERSION__ < 300","vec3 specIntensity = specularColor * schlick.x + ( 1.0 - specularColor ) * schlick.w;","#else","vec3 specIntensity = specularColor * schlick.x + ( 1.0 - specularColor ) * schlick.y;","#endif","specular *= specIntensity;","diffuse *= ( 1.0 - specIntensity );","specular /= 2.0 * PI;","diffuse /= 2.0 * PI;","mgl_FragColor = vec4( albedo * diffuse + specular, 1.0 );","}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.areaLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightNormalVS:{type:"v3",value:new THREE.Vector3(0,-1,0)},lightRightVS:{type:"v3",value:new THREE.Vector3(1,0,0)},lightUpVS:{type:"v3",value:new THREE.Vector3(1,0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightWidth:{type:"f",value:1},lightHeight:{type:"f",value:1},constantAttenuation:{type:"f",value:1.5},linearAttenuation:{type:"f",value:.5},quadraticAttenuation:{type:"f",value:.1},samplerTexture:{type:"t",value:null},matShadow:{type:"m4",value:new THREE.Matrix4},samplerShadowMap:{type:"t",value:null},shadowMapSize:{type:"v2",value:new THREE.Vector2(512,512)},shadowDarkness:{type:"f",value:.5},shadowBias:{type:"f",value:0}}]),fragmentShader:["uniform vec3 lightPositionVS;","uniform vec3 lightNormalVS;","uniform vec3 lightRightVS;","uniform vec3 lightUpVS;","#ifdef AREA_TEXTURE","uniform sampler2D samplerTexture;","#endif","uniform float lightWidth;","uniform float lightHeight;","uniform float constantAttenuation;","uniform float linearAttenuation;","uniform float quadraticAttenuation;","uniform float lightIntensity;","uniform vec3 lightColor;","uniform mat4 matProjInverse;","#ifdef USE_SHADOWMAP","uniform mat4 matShadow;","#ifdef USE_SHADOWSAMPLER","uniform sampler2DShadow samplerShadowMap;","#else","uniform sampler2D samplerShadowMap;","#endif","uniform float shadowBias;","uniform float shadowDarkness;","uniform vec2 shadowMapSize;","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.skin_pars_fragment,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.shadowMapPCFSoft,THREE.DeferredShaderChunk.geometryFactor,THREE.DeferredShaderChunk.specularBRDF,"vec3 projectOnPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {","return point - dot( point - planeCenter, planeNorm ) * planeNorm;","}","bool sideOfPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {","return ( dot( point - planeCenter, planeNorm ) >= 0.0 );","}","vec3 linePlaneIntersect( vec3 lp, vec3 lv, vec3 pc, vec3 pn ) {","return lp + lv * ( dot( pn, pc - lp ) / dot( pn, lv ) );","}","float calculateAttenuation( float dist ) {","return ( 1.0 / ( constantAttenuation + linearAttenuation * dist + quadraticAttenuation * dist * dist ) );","}","void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"float w = lightWidth;","float h = lightHeight;","vec3 proj = projectOnPlane( vertexPositionVS.xyz, lightPositionVS, lightNormalVS );","vec3 dir = proj - lightPositionVS;","vec2 diagonal = vec2( dot( dir, lightRightVS ), dot( dir, lightUpVS ) );","vec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );","vec3 nearestPointInside = lightPositionVS + ( lightRightVS * nearest2D.x + lightUpVS * nearest2D.y );","vec3 lightDir = normalize( nearestPointInside - vertexPositionVS.xyz );","float NdotL = max( dot( lightNormalVS, -lightDir ), 0.0 );","float NdotL2 = max( dot( normal, lightDir ), 0.0 );","float dotLN = sqrt( NdotL * NdotL2 );","vec3 diffuse = vec3( dotLN );","#ifdef SKIN_HQ","if ( wrapAround < 0.0 && NdotL > 0.0 ) {","float curvature = length( fwidth( normal ) ) / length( fwidth( vertexPositionVS.xyz ) );","diffuse = PSSFitFunction( dotLN, curvature );","}","#else","if ( wrapAround < 0.0 && NdotL > 0.0 ) {","float dotLNHalf = max( 0.25 * dotLN + 0.25, 0.0 );","diffuse = mix( diffuse, vec3( dotLNHalf ), wrapRGB );","}","#endif","#ifdef AREA_TEXTURE","float d = distance( vertexPositionVS.xyz, nearestPointInside );","vec2 co = ( diagonal.xy + vec2( w, h ) ) / ( 2.0 * vec2( w, h ) );","co.y = 1.0 - co.y;","vec3 ve = vertexPositionVS.xyz - lightPositionVS;","vec4 diff = vec4( 0.0 );","if ( dot( ve, lightNormalVS ) < 0.0 ) {","diff = vec4( 0.0 );","} else {","float lod = max( pow( d, 0.1 ), 0.0 ) * 5.0;","vec4 t00 = texture2D( samplerTexture, co, lod );","vec4 t01 = texture2D( samplerTexture, co, lod + 1.0 );","diff = mix( t00, t01, 0.5 );","}","diffuse *= diff.xyz;","#endif","vec3 fresnel = vec3( 0.0 );","vec3 specular = vec3( 0.0 );","vec3 eyeVector = normalize( -vertexPositionVS.xyz );","vec3 R = reflect( eyeVector, normal );","vec3 E = linePlaneIntersect( vertexPositionVS.xyz, R, lightPositionVS, lightNormalVS );","float specAngle = dot( R, lightNormalVS );","if ( dot( vertexPositionVS.xyz - lightPositionVS, lightNormalVS )>=0.0 && specAngle > 0.0 ) {","vec3 dirSpec = E - lightPositionVS;","vec2 dirSpec2D = vec2( dot( dirSpec, lightRightVS ), dot( dirSpec, lightUpVS ) );","vec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -w, w ), clamp( dirSpec2D.y, -h, h ) );","vec3 nearestPointInsideSpec = lightPositionVS + ( lightRightVS * nearestSpec2D.x + lightUpVS * nearestSpec2D.y );","vec3 lightDirSpec = normalize( nearestPointInsideSpec - vertexPositionVS.xyz );","vec3 halfVectorSpec = normalize( lightDirSpec + eyeVector );","float dotNormalHalf = max( dot( normal, halfVectorSpec ), 0.0 );","float dotLH = max( dot( lightDirSpec, halfVectorSpec ), 0.0 );","float dotLN = max( dot( lightDirSpec, normal ), 0.0 );","fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","#if defined( BRDF_BLINN_PHONG )","specular = BlinnPhong_Specular( shininess, dotLN, dotNormalHalf, eyeVector, normal ) * ( fresnel * diffuse ) * specAngle;","#elif defined( BRDF_GGX )","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","specular = GGX_Specular( roughness, normal, halfVectorSpec, eyeVector, lightDirSpec ) * ( fresnel * diffuse ) * specAngle;","#else","specular = specularColor * max( pow( dotNormalHalf, shininess ), 0.0 ) * diffuse * specAngle;","#endif","#ifdef AREA_TEXTURE","const float hard = 16.0;","const float gloss = 16.0;","vec3 specPlane = lightPositionVS + ( lightRightVS * dirSpec2D.x + lightUpVS * dirSpec2D.y );","float dist = max( distance( vertexPositionVS.xyz, specPlane ), 0.0 );","float d = ( ( 1.0 / hard ) / 2.0 ) * ( dist / gloss );","w = max( w, 0.0 );","h = max( h, 0.0 );","vec2 co = dirSpec2D / ( d + 1.0 );","co /= 2.0 * vec2( w, h );","co = co + vec2( 0.5 );","co.y = 1.0 - co.y;","float lod = ( 2.0 / hard * max( dist, 0.0 ) );","vec4 t00 = texture2D( samplerTexture, co, lod );","vec4 t01 = texture2D( samplerTexture, co, lod + 1.0 );","vec4 spec = mix( t00, t01, 0.5 );","specular *= spec.xyz;","#endif","}","diffuse -= diffuse * fresnel * specAngle;","float occlusion = 1.0;","#ifdef USE_SHADOWMAP","vec4 posLightCS = matShadow * vertexPositionVS;","vec2 shadowCoord = ( posLightCS.xy / posLightCS.w ) * 0.5 + 0.5;","float vertexDepth = posLightCS.z / posLightCS.w;","#if defined( DEPTH_TEXTURES )","vertexDepth = vertexDepth * 0.5 + 0.5;","#endif","#if !defined( SLOPE_DEPTH_BIAS )","vertexDepth -= shadowBias;","#endif","#if defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadowValue = sampleShadowPCFSoft( samplerShadowMap, shadowMapSize, shadowCoord, vertexDepth );","#else","#ifdef USE_SHADOWSAMPLER","float shadowValue = 1.0 - texture( samplerShadowMap, vec3( shadowCoord, vertexDepth ) );","#else","float shadowDepth = texture2D( samplerShadowMap, shadowCoord ).x;","float shadowValue = float( vertexDepth > shadowDepth );","#endif","#endif","occlusion = 1.0 - shadowDarkness * shadowValue;","#endif","float dist = distance( vertexPositionVS.xyz, nearestPointInside );","float attenuation = calculateAttenuation( dist ) * occlusion;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangle},THREE.DeferredShaders.imageLight={uniforms:THREE.UniformsUtils.merge([THREE.DeferredUniformsLib.gbuffers,{matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},matViewInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},samplerSpecular:{type:"t",value:null},samplerDiffuse:{type:"t",value:null},samplerMip:{type:"t",value:null},samplerSSAO:{type:"t",value:null},samplerSize:{type:"f",value:0},maxMipSpecular:{type:"f",value:7},lightIntensity:{type:"f",value:1},lightPositionWS:{type:"v3",value:new THREE.Vector3(0,0,0)},lightSize:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform mat4 matProjInverse;","uniform mat4 matViewInverse;","uniform samplerCube samplerSpecular;","uniform samplerCube samplerDiffuse;","#ifdef USE_SSAO","uniform sampler2D samplerSSAO;","#endif","uniform float maxMipSpecular;","uniform float lightIntensity;","#ifdef LIGHT_LOCAL","uniform vec3 lightPositionWS;","uniform vec3 lightSize;","float maxLength( vec3 v ) {","return max( v.x, max( v.y, v.z ) );","}","#endif","#if !defined( SUPPORTS_TEXTURE_LOD )","uniform samplerCube samplerMip;","#endif",THREE.ShaderChunk.utils_pars_fragment,THREE.DeferredShaderChunk.gbuffersUniforms,THREE.DeferredShaderChunk.unpackFloat,THREE.DeferredShaderChunk.environmentBRDF,THREE.DeferredShaderChunk.specularOcclusion,"#ifdef FIX_SEAMS","uniform float samplerSize;","vec3 fix_cube_lookup( vec3 v, float mipLevelClamp, float cubeSize ) {","float M = max( max( abs( v.x ), abs( v.y ) ), abs( v.z ) );","float scale = 1.0 - exp2( mipLevelClamp ) / cubeSize;","if ( abs( v.x ) != M ) v.x *= scale;","if ( abs( v.y ) != M ) v.y *= scale;","if ( abs( v.z ) != M ) v.z *= scale;","return v;","}","#endif","void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,"#ifdef LIGHT_LOCAL","vec4 vertexPositionWS = matViewInverse * vertexPositionVS;","vec3 lightVectorWS = abs( lightPositionWS.xyz - vertexPositionWS.xyz );","if ( lightVectorWS.x > lightSize.x || lightVectorWS.y > lightSize.y || lightVectorWS.z > lightSize.z ) discard;","float localFade = max( 1.0 - maxLength( lightVectorWS / lightSize ), 0.0 );","#else","float localFade = 1.0;","#endif",THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 eyeVector = normalize( -vertexPositionVS.xyz );","vec3 reflectVS = reflect( -eyeVector, normal );","vec4 reflectWS = matViewInverse * vec4( reflectVS, 0.0 );","#ifdef LIGHT_LOCAL","vec3 BoxMin = lightPositionWS - lightSize;","vec3 BoxMax = lightPositionWS + lightSize;","vec3 FirstPlaneIntersect  = ( BoxMax - vertexPositionWS.xyz ) / reflectWS.xyz;","vec3 SecondPlaneIntersect = ( BoxMin - vertexPositionWS.xyz ) / reflectWS.xyz;","vec3 FurthestPlane = max( FirstPlaneIntersect, SecondPlaneIntersect );","float Distance = min( min( FurthestPlane.x, FurthestPlane.y ), FurthestPlane.z );","vec3 IntersectPositionWS = vertexPositionWS.xyz + reflectWS.xyz * Distance;","reflectWS.xyz = IntersectPositionWS - lightPositionWS;","#endif","vec3 cubeCoord = reflectWS.xyz;","float gloss = shininess / 8192.0;","float maxMipLevel = maxMipSpecular - 2.0;","#ifdef SUPPORTS_TEXTURE_LOD","#if defined( IBL_HDR_RGBM ) || defined( IBL_HDR_RGBA32F ) || defined( IBL_HDR_RGBA16F )","float mipLod = ( maxMipLevel - 1.0 ) * ( 1.0 - gloss );","#else","float mipLod = max( ( maxMipLevel * ( 1.0 - gloss ) ), 1.5 );","#endif","#ifdef FIX_SEAMS","cubeCoord = fix_cube_lookup( cubeCoord, mipLod, samplerSize );","#endif","vec4 cubeColorSpecularSample = textureCubeLodEXT( samplerSpecular, cubeCoord, mipLod );","#else","const float mipUnit = 255.0 / 16.0;","#ifdef SPECULAR_MIP_FIX","float curvature = length( fwidth( cubeCoord ) );","float mipLevelMinification = mipUnit * textureCube( samplerMip, cubeCoord, -curvature ).a;","float mipLevelMagnification = mipUnit * textureCube( samplerMip, cubeCoord, maxMipSpecular - 1.0 - curvature ).a;","#else","const float curvature = 0.0;","float mipLevelMinification = mipUnit * textureCube( samplerMip, cubeCoord ).a;","float mipLevelMagnification = mipUnit * textureCube( samplerMip, cubeCoord, maxMipSpecular - 1.0 ).a;","#endif","float mipLevel;","if ( mipLevelMinification == 0.0 ) {","mipLevel = mipLevelMagnification - ( maxMipSpecular - 1.0 );","} else {","mipLevel = mipLevelMinification;","}","#if defined( IBL_HDR_RGBM ) || defined( IBL_HDR_RGBA32F ) || defined( IBL_HDR_RGBA16F )","float mipBias = max( ( maxMipLevel - 1.0 ) * ( 1.0 - gloss ) - mipLevel, -3.0 );","#else","float mipBias = max( ( maxMipLevel * ( 1.0 - gloss ) ) - mipLevel, 0.0 );","#endif","mipBias -= curvature;","#ifdef FIX_SEAMS","cubeCoord = fix_cube_lookup( cubeCoord, mipLevel, samplerSize );","#endif","vec4 cubeColorSpecularSample = textureCube( samplerSpecular, cubeCoord, mipBias );","#endif","vec4 normalWS = matViewInverse * vec4( normal, 0.0 );","vec4 cubeColorDiffuseSample = textureCube( samplerDiffuse, normalWS.xyz );","vec3 cubeColorSpecular = cubeColorSpecularSample.rgb;","vec3 cubeColorDiffuse = cubeColorDiffuseSample.rgb;","#ifdef IBL_HDR_RGBM","cubeColorSpecular *= cubeColorSpecularSample.a * 5.0;","cubeColorDiffuse *= cubeColorDiffuseSample.a * 5.0;","#endif","#ifdef IBL_GAMMA_TEXTURE","cubeColorSpecular *= cubeColorSpecular;","cubeColorDiffuse *= cubeColorDiffuse;","#endif","vec3 fresnelEnv = EnvironmentBRDF( gloss, dot( eyeVector, normal ), specularColor );","vec3 diffuse = ( 1.0 - fresnelEnv ) * cubeColorDiffuse;","vec3 specular = fresnelEnv * cubeColorSpecular;","float diffuseOcclusion = lightMapIntensity;","#ifdef USE_SSAO","float ssaoOcclusion = texture2D( samplerSSAO, texCoord ).x;","ssaoOcclusion *= ssaoOcclusion;","diffuseOcclusion = min( diffuseOcclusion, ssaoOcclusion );","#endif","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","float NdotV = dot( normal, eyeVector );","float specularOcclusion = computeSpecOcclusion( NdotV, diffuseOcclusion, roughness );","mgl_FragColor = vec4( lightIntensity * ( albedo * diffuse * diffuseOcclusion + specular * specularOcclusion ), lightMapIntensity * localFade );","}"].join("\n"),vertexShader:["void main() { ","#ifdef LIGHT_LOCAL","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","#else","gl_Position = vec4( position.xyz, 1.0 );","#endif","}"].join("\n")},THREE.DeferredShaders.composite={uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fogAtmo,{samplerLight:{type:"t",value:null},samplerBloom:{type:"t",value:null},samplerDepth:{type:"t",value:null},samplerParticles:{type:"t",value:null},samplerParticlesRevealage:{type:"t",value:null},samplerBlur:{type:"t",value:null},samplerBlurAmount:{type:"t",value:null},brightness:{type:"f",value:1},whitePoint:{type:"f",value:1},bloomStrength:{type:"f",value:1},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,1e3)}}]),fragmentShader:["varying vec2 vUv;","uniform sampler2D samplerLight;","#ifdef BLOOM_ENABLED","uniform sampler2D samplerBloom;","uniform float bloomStrength;","#endif","#ifdef OFFSCREEN_PARTICLES","uniform sampler2D samplerParticles;","#ifdef PARTICLE_OIT","uniform sampler2D samplerParticlesRevealage;","#endif","#endif","#ifdef FANCY_DOF","uniform sampler2D samplerBlur;","uniform sampler2D samplerBlurAmount;","#endif","#ifdef FOG_ENABLED","uniform sampler2D samplerDepth;","uniform vec2 cameraNearFar;","#endif",THREE.ShaderChunk.fogAtmoFragmentPars,THREE.ShaderChunk.linearDepthFragmentPars,THREE.ShaderChunk.tonemappingFragmentPars,THREE.ShaderChunk.ditheringFragmentPars,THREE.DeferredShaderChunk.unpackFloat,"void main() {","vec3 color = texture2D( samplerLight, vUv ).xyz;","#ifdef FOG_ENABLED","#if defined( RGBA_DEPTH )","vec4 packedDepth = texture2D( samplerDepth, vUv );","float depth = unpackDepth( packedDepth );","#elif defined( FLOAT_DEPTH )","float depth = texture2D( samplerDepth, vUv ).w;","#elif defined( TEXTURE_DEPTH )","float depth = texture2D( samplerDepth, vUv ).x * 2.0 - 1.0;","#endif","float linearDepth = linearizeDepth( depth, cameraNearFar );","color = addFog( color, linearDepth );","#endif","#ifdef FANCY_DOF","float bias = texture2D( samplerBlurAmount, vUv ).a;","vec3 blur = texture2D( samplerBlur, vUv ).rgb;","color = mix( color, blur, smoothstep( 0.0, 0.1, bias ) );","#endif","#ifdef OFFSCREEN_PARTICLES","#if defined( PARTICLE_OIT )","vec4 accum = texture2D( samplerParticles, vUv );","float rev = texture2D( samplerParticlesRevealage, vUv ).r;","vec4 transparent = vec4( accum.rgb / clamp( rev, 1e-4, 5e4 ), accum.a );","color = transparent.a * color.rgb + ( 1.0 - transparent.a ) * transparent.rgb;","#else","vec3 particleColor = texture2D( samplerParticles, vUv ).xyz;","color += particleColor;","#endif","#endif","#ifdef TONEMAPPING","color = applyTonemapping( color, brightness, whitePoint );","#endif","#ifdef DITHERING_ENABLED","color = applyDithering( color, vUv );","#endif","#ifdef BLOOM_ENABLED","vec3 bloomColor = texture2D( samplerBloom, vUv ).xyz;","color += bloomStrength * bloomColor;","#endif","mgl_FragColor = vec4( color, 1.0 );","}"].join("\n"),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV},THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:["uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;","gl_Position = vec4( position.xyz, 1.0 );","}"].join("\n"),fragmentShader:["uniform float cKernel[ KERNEL_SIZE_INT ];","uniform sampler2D tDiffuse;","uniform vec2 uImageIncrement;","varying vec2 vUv;","void main() {","vec2 imageCoord = vUv;","vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );","for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {","sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];","imageCoord += uImageIncrement;","}","mgl_FragColor = sum;","}"].join("\n"),buildKernel:function(e){function t(e,t){return Math.exp(-(e*e)/(2*t*t))
}var a,r,i,o,n=25,s=2*Math.ceil(3*e)+1;for(s>n&&(s=n),o=.5*(s-1),r=new Array(s),i=0,a=0;s>a;++a)r[a]=t(a-o,e),i+=r[a];for(a=0;s>a;++a)r[a]/=i;return r}},THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","mgl_FragColor = opacity * texel;","}"].join("\n")},THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying vec2 vUv;","#define FXAA_REDUCE_MIN   (1.0/128.0)","#define FXAA_REDUCE_MUL   (1.0/8.0)","#define FXAA_SPAN_MAX     8.0","void main() {","vec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;","vec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;","vec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;","vec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );","vec3 rgbM  = rgbaM.xyz;","float opacity  = rgbaM.w;","vec3 luma = vec3( 0.299, 0.587, 0.114 );","float lumaNW = dot( rgbNW, luma );","float lumaNE = dot( rgbNE, luma );","float lumaSW = dot( rgbSW, luma );","float lumaSE = dot( rgbSE, luma );","float lumaM  = dot( rgbM,  luma );","float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );","float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );","vec2 dir;","dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));","dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));","float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );","float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );","dir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),","max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),","dir * rcpDirMin)) * resolution;","vec3 rgbA = 0.5 * (","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );","vec3 rgbB = rgbA * 0.5 + 0.25 * (","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +","texture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );","float lumaB = dot( rgbB, luma );","if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {","mgl_FragColor = vec4( rgbA, opacity );","} else {","mgl_FragColor = vec4( rgbB, opacity );","}","}"].join("\n")},THREE.TAAShader={uniforms:{tDepth:{type:"t",value:null},tDiffuse:{type:"t",value:null},tDiffuseLast:{type:"t",value:null},feedbackMin:{type:"f",value:.88},feedbackMax:{type:"f",value:.97},jitterOffset:{type:"v4",value:new THREE.Vector4},matProjInverse:{type:"m4",value:new THREE.Matrix4},matViewInverse:{type:"m4",value:new THREE.Matrix4},matViewProjLast:{type:"m4",value:new THREE.Matrix4},viewSize:{type:"v2",value:new THREE.Vector2(800,600)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["#define USE_OPTIMIZATIONS 1","#define MINMAX_3X3 0","#define MINMAX_3X3_ROUNDED 1","#define USE_CLIPPING 1","#define UNJITTER_COLORSAMPLES 1","#define UNJITTER_NEIGHBORHOOD 0","#define UNJITTER_REPROJECTION 0","#define USE_YCOCG 0","const float FLT_EPS = 0.00000001;","uniform sampler2D tDepth;","uniform sampler2D tDiffuse;","uniform sampler2D tDiffuseLast;","uniform float feedbackMin;","uniform float feedbackMax;","uniform vec4 jitterOffset;","uniform mat4 matProjInverse;","uniform mat4 matViewInverse;","uniform mat4 matViewProjLast;","uniform vec2 viewSize;","varying vec2 vUv;","#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","float Luminance( vec3 c ) {","return dot( c, vec3( 0.22, 0.707, 0.071 ) );","}","vec3 RGB_YCoCg( vec3 c ) {","return vec3(","c.x/4.0 + c.y/2.0 + c.z/4.0,","c.x/2.0 - c.z/2.0,","-c.x/4.0 + c.y/2.0 - c.z/4.0",");","}","vec4 sample_color( sampler2D tex, vec2 uv ) {","#if USE_YCOCG","vec4 c = texture2D( tex, uv );","return vec4( RGB_YCoCg( c.rgb ), c.a );","#else","return texture2D( tex, uv );","#endif","}","vec4 clip_aabb( vec3 aabb_min, vec3 aabb_max, vec4 p, vec4 q ) {","#if USE_OPTIMIZATIONS","vec3 p_clip = 0.5 * ( aabb_max + aabb_min );","vec3 e_clip = 0.5 * ( aabb_max - aabb_min );","vec4 v_clip = q - vec4( p_clip, p.w );","vec3 v_unit = v_clip.xyz / e_clip;","vec3 a_unit = abs( v_unit );","float ma_unit = max( a_unit.x, max( a_unit.y, a_unit.z ) );","if ( ma_unit > 1.0 )","return vec4( p_clip, p.w ) + v_clip / ma_unit;","else","return q;","#else","vec4 r = q - p;","vec3 rmax = aabb_max - p.xyz;","vec3 rmin = aabb_min - p.xyz;","const float eps = FLT_EPS;","if ( r.x > rmax.x + eps )","r *= ( rmax.x / r.x );","if ( r.y > rmax.y + eps )","r *= ( rmax.y / r.y );","if ( r.z > rmax.z + eps )","r *= ( rmax.z / r.z );","if ( r.x < rmin.x - eps )","r *= ( rmin.x / r.x );","if ( r.y < rmin.y - eps )","r *= ( rmin.y / r.y );","if ( r.z < rmin.z - eps )","r *= ( rmin.z / r.z );","return p + r;","#endif","}","void main() {","vec2 texCoord = vUv;","#if defined( RGBA_DEPTH )","vec4 packedDepth = texture2D( tDepth, texCoord );","float z = unpackDepth( packedDepth );","#elif defined( TEXTURE_DEPTH )","vec4 texDepth = texture2D( tDepth, texCoord );","float z = texDepth.x * 2.0 - 1.0;","#elif defined( FLOAT_DEPTH )","vec4 normalDepth = texture2D( tDepth, texCoord );","float z = normalDepth.w;","#endif","vec2 xy = texCoord * 2.0 - 1.0;","vec4 vertexPositionProjected = vec4( xy, z, 1.0 );","vec4 vertexPositionVS = matProjInverse * vertexPositionProjected;","vertexPositionVS.xyz /= vertexPositionVS.w;","vertexPositionVS.w = 1.0;","vec4 vertexPositionWS = matViewInverse * vertexPositionVS;","vec4 reprojectedPositionVS = matViewProjLast * vertexPositionWS;","reprojectedPositionVS.xyz /= reprojectedPositionVS.w;","vec2 texCoordReprojected = 0.5 * reprojectedPositionVS.xy + 0.5;","vec2 texelSize = 1.0 / viewSize;","#if UNJITTER_COLORSAMPLES || UNJITTER_NEIGHBORHOOD","vec2 jitter0 = jitterOffset.xy * texelSize.xy;","#endif","#if UNJITTER_COLORSAMPLES","vec4 texel0 = sample_color( tDiffuse, texCoord - jitter0 );","#else","vec4 texel0 = sample_color( tDiffuse, texCoord );","#endif","vec4 texel1 = sample_color( tDiffuseLast, texCoordReprojected );","#if UNJITTER_NEIGHBORHOOD","vec2 uv = texCoord - jitter0;","#else","vec2 uv = texCoord;","#endif","#if MINMAX_3X3 || MINMAX_3X3_ROUNDED","vec2 du = vec2( texelSize.x, 0.0 );","vec2 dv = vec2( 0.0, texelSize.y );","vec4 ctl = sample_color( tDiffuse, uv - dv - du );","vec4 ctc = sample_color( tDiffuse, uv - dv );","vec4 ctr = sample_color( tDiffuse, uv - dv + du );","vec4 cml = sample_color( tDiffuse, uv - du );","vec4 cmc = sample_color( tDiffuse, uv );","vec4 cmr = sample_color( tDiffuse, uv + du );","vec4 cbl = sample_color( tDiffuse, uv + dv - du );","vec4 cbc = sample_color( tDiffuse, uv + dv );","vec4 cbr = sample_color( tDiffuse, uv + dv + du );","vec4 cmin = min( ctl, min( ctc, min( ctr, min( cml, min( cmc, min( cmr, min( cbl, min( cbc, cbr ) ) ) ) ) ) ) );","vec4 cmax = max( ctl, max( ctc, max( ctr, max( cml, max( cmc, max( cmr, max( cbl, max( cbc, cbr ) ) ) ) ) ) ) );","#if MINMAX_3X3_ROUNDED || USE_YCOCG || USE_CLIPPING","vec4 cavg = ( ctl + ctc + ctr + cml + cmc + cmr + cbl + cbc + cbr ) / 9.0;","#endif","#if MINMAX_3X3_ROUNDED","vec4 cmin5 = min( ctc, min( cml, min( cmc, min( cmr, cbc ) ) ) );","vec4 cmax5 = max( ctc, max( cml, max( cmc, max( cmr, cbc ) ) ) );","vec4 cavg5 = ( ctc + cml + cmc + cmr + cbc ) / 5.0;","cmin = 0.5 * ( cmin + cmin5 );","cmax = 0.5 * ( cmax + cmax5 );","cavg = 0.5 * ( cavg + cavg5 );","#endif","#endif","#if USE_YCOCG","vec2 chroma_extent = 0.25 * 0.5 * ( cmax.r - cmin.r );","vec2 chroma_center = texel0.gb;","cmin.yz = chroma_center - chroma_extent;","cmax.yz = chroma_center + chroma_extent;","cavg.yz = chroma_center;","#endif","#if USE_CLIPPING","texel1 = clip_aabb( cmin.xyz, cmax.xyz, clamp( cavg, cmin, cmax ), texel1 );","#else","texel1 = clamp( texel1, cmin, cmax );","#endif","#if USE_YCOCG","float lum0 = texel0.r;","float lum1 = texel1.r;","#else","float lum0 = Luminance( texel0.rgb );","float lum1 = Luminance( texel1.rgb );","#endif","float unbiased_diff = abs( lum0 - lum1 ) / max( lum0, max( lum1, 0.2 ) );","float unbiased_weight = 1.0 - unbiased_diff;","float unbiased_weight_sqr = unbiased_weight * unbiased_weight;","float k_feedback = mix( feedbackMin, feedbackMax, unbiased_weight_sqr );","mgl_FragColor = mix( texel0, texel1, k_feedback );","}"].join("\n")},THREE.SSAOShader={defines:{PREBAKED_SAMPLES:!0,NUM_PREBAKED_SAMPLES:"9"},uniforms:{tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraCoef:{type:"v3",value:new THREE.Vector3(101,99,2)},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:.3},radius:{type:"f",value:15},samplePoints:{type:"fv2",value:THREE.Math.generatePoissonDiscSamples(9)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform vec3 cameraCoef;","uniform float radius;","uniform vec2 size;","uniform float aoClamp;","uniform sampler2D tDepth;","uniform vec2 samplePoints[ NUM_PREBAKED_SAMPLES ];","varying vec2 vUv;","#define DL 2.399963229728653","#define EULER 2.718281828459045","#define WIDTH size.x","#define HEIGHT size.y","#define CAMERA_FAR_PLUS_NEAR cameraCoef.x","#define CAMERA_FAR_MINUS_NEAR cameraCoef.y","#define CAMERA_NEAR2 cameraCoef.z","#ifndef SAMPLES","#define SAMPLES 8","#endif","const int samples = SAMPLES;","#define USE_NOISE 1","const float noiseAmount = 0.0002;","const float diffAreaSq = 0.16;","const float gDisplace = 0.4;","#ifdef RGBA_DEPTH","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","vec2 rand( const in vec2 coord ) {","#ifdef USE_NOISE","float nx = dot ( coord, vec2( 12.9898, 78.233 ) );","float ny = dot ( coord, vec2( 25.9796, 156.466 ) );","vec2 noise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );","#else","float ff = fract( 1.0 - coord.s * ( WIDTH / 2.0 ) );","float gg = fract( coord.t * ( HEIGHT / 2.0 ) );","vec2 noise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;","#endif","return ( noise * 2.0  - 1.0 ) * noiseAmount;","}","float readDepth( const in vec2 coord ) {","#if defined( RGBA_DEPTH )","vec4 packedDepth = texture2D( tDepth, coord );","float depth = unpackDepth( packedDepth );","#elif defined( FLOAT_DEPTH )","float depth = texture2D( tDepth, coord ).w;","#elif defined( TEXTURE_DEPTH )","float depth = texture2D( tDepth, coord ).x * 2.0 - 1.0;","#endif","return CAMERA_NEAR2 / ( CAMERA_FAR_PLUS_NEAR - depth * CAMERA_FAR_MINUS_NEAR );","}","float compareDepths( const in float depth1, const in float depth2, inout int far ) {","float gareaSq = 4.0;","float diff = ( depth1 - depth2 ) * 100.0;","if ( diff < gDisplace ) {","gareaSq = diffAreaSq;","} else {","far = 1;","}","float dd = diff - gDisplace;","return pow( EULER, -2.0 * dd * dd / gareaSq );","}","float calcAO( const in float depth, const in float dw, const in float dh ) {","float dd = radius - depth * radius;","vec2 vv = vec2( dw, dh );","vec2 coord1 = vUv + dd * vv;","vec2 coord2 = vUv - dd * vv;","float temp1 = 0.0;","float temp2 = 0.0;","int far = 0;","temp1 = compareDepths( depth, readDepth( coord1 ), far );","if ( far > 0 ) {","temp2 = compareDepths( readDepth( coord2 ), depth, far );","temp1 += ( 1.0 - temp1 ) * temp2;","}","return temp1;","}","void main() {","vec2 noise = rand( vUv );","float depth = readDepth( vUv );","float tt = clamp( depth, aoClamp, 1.0 );","float w = ( 1.0 / WIDTH )  / tt + ( noise.x * ( 1.0 - noise.x ) );","float h = ( 1.0 / HEIGHT ) / tt + ( noise.y * ( 1.0 - noise.y ) );","float pw = 0.0;","float ph = 0.0;","float ao = 0.0;","#if defined( PREBAKED_SAMPLES )","for ( int i = 0; i < NUM_PREBAKED_SAMPLES; i ++ ) {","vec2 samplePoint = samplePoints[ i ];","ao += calcAO( depth, samplePoint.x * w, samplePoint.y * h );","}","ao /= float( NUM_PREBAKED_SAMPLES );","#else","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","pw = cos( l ) * r;","ph = sin( l ) * r;","ao += calcAO( depth, pw * w, ph * h );","z = z - dz;","l = l + DL;","}","ao /= float( samples );","#endif","mgl_FragColor = vec4( vec3( 1.0 - ao ), 1.0 );","}"].join("\n")},THREE.SSAOHorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","vec4 h1 = texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) );","vec4 h2 = texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) );","vec4 h0 = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );","vec4 m = ( h1 - h2 ) * 0.5;","float d = abs( h0.x - m.x );","if ( d > 0.15 ) {","sum = min( h1, h2 );","} else {","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;","sum += h1 * 0.1531;","sum += h0 * 0.1633;","sum += h2 * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;","}","mgl_FragColor = sum;","}"].join("\n")},THREE.SSAOVerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","vec4 v1 = texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) );","vec4 v2 = texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) );","vec4 v0 = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );","vec4 m = ( v1 - v2 ) * 0.5;","float d = abs( v0.x - m.x );","if ( d > 0.15 ) {","sum = min( v1, v2 );","} else {","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;","sum += v1 * 0.1531;","sum += v0 * 0.1633;","sum += v2 * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;","}","mgl_FragColor = sum;","}"].join("\n")},THREE.SSAOBilateralHorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},tNormal:{type:"t",value:null},h:{type:"f",value:1/512},cameraCoef:{type:"v3",value:new THREE.Vector3(101,99,2)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform vec3 cameraCoef;","#define CAMERA_FAR_PLUS_NEAR cameraCoef.x","#define CAMERA_FAR_MINUS_NEAR cameraCoef.y","#define CAMERA_NEAR2 cameraCoef.z","float linearizeDepth( float d ) {","return CAMERA_NEAR2 / ( CAMERA_FAR_PLUS_NEAR - d * CAMERA_FAR_MINUS_NEAR );","}","float computeWeight( vec4 a, vec4 b ) {","vec3 na = a.xyz * 2.0 - 1.0;","vec3 nb = b.xyz * 2.0 - 1.0;","float dotab = max( dot( na, nb ), 0.0 );","float wn = pow( dotab, 32.0 );","float za = linearizeDepth( a.w );","float zb = linearizeDepth( b.w );","float zz = 10.0 * abs( za - zb );","float wz = 1.0 / ( 1.0 + zz );","return wn * wz;","}","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","uniform float h;","#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","uniform sampler2D tNormal;","#elif defined( TEXTURE_DEPTH )","uniform sampler2D tNormal;","#endif","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","vec2 c1 = vec2( vUv.x - 1.0 * h, vUv.y );","vec2 c2 = vec2( vUv.x + 1.0 * h, vUv.y );","vec2 c3 = vec2( vUv.x - 2.0 * h, vUv.y );","vec2 c4 = vec2( vUv.x + 2.0 * h, vUv.y );","#if defined( RGBA_DEPTH )","vec4 normalDepth0 = texture2D( tNormal, vUv );","vec4 normalDepth1 = texture2D( tNormal, c1 );","vec4 normalDepth2 = texture2D( tNormal, c2 );","vec4 normalDepth3 = texture2D( tNormal, c3 );","vec4 normalDepth4 = texture2D( tNormal, c4 );","normalDepth0.w = unpackDepth( texture2D( tDepth, vUv ) );","normalDepth1.w = unpackDepth( texture2D( tDepth, c1 ) );","normalDepth2.w = unpackDepth( texture2D( tDepth, c2 ) );","normalDepth3.w = unpackDepth( texture2D( tDepth, c3 ) );","normalDepth4.w = unpackDepth( texture2D( tDepth, c4 ) );","#elif defined( FLOAT_DEPTH )","vec4 normalDepth0 = texture2D( tDepth, vUv );","vec4 normalDepth1 = texture2D( tDepth, c1 );","vec4 normalDepth2 = texture2D( tDepth, c2 );","vec4 normalDepth3 = texture2D( tDepth, c3 );","vec4 normalDepth4 = texture2D( tDepth, c4 );","#elif defined( TEXTURE_DEPTH )","vec4 normalDepth0 = texture2D( tNormal, vUv );","vec4 normalDepth1 = texture2D( tNormal, c1 );","vec4 normalDepth2 = texture2D( tNormal, c2 );","vec4 normalDepth3 = texture2D( tNormal, c3 );","vec4 normalDepth4 = texture2D( tNormal, c4 );","normalDepth0.w = texture2D( tDepth, vUv ).x * 2.0 - 1.0;","normalDepth1.w = texture2D( tDepth, c1 ).x * 2.0 - 1.0;","normalDepth2.w = texture2D( tDepth, c2 ).x * 2.0 - 1.0;","normalDepth3.w = texture2D( tDepth, c3 ).x * 2.0 - 1.0;","normalDepth4.w = texture2D( tDepth, c4 ).x * 2.0 - 1.0;","#endif","float w0 = 0.1633;","float w1 = computeWeight( normalDepth0, normalDepth1 ) * 0.1531;","float w2 = computeWeight( normalDepth0, normalDepth2 ) * 0.1531;","float w3 = computeWeight( normalDepth0, normalDepth3 ) * 0.12245;","float w4 = computeWeight( normalDepth0, normalDepth4 ) * 0.12245;","float ws = w0 + w1 + w2 + w3 + w4;","vec4 h0 = texture2D( tDiffuse, vUv );","vec4 h1 = texture2D( tDiffuse, c1 );","vec4 h2 = texture2D( tDiffuse, c2 );","vec4 h3 = texture2D( tDiffuse, c3 );","vec4 h4 = texture2D( tDiffuse, c4 );","sum += h3 * w3;","sum += h1 * w1;","sum += h0 * w0;","sum += h2 * w2;","sum += h4 * w4;","sum /= ws;","mgl_FragColor = sum;","}"].join("\n")},THREE.SSAOBilateralVerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},tNormal:{type:"t",value:null},v:{type:"f",value:1/512},cameraCoef:{type:"v3",value:new THREE.Vector3(101,99,2)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform vec3 cameraCoef;","#define CAMERA_FAR_PLUS_NEAR cameraCoef.x","#define CAMERA_FAR_MINUS_NEAR cameraCoef.y","#define CAMERA_NEAR2 cameraCoef.z","float linearizeDepth( float d ) {","return CAMERA_NEAR2 / ( CAMERA_FAR_PLUS_NEAR - d * CAMERA_FAR_MINUS_NEAR );","}","float computeWeight( vec4 a, vec4 b ) {","vec3 na = a.xyz * 2.0 - 1.0;","vec3 nb = b.xyz * 2.0 - 1.0;","float dotab = max( dot( na, nb ), 0.0 );","float wn = pow( dotab, 32.0 );","float za = linearizeDepth( a.w );","float zb = linearizeDepth( b.w );","float zz = 10.0 * abs( za - zb );","float wz = 1.0 / ( 1.0 + zz );","return wn * wz;","}","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","uniform float v;","#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","uniform sampler2D tNormal;","#elif defined( TEXTURE_DEPTH )","uniform sampler2D tNormal;","#endif","varying vec2 vUv;","void main() {","vec4 sum = vec4( 0.0 );","vec2 c1 = vec2( vUv.x, vUv.y - 1.0 * v );","vec2 c2 = vec2( vUv.x, vUv.y + 1.0 * v );","#if defined( RGBA_DEPTH )","vec4 normalDepth0 = texture2D( tNormal, vUv );","vec4 normalDepth1 = texture2D( tNormal, c1 );","vec4 normalDepth2 = texture2D( tNormal, c2 );","normalDepth0.w = unpackDepth( texture2D( tDepth, vUv ) );","normalDepth1.w = unpackDepth( texture2D( tDepth, c1 ) );","normalDepth2.w = unpackDepth( texture2D( tDepth, c2 ) );","#elif defined( FLOAT_DEPTH )","vec4 normalDepth0 = texture2D( tDepth, vUv );","vec4 normalDepth1 = texture2D( tDepth, c1 );","vec4 normalDepth2 = texture2D( tDepth, c2 );","#elif defined( TEXTURE_DEPTH )","vec4 normalDepth0 = texture2D( tNormal, vUv );","vec4 normalDepth1 = texture2D( tNormal, c1 );","vec4 normalDepth2 = texture2D( tNormal, c2 );","normalDepth0.w = texture2D( tDepth, vUv ).x * 2.0 - 1.0;","normalDepth1.w = texture2D( tDepth, c1 ).x * 2.0 - 1.0;","normalDepth2.w = texture2D( tDepth, c2 ).x * 2.0 - 1.0;","#endif","float w0 = 0.1633;","float w1 = computeWeight( normalDepth0, normalDepth1 ) * 0.1531;","float w2 = computeWeight( normalDepth0, normalDepth2 ) * 0.1531;","float ws = w0 + w1 + w2;","vec4 h0 = texture2D( tDiffuse, vUv );","vec4 h1 = texture2D( tDiffuse, c1 );","vec4 h2 = texture2D( tDiffuse, c2 );","sum += h1 * w1;","sum += h0 * w0;","sum += h2 * w2;","sum /= ws;","mgl_FragColor = sum;","}"].join("\n")},THREE.BloomHorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform float h;","varying vec2 vUv;","void main() {","vec3 sum = vec3( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ).xyz * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ).xyz * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ).xyz * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ).xyz * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ).xyz * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ).xyz * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ).xyz * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ).xyz * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ).xyz * 0.051;","mgl_FragColor.rgb = sum;","mgl_FragColor.a = 1.0;","}"].join("\n")},THREE.BloomVerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform float v;","varying vec2 vUv;","void main() {","vec3 sum = vec3( 0.0 );","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ).xyz * 0.051;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ).xyz * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ).xyz * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ).xyz * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ).xyz * 0.1633;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ).xyz * 0.1531;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ).xyz * 0.12245;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ).xyz * 0.0918;","sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ).xyz * 0.051;","mgl_FragColor.rgb = sum;","mgl_FragColor.a = 1.0;","}"].join("\n")},THREE.BloomFilterShader={uniforms:{tSource:{type:"t",value:null},threshold:{type:"f",value:1},brightness:{type:"f",value:1},whitePoint:{type:"f",value:1}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tSource;","uniform float threshold;",THREE.ShaderChunk.tonemappingFragmentPars,"varying vec2 vUv;","void main() {","vec3 color = texture2D( tSource, vUv ).rgb;","const vec3 luma = vec3( 0.299, 0.587, 0.114 );","float v = dot( color, luma );","vec3 outColor = vec3( 0.0 );","if ( v > threshold ) {","outColor = applyTonemapping( color, brightness, whitePoint );","}","mgl_FragColor = vec4( outColor, 1.0 );","}"].join("\n")},THREE.IBLDiffuseConvolutionShader={uniforms:{tCube:{type:"t",value:null}},vertexShader:["varying vec3 vWorldNormal;","void main() {","vec4 worldNormal = modelMatrix * vec4( normal, 0.0 );","vWorldNormal = worldNormal.xyz;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","varying vec3 vWorldNormal;","const int zSamples = 30;","const int tSamples = 2 * zSamples;","const float zFract = 1.0 / float( zSamples );","const float tFract = 3.14159265 * zFract;","const float normFract = 4.0 * 3.14159265 / float( ( tSamples + 1 ) * ( tSamples ) );","void main() {","vec3 surfaceNormal = normalize( vWorldNormal );","vec3 total = vec3( 0.0 );","for ( int z = -zSamples; z <= zSamples; z ++ ) {","for ( int t = 0; t < tSamples; t ++ ) {","float fz = float( z ) * zFract;","float ft = float( t ) * tFract;","float r = sqrt( 1.0 - fz * fz );","float x = r * cos( ft );","float y = r * sin( ft );","vec3 sampleNormal = vec3( x, y, fz );","float dotProduct = max( dot( surfaceNormal, sampleNormal ), 0.0 );","vec4 pixel = textureCube( tCube, sampleNormal );","total += pixel.rgb * dotProduct;","}","}","mgl_FragColor.rgb = total * normFract;","mgl_FragColor.a = 1.0;","}"].join("\n")},THREE.IBLDiffuseProbeShader={uniforms:{tCube:{type:"t",value:null}},vertexShader:["varying vec3 vWorldNormal;","void main() {","vec4 worldNormal = modelMatrix * vec4( normal, 0.0 );","vWorldNormal = worldNormal.xyz;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","varying vec3 vWorldNormal;","void main() {","vec3 surfaceNormal = normalize( vWorldNormal );","mgl_FragColor = textureCube( tCube, surfaceNormal );","mgl_FragColor.rgb *= mgl_FragColor.rgb;","mgl_FragColor.a = 1.0;","}"].join("\n")},THREE.DOFBlurPass1Shader={uniforms:{tDiffuse:{type:"t",value:null},tBlurAmount:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1024,512)},samplePoints1:{type:"fv2",value:THREE.Math.generateConcentricCircleSamples(7,6)},samplePoints2:{type:"fv2",value:THREE.Math.generateConcentricCircleSamples(3,6)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["#define PREBAKED_SAMPLES","#define NUM_PREBAKED_SAMPLES1 49","#define NUM_PREBAKED_SAMPLES2 9","#define DL 2.399963229728653","#define PI 3.141592653589793","#define PI4 0.7853981633974483","uniform sampler2D tDiffuse;","uniform sampler2D tBlurAmount;","uniform vec2 resolution;","uniform vec2 samplePoints1[ NUM_PREBAKED_SAMPLES1 ];","uniform vec2 samplePoints2[ NUM_PREBAKED_SAMPLES2 ];","varying vec2 vUv;","#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","#ifdef CONCENTRIC_CIRCLE_SAMPLE","vec2 mapSquareToDisk( float a, float b ) {","float r;","float fi;","if ( a > -b ) {","if ( a > b ) {","r = a;","fi = PI4 * ( b/a );","} else {","r = b;","fi = PI4 * ( 2.0 - a/b );","}","} else {","if ( a < b ) {","r = -a;","fi = PI4 * ( 4.0 + b/a );","} else {","r = -b;","if ( b != 0.0 ) {","fi = PI4 * ( 6.0 - a/b );","} else {","fi = 0.0;","}","}","}","float u = r * cos( fi );","float v = r * sin( fi );","return vec2( u, v );","}","#endif","void main() {","float centerBias = texture2D( tBlurAmount, vUv ).a;","vec4 mixed = vec4( 0.0 );","vec2 pixelRatio = centerBias * 16.0 / resolution;","#if defined( PREBAKED_SAMPLES )","for ( int i = 0; i < NUM_PREBAKED_SAMPLES1; i ++ ) {","vec4 sampleColor = texture2D( tBlurAmount, vUv + samplePoints1[ i ] * pixelRatio );","mixed += sampleColor;","}","#elif defined( CONCENTRIC_CIRCLE_SAMPLES )","const int samples = 3;","for ( int i = -samples; i <= samples; i ++ ) {","for ( int j = -samples; j <= samples; j ++ ) {","float a = float( j ) / 3.0;","float b = float( i ) / 3.0;","vec2 offset = mapSquareToDisk( a, b );","vec4 sampleColor = texture2D( tBlurAmount, vUv + ( offset * pixelRatio ) );","mixed += sampleColor;","}","}","#else","const int samples = 16;","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","float dx = cos( l );","float dy = sin( l );","vec4 sampleColor = texture2D( tBlurAmount, vUv + ( vec2( dx, dy ) * pixelRatio ) * r );","mixed += sampleColor;","z = z - dz;","l = l + DL;","}","#endif","mixed.rgb /= mixed.a;","mixed.a /= float( NUM_PREBAKED_SAMPLES1 );","mixed.rgb *= mixed.a;","if ( mixed.a == 0.0 ) mixed.rgb = texture2D( tDiffuse, vUv ).rgb;","mgl_FragColor = vec4( mixed.rgb, mixed.a );","}"].join("\n")},THREE.DOFBlurPass2Shader={uniforms:{tDiffuse:{type:"t",value:null},tBlurAmount:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1024,512)},samplePoints:{type:"fv2",value:THREE.Math.generateConcentricCircleSamples(3,6)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["#define PREBAKED_SAMPLES","#define NUM_PREBAKED_SAMPLES 9","#define DL 2.399963229728653","#define PI 3.141592653589793","#define PI4 0.7853981633974483","uniform sampler2D tDiffuse;","uniform sampler2D tBlurAmount;","uniform vec2 resolution;","uniform vec2 samplePoints[ NUM_PREBAKED_SAMPLES ];","varying vec2 vUv;","#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","#ifdef CONCENTRIC_CIRCLE_SAMPLE","vec2 mapSquareToDisk( float a, float b ) {","float r;","float fi;","if ( a > -b ) {","if ( a > b ) {","r = a;","fi = PI4 * ( b/a );","} else {","r = b;","fi = PI4 * ( 2.0 - a/b );","}","} else {","if ( a < b ) {","r = -a;","fi = PI4 * ( 4.0 + b/a );","} else {","r = -b;","if ( b != 0.0 ) {","fi = PI4 * ( 6.0 - a/b );","} else {","fi = 0.0;","}","}","}","float u = r * cos( fi );","float v = r * sin( fi );","return vec2( u, v );","}","#endif","void main() {","float centerBias = texture2D( tDiffuse, vUv ).a;","vec4 mixed = vec4( 0.0 );","vec2 pixelRatio = centerBias * 3.0 / resolution;","#if defined( PREBAKED_SAMPLES )","for ( int i = 0; i < NUM_PREBAKED_SAMPLES; i ++ ) {","vec4 sampleColor = texture2D( tDiffuse, vUv + samplePoints[ i ] * pixelRatio );","mixed += sampleColor;","}","#elif defined( CONCENTRIC_CIRCLE_SAMPLES )","const int samples = 3;","for ( int i = -samples; i <= samples; i ++ ) {","for ( int j = -samples; j <= samples; j ++ ) {","float a = float( j ) / 3.0;","float b = float( i ) / 3.0;","vec2 offset = mapSquareToDisk( a, b );","vec4 sampleColor = texture2D( tBlurAmount, vUv + ( offset * pixelRatio ) );","mixed += sampleColor;","}","}","#else","const int samples = 16;","float dz = 1.0 / float( samples );","float z = 1.0 - dz / 2.0;","float l = 0.0;","for ( int i = 0; i <= samples; i ++ ) {","float r = sqrt( 1.0 - z );","float dx = cos( l );","float dy = sin( l );","vec4 sampleColor = texture2D( tBlurAmount, vUv + ( vec2( dx, dy ) * pixelRatio ) * r );","mixed += sampleColor;","z = z - dz;","l = l + DL;","}","#endif","mixed.rgb /= mixed.a;","if ( mixed.a == 0.0 ) mixed.rgb = texture2D( tDiffuse, vUv ).rgb;","mgl_FragColor = vec4( mixed.rgb, 1.0 );","}"].join("\n")},THREE.DOFShaderChunk={computeBlurPars:["#ifdef DOF_PHYSICAL","uniform float lensAperture;","uniform float lensFocalLength;","uniform float lensBlurScale;","uniform float lensMaxCoc;","float computeBlurStrength( float pointDepth, float focalDepth ) {","float coc = abs( lensAperture * ( ( lensFocalLength * ( focalDepth - pointDepth ) ) / ( pointDepth * ( focalDepth - lensFocalLength ) ) ) );","return min( coc, lensMaxCoc );","}","#else","uniform float focusRampStart;","uniform float focusRampEnd;","uniform float maxBlur;","const float maxBias = 8.0;","float computeBlurBias( float pointDepth, float focalDepth ) {","float blurFactor = abs( focalDepth - pointDepth );","blurFactor *= smoothstep( focusRampStart, focusRampEnd, blurFactor );","float blurBias = maxBlur * blurFactor;","blurBias = min( blurBias, maxBias );","return blurBias;","}","#endif"].join("\n")},THREE.DOFBlurAmountShader={defines:{DOF_PHYSICAL:!0},uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fogAtmo,{tDepth:{type:"t",value:null},tDistance:{type:"t",value:null},tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1920,1080)},autoFocus:{type:"i",value:1},autoFocusPoint:{type:"v2",value:new THREE.Vector2(.5,.5)},focusDistance:{type:"f",value:5},focusRampStart:{type:"f",value:2},focusRampEnd:{type:"f",value:8},maxBlur:{type:"f",value:1},lensFocalLength:{type:"f",value:50},lensAperture:{type:"f",value:12.5},lensBlurScale:{type:"f",value:50},lensMaxCoc:{type:"f",value:1},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,1e3)}}]),vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:[THREE.DOFShaderChunk.computeBlurPars,"uniform bool autoFocus;","uniform vec2 autoFocusPoint;","uniform float focusDistance;","uniform vec2 cameraNearFar;","uniform sampler2D tDepth;","uniform sampler2D tDistance;","uniform sampler2D tDiffuse;","uniform vec2 resolution;","varying vec2 vUv;","#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","float texture2D_bicubic_packed( sampler2D texSampler, vec2 uv, vec2 textureDimensions ) {","vec2 invTextureDimensions = 1.0 / textureDimensions;","uv *= textureDimensions;","vec2 texelCenter   = floor( uv - 0.5 ) + 0.5;","vec2 fracOffset    = uv - texelCenter;","vec2 fracOffset_x2 = fracOffset * fracOffset;","vec2 fracOffset_x3 = fracOffset * fracOffset_x2;","vec2 weight0 = fracOffset_x2 - 0.5 * ( fracOffset_x3 + fracOffset );","vec2 weight1 = 1.5 * fracOffset_x3 - 2.5 * fracOffset_x2 + 1.0;","vec2 weight3 = 0.5 * ( fracOffset_x3 - fracOffset_x2 );","vec2 weight2 = 1.0 - weight0 - weight1 - weight3;","vec2 scalingFactor0 = weight0 + weight1;","vec2 scalingFactor1 = weight2 + weight3;","vec2 f0 = weight1 / ( weight0 + weight1 );","vec2 f1 = weight3 / ( weight2 + weight3 );","vec2 texCoord0 = texelCenter - 1.0 + f0;","vec2 texCoord1 = texelCenter + 1.0 + f1;","texCoord0 *= invTextureDimensions;","texCoord1 *= invTextureDimensions;","return unpackDepth(texture2D( texSampler, vec2( texCoord0.x, texCoord0.y ) )) * scalingFactor0.x * scalingFactor0.y +","unpackDepth(texture2D( texSampler, vec2( texCoord1.x, texCoord0.y ) )) * scalingFactor1.x * scalingFactor0.y +","unpackDepth(texture2D( texSampler, vec2( texCoord0.x, texCoord1.y ) )) * scalingFactor0.x * scalingFactor1.y +","unpackDepth(texture2D( texSampler, vec2( texCoord1.x, texCoord1.y ) )) * scalingFactor1.x * scalingFactor1.y;","}","#endif","vec4 texture2D_bicubic( sampler2D texSampler, vec2 uv, vec2 textureDimensions ) {","vec2 invTextureDimensions = 1.0 / textureDimensions;","uv *= textureDimensions;","vec2 texelCenter   = floor( uv - 0.5 ) + 0.5;","vec2 fracOffset    = uv - texelCenter;","vec2 fracOffset_x2 = fracOffset * fracOffset;","vec2 fracOffset_x3 = fracOffset * fracOffset_x2;","vec2 weight0 = fracOffset_x2 - 0.5 * ( fracOffset_x3 + fracOffset );","vec2 weight1 = 1.5 * fracOffset_x3 - 2.5 * fracOffset_x2 + 1.0;","vec2 weight3 = 0.5 * ( fracOffset_x3 - fracOffset_x2 );","vec2 weight2 = 1.0 - weight0 - weight1 - weight3;","vec2 scalingFactor0 = weight0 + weight1;","vec2 scalingFactor1 = weight2 + weight3;","vec2 f0 = weight1 / ( weight0 + weight1 );","vec2 f1 = weight3 / ( weight2 + weight3 );","vec2 texCoord0 = texelCenter - 1.0 + f0;","vec2 texCoord1 = texelCenter + 1.0 + f1;","texCoord0 *= invTextureDimensions;","texCoord1 *= invTextureDimensions;","return texture2D( texSampler, vec2( texCoord0.x, texCoord0.y ) ) * scalingFactor0.x * scalingFactor0.y +","texture2D( texSampler, vec2( texCoord1.x, texCoord0.y ) ) * scalingFactor1.x * scalingFactor0.y +","texture2D( texSampler, vec2( texCoord0.x, texCoord1.y ) ) * scalingFactor0.x * scalingFactor1.y +","texture2D( texSampler, vec2( texCoord1.x, texCoord1.y ) ) * scalingFactor1.x * scalingFactor1.y;","}",THREE.ShaderChunk.fogAtmoFragmentPars,THREE.ShaderChunk.linearDepthFragmentPars,"void main() {","#if defined( RGBA_DEPTH )","float depth = texture2D_bicubic_packed( tDepth, vUv, resolution );","#elif defined( FLOAT_DEPTH )","float depth = texture2D_bicubic( tDepth, vUv, resolution ).w;","#elif defined( TEXTURE_DEPTH )","float depth = texture2D( tDepth, vUv ).x * 2.0 - 1.0;","#endif","depth = linearizeDepth( depth, cameraNearFar );","float zFocusDistance;","if ( autoFocus ) {","zFocusDistance = texture2D( tDistance, autoFocusPoint ).x;","} else {","zFocusDistance = focusDistance;","}","#ifdef DOF_PHYSICAL","float blurAmount = computeBlurStrength( lensBlurScale * depth, lensBlurScale * zFocusDistance );","#else","float blurAmount = computeBlurBias( depth, zFocusDistance );","#endif","vec3 color = texture2D_bicubic( tDiffuse, vUv, resolution ).rgb;","#ifdef FOG_ENABLED","color = addFog( color, depth );","#endif","mgl_FragColor = vec4( color * blurAmount, blurAmount );","}"].join("\n")},THREE.DepthOfFieldShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},tBlur:{type:"t",value:null},tDistance:{type:"t",value:null},focusDistance:{type:"f",value:5},focusRampStart:{type:"f",value:2},focusRampEnd:{type:"f",value:8},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,1e3)},maxBlur:{type:"f",value:1},blurSize:{type:"v2",value:new THREE.Vector2(1024,512)},autoFocus:{type:"i",value:1},autoFocusPoint:{type:"v2",value:new THREE.Vector2(.5,.5)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform bool autoFocus;","uniform vec2 autoFocusPoint;","uniform float focusDistance;","uniform float focusRampStart;","uniform float focusRampEnd;","uniform vec2 cameraNearFar;","uniform float maxBlur;","uniform vec2 blurSize;","uniform sampler2D tDiffuse;","uniform sampler2D tBlur;","uniform sampler2D tDepth;","uniform sampler2D tDistance;","varying vec2 vUv;","const float maxBias = 3.0;",THREE.ShaderChunk.linearDepthFragmentPars,"#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","void main() {","#if defined( RGBA_DEPTH )","vec4 packedDepth = texture2D( tDepth, vUv );","float depth = unpackDepth( packedDepth );","#elif defined( FLOAT_DEPTH )","float depth = texture2D( tDepth, vUv ).w;","#elif defined( TEXTURE_DEPTH )","float depth = texture2D( tDepth, vUv ).x * 2.0 - 1.0;","#endif","depth = linearizeDepth( depth, cameraNearFar );","float zFocusDistance;","if ( autoFocus ) {","zFocusDistance = texture2D( tDistance, autoFocusPoint ).x;","} else {","zFocusDistance = focusDistance;","}","float blurFactor = abs( zFocusDistance - depth );","#ifdef DOF_DEBUG","vec4 debugColor = vec4( 1.0 );","if ( blurFactor < 0.1 ) {","debugColor = vec4( 1.0, 0.0, 0.0, 1.0 );","}","if ( autoFocus && any( lessThan( abs( vUv - autoFocusPoint ), 0.001 * vec2( 1.0, 2.0 ) ) ) ) {","debugColor *= vec4( 0.0, 0.0, 0.0, 1.0 );","}","#endif","blurFactor *= smoothstep( focusRampStart, focusRampEnd, blurFactor );","float bias = maxBlur * blurFactor;","bias = min( bias, maxBias );","float blurStep = 10.0 * maxBlur;","float dx = blurStep / blurSize.x;","float dy = blurStep / blurSize.y;","vec4 blur0 = texture2D( tBlur, vUv, bias );","vec4 blur1 = texture2D( tBlur, vUv + vec2( -dx, -dy ), bias );","vec4 blur2 = texture2D( tBlur, vUv + vec2(  dx,  dy ), bias );","vec4 blur3 = texture2D( tBlur, vUv + vec2( -dx,  dy ), bias  );","vec4 blur4 = texture2D( tBlur, vUv + vec2(  dx, -dy ), bias  );","vec4 blur = ( blur0 + blur1 + blur2 + blur3 + blur4 ) * 0.2;","vec4 sharp = texture2D( tDiffuse, vUv );","vec4 mixed = mix( sharp, blur, min( bias, 1.0 ) );","mgl_FragColor = mixed;","mgl_FragColor.a = 1.0;","#ifdef DOF_DEBUG","mgl_FragColor *= debugColor;","#endif","}"].join("\n")},THREE.DistanceShader={uniforms:{tDepth:{type:"t",value:null},tDistance:{type:"t",value:null},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,1e3)},persistence:{type:"f",value:.75},samplePoint:{type:"v2",value:new THREE.Vector2(.5,.5)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform vec2 cameraNearFar;","uniform float persistence;","uniform vec2 samplePoint;","uniform sampler2D tDepth;","uniform sampler2D tDistance;","varying vec2 vUv;",THREE.ShaderChunk.linearDepthFragmentPars,"#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","void main() {","#if defined( RGBA_DEPTH )","vec4 packedDepth = texture2D( tDepth, samplePoint );","float depth = unpackDepth( packedDepth );","#elif defined( FLOAT_DEPTH )","float depth = texture2D( tDepth, samplePoint ).w;","#elif defined( TEXTURE_DEPTH )","float depth = texture2D( tDepth, samplePoint ).x * 2.0 - 1.0;","#endif","depth = linearizeDepth( depth, cameraNearFar );","float oldDepth = texture2D( tDistance, samplePoint ).x;","depth = mix( depth, oldDepth, persistence );","mgl_FragColor = vec4( depth );","mgl_FragColor.a = 1.0;","}"].join("\n")},THREE.ChromaticAberrationShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:.005},angle:{type:"f",value:0}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 offset = amount * ( length( vUv - 0.5 ) + 0.01 ) * vec2( cos( angle ), sin( angle ) );","vec4 cr = texture2D( tDiffuse, vUv + offset );","vec4 cga = texture2D( tDiffuse, vUv );","vec4 cb = texture2D( tDiffuse, vUv - offset );","mgl_FragColor = vec4( cr.r, cga.g, cb.b, cga.a );","}"].join("\n")},THREE.CLUTShader={defines:{LINEAR_FILTER:1},uniforms:{tDiffuse:{type:"t",value:null},tCLUT:{type:"t",value:null},cubeSize:{type:"f",value:64},texSize:{type:"f",value:512}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform sampler2D tCLUT;","uniform float cubeSize;","uniform float texSize;","varying vec2 vUv;","#ifdef LINEAR_FILTER","vec4 subsample( sampler2D tex, float pixelR, float pixelG, float pixelB, float size, float nPixels ) {","float linearPixelIndex = pixelB * size * size + pixelG * size + pixelR;","float xPixelIndex = mod( linearPixelIndex, nPixels );","float yPixelIndex = floor( linearPixelIndex / nPixels );","vec4 outColor = texture2D( tex, vec2( xPixelIndex, yPixelIndex ) / nPixels );","return outColor;","}","vec4 sampleAs3DTextureLinear( sampler2D tex, vec3 texCoord, float size, float nPixels ) {","float n = size - 1.0;","vec3 pixel = texCoord.rgb * n;","vec3 pixelMin = floor( pixel );","vec3 pixelMax = ceil( pixel );","vec4 RminGminBmin = subsample( tex, pixelMin.r, pixelMin.g, pixelMin.b, size, nPixels );","vec4 RminGminBmax = subsample( tex, pixelMin.r, pixelMin.g, pixelMax.b, size, nPixels );","vec4 RminGmaxBmin = subsample( tex, pixelMin.r, pixelMax.g, pixelMin.b, size, nPixels );","vec4 RminGmaxBmax = subsample( tex, pixelMin.r, pixelMax.g, pixelMax.b, size, nPixels );","vec4 RmaxGminBmin = subsample( tex, pixelMax.r, pixelMin.g, pixelMin.b, size, nPixels );","vec4 RmaxGminBmax = subsample( tex, pixelMax.r, pixelMin.g, pixelMax.b, size, nPixels );","vec4 RmaxGmaxBmin = subsample( tex, pixelMax.r, pixelMax.g, pixelMin.b, size, nPixels );","vec4 RmaxGmaxBmax = subsample( tex, pixelMax.r, pixelMax.g, pixelMax.b, size, nPixels );","vec3 t = pixel - pixelMin;","RminGminBmin = mix( RminGminBmin, RminGminBmax, t.b );","RminGmaxBmin = mix( RminGmaxBmin, RminGmaxBmax, t.b );","RmaxGminBmin = mix( RmaxGminBmin, RmaxGminBmax, t.b );","RmaxGmaxBmin = mix( RmaxGmaxBmin, RmaxGmaxBmax, t.b );","RminGminBmin = mix( RminGminBmin, RminGmaxBmin, t.g );","RmaxGminBmin = mix( RmaxGminBmin, RmaxGmaxBmin, t.g );","RminGminBmin = mix( RminGminBmin, RmaxGminBmin, t.r );","return RminGminBmin;","}","#else","vec4 sampleAs3DTextureNearest( sampler2D tex, vec3 texCoord, float size, float nPixels ) {","float n = size - 1.0;","vec3 pixel = floor( texCoord.rgb * n );","float linearPixelIndex = pixel.b * size * size + pixel.g * size + pixel.r;","float xPixelIndex = mod( linearPixelIndex, nPixels );","float yPixelIndex = floor( linearPixelIndex / nPixels );","vec4 outColor = texture2D( tex, vec2( xPixelIndex, yPixelIndex ) / nPixels );","return outColor;","}","#endif","void main() {","vec4 srcColor = texture2D( tDiffuse, vUv );","#ifdef LINEAR_FILTER","vec4 dstColor = sampleAs3DTextureLinear( tCLUT, srcColor.rgb, cubeSize, texSize );","#else","vec4 dstColor = sampleAs3DTextureNearest( tCLUT, srcColor.rgb, cubeSize, texSize );","#endif","mgl_FragColor = vec4( dstColor.rgb, srcColor.a );","}"].join("\n")},THREE.SharpenShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1920,1080)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform vec2 resolution;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec2 r = 1.5 / resolution.xy;","vec3 sampleA = texture2D( tDiffuse, vUv + r ).rgb;","vec3 sampleB = texture2D( tDiffuse, vUv - r ).rgb;","vec3 sampleC = texture2D( tDiffuse, vUv + vec2(  r.x, -r.y ) ).rgb;","vec3 sampleD = texture2D( tDiffuse, vUv + vec2( -r.x,  r.y ) ).rgb;","vec3 avgNeighbors = 0.25 * ( sampleA + sampleB + sampleC + sampleD );","vec3 sampleCenter = texture2D( tDiffuse, vUv ).rgb;","vec3 colorSharp = 2.0 * sampleCenter - avgNeighbors;","mgl_FragColor = vec4( colorSharp, 1.0 );","}"].join("\n")},THREE.SpriteShader={defines:{BILLBOARD:!1,SDF:!1,FOG:!1,ANTIALIAS:!1,ALPHATEST:.5},extensions:{OES_standard_derivatives:!0},uniforms:{map:{type:"t",value:null},alphaTest:{type:"f",value:.5},epsilon:{type:"f",value:.1},fogDensity:{type:"f",value:.015},fogColor:{type:"c",value:new THREE.Color(0)},baseColor:{type:"c",value:new THREE.Color(16777215)}},vertexShader:["attribute vec3 color;","attribute vec3 offset;","attribute vec2 scale;","varying vec2 vUv;","varying vec3 vColor;","void main() {","vUv = uv;","vColor = color;","#ifdef BILLBOARD","vec4 tmpPosition = modelViewMatrix * vec4( offset, 1.0 ) + vec4( position * vec3( scale, 1.0 ), 0.0 );","gl_Position = projectionMatrix * tmpPosition;","#else","vec3 spritePosition = position * vec3( scale, 1.0 ) + offset;","vec4 mvPosition = modelViewMatrix * vec4( spritePosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","#endif","}"].join("\n"),fragmentShader:["uniform sampler2D map;","uniform float alphaTest;","uniform float epsilon;","uniform float fogDensity;","uniform vec3 fogColor;","uniform vec3 baseColor;","varying vec2 vUv;","varying vec3 vColor;","void main() {","vec4 texture = texture2D( map, vUv );","#ifdef SDF","#if defined( GL_OES_standard_derivatives ) || __VERSION__ >= 300","float w = clamp( 200.0 * epsilon * ( abs( dFdx( vUv.x ) ) + abs( dFdy( vUv.y ) ) ), 0.0, 0.5 );","#else","float w = epsilon;","#endif","float alpha = smoothstep( 0.5 - w, 0.5 + w, texture.r );","alpha = pow( alpha, 1.0/2.2 );","if ( alpha < alphaTest ) discard;","#ifdef ANTIALIAS","mgl_FragColor = vec4( baseColor * vColor, alpha );","#else","mgl_FragColor = vec4( baseColor * vColor, 1.0 );","#endif","#else","float alpha = texture.a;","#ifdef ALPHATEST","if ( alpha < alphaTest ) discard;","#endif","mgl_FragColor = vec4( baseColor * vColor * texture.rgb, 1.0 );","#endif","#ifdef FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","mgl_FragColor = mix( mgl_FragColor, vec4( fogColor, mgl_FragColor.a ), fogFactor );","#endif","#ifdef TRANSPARENT","mgl_FragColor.rgb *= mgl_FragColor.a;","#endif","}"].join("\n")},THREE.TonemapShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:1},whitePoint:{type:"f",value:1}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;",THREE.ShaderChunk.tonemappingFragmentPars,"varying vec2 vUv;","void main() {","vec4 color = texture2D( tDiffuse, vUv );","#ifdef TONEMAPPING","float m = max( color.r, max( color.g, color.b ) );","color.rgb = applyTonemapping( color.rgb, brightness, whitePoint );","color.a = m;","#endif","mgl_FragColor = color;","}"].join("\n")},THREE.TonemapInverseShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:1},whitePoint:{type:"f",value:1}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;",THREE.ShaderChunk.tonemappingFragmentPars,"varying vec2 vUv;","void main() {","vec4 color = texture2D( tDiffuse, vUv );","#ifdef TONEMAPPING","color.rgb = inverseTonemapping( color.rgb, brightness, whitePoint );","if ( color.a > 0.9 ) color.rgb *= color.a;","#endif","mgl_FragColor = color;","}"].join("\n")},THREE.RendererUtils={},THREE.RendererUtils.getUvScale=function(e){var t;
return e.map?t=e.map:e.displacementMap?t=e.displacementMap:e.lightMap?t=e.lightMap:e.specularMap?t=e.specularMap:e.glossMap?t=e.glossMap:e.normalGlossMap?t=e.normalGlossMap:e.normalMap?t=e.normalMap:e.bumpMap&&(t=e.bumpMap),t},THREE.ForwardRenderer=function(e){function t(e,t,a){var o,n,s,l,d=e.attributesList,h=e.offsets,c=e.numInstances>0&&nr,u=e.attributes.index;(h.length>1||c)&&(a=!0);for(var f=0,p=h.length;p>f;f++){var m=h[f];if(a){for(var v=m.index,g=0,S=d.length;S>g;g++)o=d[g],o.attached&&(s=o.name,"index"!==s&&(n=t[s],0>n||void 0===n||(l=o.itemSize,i(n),Rt.bindBuffer(Rt.ARRAY_BUFFER,o.buffer),Rt.vertexAttribPointer(n,l,Rt.FLOAT,!1,0,v*l*4),c&&o.divisor>0&&(lr?Rt.vertexAttribDivisor(n,o.divisor):ea.vertexAttribDivisorANGLE(n,o.divisor)))));Rt.bindBuffer(Rt.ELEMENT_ARRAY_BUFFER,u.buffer)}if(Nr(t,e,m.index),r(),c){lr?Rt.drawElementsInstanced(Rt.TRIANGLES,m.count,u.type,m.start*u.typeSize,e.numVisibleInstances):ea.drawElementsInstancedANGLE(Rt.TRIANGLES,m.count,u.type,m.start*u.typeSize,e.numVisibleInstances);for(var g=0,S=d.length;S>g;g++)o=d[g],o.attached&&(s=o.name,"index"!==s&&(n=t[s],0>n||void 0===n||o.divisor>0&&(Rt.bindBuffer(Rt.ARRAY_BUFFER,o.buffer),lr?Rt.vertexAttribDivisor(n,0):ea.vertexAttribDivisorANGLE(n,0))))}else Rt.drawElements(Rt.TRIANGLES,m.count,u.type,m.start*u.typeSize)}}function a(e,t,a,o){var n,s,l=e.attributesList,d=e.numInstances>0&&nr;if(o||d)for(var h=0,c=l.length;c>h;h++)n=l[h],n.attached&&(s=t[n.name],0>s||void 0===s||(i(s),Rt.bindBuffer(Rt.ARRAY_BUFFER,n.buffer),Rt.vertexAttribPointer(s,n.itemSize,Rt.FLOAT,!1,0,0),d&&n.divisor>0&&(lr?Rt.vertexAttribDivisor(s,n.divisor):ea.vertexAttribDivisorANGLE(s,n.divisor))));Nr(t,e,0),r();var u=e.attributes.position;if(d){lr?Rt.drawArraysInstanced(a,0,u.numItems/3,e.numVisibleInstances):ea.drawArraysInstancedANGLE(a,0,u.numItems/3,e.numVisibleInstances);for(var h=0,c=l.length;c>h;h++)n=l[h],n.attached&&(s=t[n.name],0>s||void 0===s||(Rt.bindBuffer(Rt.ARRAY_BUFFER,n.buffer),n.divisor>0&&(lr?Rt.vertexAttribDivisor(s,0):ea.vertexAttribDivisorANGLE(s,0))))}else Rt.drawArrays(a,0,u.numItems/3)}function r(){for(var e=0,t=Ea.length;t>e;e++){var a=Ea[e];!Pa[a]&&ba[a]&&(Rt.enableVertexAttribArray(a),void 0===Pa[a]&&La.push(a),Pa[a]=!0)}for(var e=0,t=La.length;t>e;e++){var a=La[e];Pa[a]&&!ba[a]&&(Rt.disableVertexAttribArray(a),Pa[a]=!1)}}function i(e){ba[e]||(ba[e]=!0,Ea.push(e))}function o(){for(var e=0,t=Ea.length;t>e;e++){var a=Ea[e];ba[a]=!1}Ea.length=0}function n(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function s(e,t){return t[0]-e[0]}function l(e,t,a){if(e.length)for(var r=0,i=e.length;i>r;r++)ia=null,la=null,fa=-1,xa=-1,Ga=-1,ca=-1,ua=-1,sa=-1,na=-1,Ya=!0,e[r].render(t,a,Aa,Ta),ia=null,la=null,fa=-1,xa=-1,Ga=-1,ca=-1,ua=-1,sa=-1,na=-1,Ya=!0}function d(e,t,a,r,i,o,n,s){var l,d,h,c;t?(d=e.length-1,h=-1,c=-1):(d=0,h=e.length,c=1);for(var u,f=d;f!==h;f+=c)l=e[f],l.render&&(u=l[a],u&&u.visible!==!1&&u.enabled!==!1&&(s&&ta.setBlending(u.blending,u.blendEquation,u.blendSrcColor,u.blendDstColor,u.blendSrcAlpha,u.blendDstAlpha),ta.setDepthTest(u.depthTest),ta.setDepthWrite(u.depthWrite),ta.setPolygonOffset(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits),ta.setMaterialFaces(u),ta.setProgram(r,i,o,n,u,l.object,l.geometry),ta.renderGeometry(u,l.geometry,l.object)))}function h(e,t,a,r,i,o,n){for(var s,l,d,h=0,c=e.length;c>h;h++)s=e[h],l=s.object,s.render&&(d=s[t],d&&d.visible!==!1&&d.enabled!==!1&&(n&&ta.setBlending(d.blending,d.blendEquation,d.blendSrcColor,d.blendDstColor,d.blendSrcAlpha,d.blendDstAlpha),ta.setDepthTest(d.depthTest),ta.setDepthWrite(d.depthWrite),ta.setPolygonOffset(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),ta.setProgram(a,r,i,o,d,l,null),ta.renderImmediateObject(d,l)))}function c(e){var t=e.object,a=e.index,r=t.materials[a];r&&(r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null))}function u(e){var t=e.object,a=e.index,r=t.materials[a];r&&(r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null))}function f(e,t){var a;if(!e.__webglInit&&(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,e instanceof THREE.Mesh||e instanceof THREE.Particles))for(var r=0,i=e.geometries.length;i>r;r++)a=e.geometries[r],Ir(a);if(!e.__webglActive){if(e instanceof THREE.Mesh||e instanceof THREE.Particles)for(var r=0,i=e.geometries.length;i>r;r++)a=e.geometries[r],p(t.__webglObjects,a,e,r);else(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&m(t.__webglObjectsImmediate,e);e.__webglActive=!0}}function p(e,t,a,r){e.push({render:!1,index:r,geometry:t,object:a,opaque:null,transparent:null,z:0,id:0})}function m(e,t){e.push({render:!1,index:0,object:t,opaque:null,transparent:null,z:0,id:0})}function v(e){var t=e.geometries;if(e instanceof THREE.Mesh||e instanceof THREE.Particles)for(var a=0,r=t.length;r>a;a++)ta.setBuffers(t[a])}function g(e,t){e instanceof THREE.Mesh||e instanceof THREE.Particles?S(t.__webglObjects,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&S(t.__webglObjectsImmediate,e),e.__webglActive=!1}function S(e,t){for(var a=e.length-1;a>=0;a--)e[a].object===t&&e.splice(a,1)}function x(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}function G(e,t){var a=t.color;if(ta.gammaInput?e.diffuse.value.setRGBAGamma(a,t.opacity):e.diffuse.value.setRGBA(a,t.opacity),t instanceof THREE.EmissiveMaterial||t instanceof THREE.DynamicParticleMaterial){var r=e.diffuse.value.data,i=t.intensity;r[0]*=i,r[1]*=i,r[2]*=i}e.map.value=t.map,e.lightMap.value=t.lightMap;var o=Rr(t);if(void 0!==o){var n=o.offset,s=o.repeat;e.offsetRepeat.value.set(n.data[0],n.data[1],s.data[0],s.data[1])}t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScaleBias.value.set(t.displacementScale,t.displacementBias),e.displacementNormalScale.value=t.displacementNormalScale),e.brightness.value=ta.brightness,e.whitePoint.value=ta.whitePoint}function M(e,t,a){e.particleSize.value=t.particleSize,e.screenWidth.value=Aa,t instanceof THREE.DynamicParticleMaterial&&(e.time.value=t.time,e.timeRange.value=t.timeRange,e.timeOffset.value=t.timeOffset,e.numFrames.value=t.numFrames,e.frameDuration.value=t.frameDuration,e.cameraNearFar.value.set(a.near,a.far),e.additiveFactor.value=t.additiveFactor)}function y(e,t,a){e.fogColor.value=t.color,t instanceof THREE.LinearFog?e.fogNearFar.value.set(t.near,t.far):t instanceof THREE.ExponentialFog?e.fogDensity.value=t.density:t instanceof THREE.AtmosphericFog&&(e.fogStartStrength.value.set(t.start,t.strength),e.cameraNearFar.value.set(a.near,a.far))}function X(e,t){e.fogHeight.value=t.height,e.fogVisibilityDistance.value=t.visibilityDistance,e.fogFadeSpeed.value=t.fadeSpeed,e.fogShallowDepthColor.value=t.shallowDepthColor,e.fogDeepDepthColor.value=t.deepDepthColor,e.fogRgbExtinctionDistance.value=t.rgbExtinctionDistance}function _(e,t){var a=t.specular;ta.gammaInput?e.specular.value.setRGBAGamma(a,t.shininess):e.specular.value.setRGBA(a,t.shininess),t.specularMap&&(e.specularMap.value=t.specularMap),t.glossMap&&(e.glossMap.value=t.glossMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),(t.normalMap||t.normalGlossMap)&&(e.normalMap.value=t.normalGlossMap?t.normalGlossMap:t.normalMap,e.normalScale.value.copy(t.normalScale)),t.bumpDetailMap&&(e.bumpDetailMap.value=t.bumpDetailMap),t.normalDetailMap&&(e.normalDetailMap.value=t.normalDetailMap),(t.bumpDetailMap||t.normalDetailMap)&&e.detailRepeatScale.value.set(t.detailRepeat.x,t.detailRepeat.y,t.detailScale),t.wrapAround&&(e.wrapRGB.value=t.wrapRGB),t.parallax&&(e.parallaxScale.value=t.parallaxScale)}function w(e,t){e.directionalLightPositionVS&&(e.directionalLightPositionVS.value=t.directional.positionsFull),e.directionalLightColor.value=t.directional.colors,e.directionalLightDirectionVS.value=t.directional.positionsNorm,e.directionalLightPars.value=t.directional.pars,e.pointLightColor.value=t.point.colors,e.pointLightPositionVS.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.sphereLightColor.value=t.sphere.colors,e.sphereLightPositionVS.value=t.sphere.positions,e.sphereLightPars.value=t.sphere.pars,e.tubeLightColor.value=t.tube.colors,e.tubeLightPosition0VS.value=t.tube.positions0,e.tubeLightPosition1VS.value=t.tube.positions1,e.tubeLightPars.value=t.tube.pars,e.spotLightColor.value=t.spot.colors,e.spotLightPositionVS.value=t.spot.positions,e.spotLightDirectionVS.value=t.spot.directions,e.spotLightPars.value=t.spot.pars,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirectionVS.value=t.hemi.positions,e.areaLightColor.value=t.area.colors,e.areaLightPosition.value=t.area.positions,e.areaLightNormal.value=t.area.normals,e.areaLightRight.value=t.area.rights,e.areaLightUp.value=t.area.ups,e.areaLightPars.value=t.area.pars,e.areaLightAttenuation.value=t.area.attenuations,e.areaLightTexture.value=t.area.textures,e.imageLightTextureDiffuse.value=t.image.texturesDiffuse,e.imageLightTextureSpecular.value=t.image.texturesSpecular,e.imageLightTextureMip.value=t.image.texturesMip,e.imageLightPars.value=t.image.pars,e.imageLightPositionWS.value=t.image.positions,e.imageLightSize.value=t.image.sizes,e.polyLightColor.value=t.poly.colors,e.polyLightPoints.value=t.poly.points,e.polyLightPars.value=t.poly.pars,e.polyLightTexture.value=t.poly.textures,e.polyLightTexturePars.value=t.poly.texturesPars,e.samplerLtcMat.value=t.poly.samplerLtcMat,e.samplerLtcMag.value=t.poly.samplerLtcMag}function D(e,t,a,r,i){e.useDepthTexture&&$a&&ta.shadowMapUseDepthTextures&&(e=e.depthTexture),r.shadowMap.value[i]=e,r.shadowMatrix.value[i]=t;var o=Math.sqrt(a.shadowDarkness),n=a.properties.shadowMapPars;n.setZ(o),n.setW(a.shadowBias),r.shadowMapPars.value[i]=n}function C(e,t){for(var a=0,r=0,i=t.length;i>r;r++){var o=t[r];if(o.castShadow){if(o instanceof THREE.SpotLight||o instanceof THREE.AreaLight||o instanceof THREE.PolyLight||(o instanceof THREE.DirectionalLight||o instanceof THREE.DayLight||o instanceof THREE.DayLightCube)&&!o.shadowCascade){var n=o.properties,s=n.shadowMap,l=n.shadowMatrixForward;if(s instanceof Array)for(var d=0,h=s.length;h>d;d++)D(s[d],l[d],o,e,a),a++;else D(s,l,o,e,a),a++}if(o instanceof THREE.SphereLight){var n=o.properties,s=n.shadowMap,l=n.shadowMatrixForward;if(s instanceof Array){var d=o.forwardShadowSide;D(s[d],l[d],o,e,a)}else D(s,l,o,e,a);a++}}}}function A(e,t){e.modelViewMatrix&&Rt.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&Rt.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements),e.modelMatrix&&Rt.uniformMatrix4fv(e.modelMatrix,!1,t.matrixWorld.elements)}function T(){var e=da;return e>=dr&&console.warn("THREE:ForwardRenderer: trying to use "+(e+1)+" texture units while this GPU supports only "+dr),da+=1,e}function P(e){for(var t,a,r,i,o,n,s,l,d,h,c=0,u=e.length;u>c;c++)if(t=e[c],a=t[0],o=t[1],i=a.type,r=a.value,"i"===i)Rt.uniform1i(o,r);else if("f"===i)Rt.uniform1f(o,r);else if("v2"===i)Rt.uniform2fv(o,r.data);else if("v3"===i)Rt.uniform3fv(o,r.data);else if("v4"===i)Rt.uniform4fv(o,r.data);else if("c"===i)Rt.uniform3f(o,r.r,r.g,r.b);else if("iv1"===i)Rt.uniform1iv(o,r);else if("iv2"===i)Rt.uniform2iv(o,r);else if("iv3"===i)Rt.uniform3iv(o,r);else if("fv1"===i)Rt.uniform1fv(o,r);else if("fv2"===i)Rt.uniform2fv(o,r);else if("fv3"===i)Rt.uniform3fv(o,r);else if("fv4"===i)Rt.uniform4fv(o,r);else if("v2v"===i){for(void 0===a._array&&(a._array=new Float32Array(2*r.length)),l=0,d=r.length;d>l;l++)h=2*l,a._array.set(r[l].data,h);Rt.uniform2fv(o,a._array)}else if("v3v"===i){for(void 0===a._array&&(a._array=new Float32Array(3*r.length)),l=0,d=r.length;d>l;l++)h=3*l,a._array.set(r[l].data,h);Rt.uniform3fv(o,a._array)}else if("v4v"===i){for(void 0===a._array&&(a._array=new Float32Array(4*r.length)),l=0,d=r.length;d>l;l++)h=4*l,a._array.set(r[l].data,h);Rt.uniform4fv(o,a._array)}else if("m4"===i)Rt.uniformMatrix4fv(o,!1,r.elements);else if("m4v"===i){for(void 0===a._array&&(a._array=new Float32Array(16*r.length)),l=0,d=r.length;d>l;l++)r[l].flattenToArrayOffset(a._array,16*l);Rt.uniformMatrix4fv(o,!1,a._array)}else if("t"===i){if(n=r,s=T(),Rt.uniform1i(o,s),!n)continue;n.image instanceof Array?Z(n,s):n instanceof THREE.RenderTargetCube?Q(n,s):ta.setTexture(n,s)}else if("tv"===i){for(void 0===a._array&&(a._array=[]),l=0,d=a.value.length;d>l;l++)a._array[l]=T();for(Rt.uniform1iv(o,a._array),l=0,d=a.value.length;d>l;l++)n=a.value[l],s=a._array[l],n&&(n.image instanceof Array?Z(n,s):n instanceof THREE.RenderTargetCube?Q(n,s):ta.setTexture(n,s))}}function L(e,t){e._modelViewMatrix.multiply(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getNormalMatrix(e._modelViewMatrix)}function b(e,t,a,r){var i=a.r*r,o=a.g*r,n=a.b*r;ta.gammaInput&&(i*=i,o*=o,n*=n),e[t]=i,e[t+1]=o,e[t+2]=n}function E(e,t,a){var r=a.data;e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2]}function F(e,t,a,r){var i=a.data;e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=r}function R(e,t,a,r){e[t]=a,e[t+1]=r}function U(e,t,a,r,i){e[t]=a,e[t+1]=r,e[t+2]=i}function I(e,t,a,r,i,o){e[t]=a,e[t+1]=r,e[t+2]=i,e[t+3]=o}function N(e,t){var a,r,i,o,n,s,l,d=Ka,h=d.directional.colors,c=d.directional.positionsNorm,u=d.directional.positionsFull,f=d.directional.pars,p=d.point.colors,m=d.point.positions,v=d.point.distances,g=d.sphere.colors,S=d.sphere.positions,x=d.sphere.pars,G=d.tube.colors,M=d.tube.positions0,y=d.tube.positions1,X=d.tube.pars,_=d.spot.colors,w=d.spot.positions,D=d.spot.directions,C=d.spot.pars,A=d.hemi.skyColors,T=d.hemi.groundColors,P=d.hemi.positions,L=d.area.colors,N=d.area.positions,B=d.area.normals,O=d.area.rights,V=d.area.ups,k=d.area.pars,z=d.area.attenuations,H=d.area.textures,W=d.image.pars,j=d.image.texturesDiffuse,q=d.image.texturesSpecular,Y=d.image.texturesMip,K=d.image.positions,Z=d.image.sizes,Q=d.poly.colors,J=d.poly.points,$=d.poly.pars,et=d.poly.textures,tt=d.poly.texturesPars,at=0,rt=0,it=0,ot=0,nt=0,st=0,lt=0,dt=0,ht=0,ct=0,ut=0,ft=0,pt=0,mt=0,vt=0,gt=0,St=0,xt=0,Gt=999999,Mt=0,yt=[],Xt=[],_t=[],wt=[],Dt=[],Ct=t.matrixWorldInverse;for(a=0,r=e.length;r>a;a++)if(i=e[a],i.onlyShadow)i instanceof THREE.DirectionalLight||i instanceof THREE.DayLight||i instanceof THREE.DayLightCube?i.castShadow&&yt.push(i):i instanceof THREE.SpotLight?i.castShadow&&Xt.push(i):i instanceof THREE.AreaLight?i.castShadow&&_t.push(i):i instanceof THREE.PolyLight?i.castShadow&&wt.push(i):i instanceof THREE.SphereLight&&i.castShadow&&Dt.push(i);else if(o=i.color,n=i.intensity,s=i.distance,l=i.matrixWorld,i instanceof THREE.DirectionalLight){if(ct+=1,!i.visible)continue;if(Ba.copy(l.getPosition()),Ba.subSelf(i.target.matrixWorld.getPosition()),Ba.normalize(),Ct.rotateAxis(Ba),0===Ba.data[0]&&0===Ba.data[1]&&0===Ba.data[2])continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),E(c,3*at,Ba),F(u,4*at,Na,s),b(h,3*at,o,n),f[at]=i.castShadow?yt.length:Gt,i.castShadow&&yt.push(i),at+=1}else if(i instanceof THREE.PointLight){if(ut+=1,!i.visible)continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),E(m,3*rt,Na),b(p,3*rt,o,n),v[rt]=s,rt+=1}else if(i instanceof THREE.SphereLight){if(ft+=1,!i.visible)continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),E(S,3*it,Na),b(g,3*it,o,n),U(x,3*it,s,i.radius,i.castShadow?Dt.length:Gt),i.castShadow&&Dt.push(i),it+=1}else if(i instanceof THREE.TubeLight){if(pt+=1,!i.visible)continue;Na.copy(i.endPoint0.matrixWorld.getPosition()),Ct.multiplyVector3(Na),E(M,3*ot,Na),Na.copy(i.endPoint1.matrixWorld.getPosition()),Ct.multiplyVector3(Na),E(y,3*ot,Na),b(G,3*ot,o,n),R(X,2*ot,s,i.radius),ot+=1}else if(i instanceof THREE.SpotLight){if(mt+=1,!i.visible)continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),Ba.copy(l.getPosition()),Ba.subSelf(i.target.matrixWorld.getPosition()),Ba.normalize(),Ct.rotateAxis(Ba),E(w,3*nt,Na),E(D,3*nt,Ba),b(_,3*nt,o,n),Mt=Math.cos(.5*i.angle),I(C,4*nt,Mt,i.exponent,s,i.castShadow?Xt.length:Gt),i.castShadow&&Xt.push(i),nt+=1}else if(i instanceof THREE.HemisphereLight){if(vt+=1,!i.visible)continue;if(Ba.copy(l.getPosition()),Ba.normalize(),Ct.rotateAxis(Ba),0===Ba.data[0]&&0===Ba.data[1]&&0===Ba.data[2])continue;E(P,3*st,Ba),b(A,3*st,i.color,n),b(T,3*st,i.groundColor,n),st+=1}else if(i instanceof THREE.AreaLight){if(gt+=1,!i.visible)continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),Oa.copy(i.normal),l.rotateAxis(Oa),Ct.rotateAxis(Oa),Va.copy(i.right),l.rotateAxis(Va),Ct.rotateAxis(Va),ka.cross(Va,Oa),ka.normalize(),E(N,3*lt,Na),E(B,3*lt,Oa),E(O,3*lt,Va),E(V,3*lt,ka),b(L,3*lt,o,n),U(z,3*lt,i.constantAttenuation,i.linearAttenuation,i.quadraticAttenuation),I(k,4*lt,i.width,i.height,i.texture?1:0,i.castShadow?_t.length:Gt),H[lt]=i.texture,i.castShadow&&_t.push(i),lt+=1}else if(i instanceof THREE.PolyLight){if(xt+=1,!i.visible)continue;Na.copy(l.getPosition()),Va.copy(i.right).normalize(),Oa.copy(i.normal).normalize(),l.rotateAxis(Va),l.rotateAxis(Oa),ka.cross(Va,Oa),ka.normalize(),Va.multiplyScalar(i.width),ka.multiplyScalar(i.height),Ha.copy(Na),Ha.subSelf(Va),Ha.addSelf(ka),Wa.copy(Na),Wa.addSelf(Va),Wa.addSelf(ka),ja.copy(Na),ja.addSelf(Va),ja.subSelf(ka),qa.copy(Na),qa.subSelf(Va),qa.subSelf(ka),Ct.multiplyVector3(Ha),Ct.multiplyVector3(Wa),Ct.multiplyVector3(ja),Ct.multiplyVector3(qa),E(J,12*ht,Ha),E(J,12*ht+3,Wa),E(J,12*ht+6,ja),E(J,12*ht+9,qa),b(Q,3*ht,o,n),R($,2*ht,i.twoSided,i.castShadow?wt.length:Gt),et[ht]=i.texture,R(tt,2*ht,i.texture?i.texture.getWidth():0,i.textureBias),i.castShadow&&wt.push(i),ht+=1}else if(i instanceof THREE.ImageLight){if(St+=1,!i.visible)continue;i.textureDiffuse instanceof THREE.RenderTargetCube&&(n/=ta.brightness),ta.gammaInput&&(n*=n),Na.copy(l.getPosition());var At=i.textureSpecular,Tt=((i.local?1:0)+1)*(At.fixSeams?1:-1),Pt=(i.textureEncoding+1)*(i.textureGamma?1:-1),Lt=At.image?At.image[0]:null,bt=Lt?Lt.width:0;za.copy(i.size).multiplyScalar(.5),E(K,3*dt,Na),F(Z,4*dt,za,Pt),I(W,4*dt,At.mipmapCount,n,Tt,bt),j[dt]=i.textureDiffuse,q[dt]=i.textureSpecular,Y[dt]=i.textureMip,dt+=1}else if(i instanceof THREE.DayLight){if(vt+=1,ct+=1,!i.visible)continue;if(Ba.copy(i.hemiPosition),Ba.normalize(),Ct.rotateAxis(Ba),0===Ba.data[0]&&0===Ba.data[1]&&0===Ba.data[2])continue;if(E(P,3*st,Ba),b(A,3*st,i.skyColor,i.hemiIntensity),b(T,3*st,i.groundColor,i.hemiIntensity),st+=1,Ba.copy(l.getPosition()),Ba.subSelf(i.target.matrixWorld.getPosition()),Ba.normalize(),Ct.rotateAxis(Ba),0===Ba.data[0]&&0===Ba.data[1]&&0===Ba.data[2])continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),E(c,3*at,Ba),F(u,4*at,Na,s),b(h,3*at,o,i.sunIntensity),f[at]=i.castShadow?yt.length:Gt,i.castShadow&&yt.push(i),at+=1}else if(i instanceof THREE.DayLightCube){if(St+=1,ct+=1,!i.visible)continue;var Et=i.ambientIntensity;ta.gammaInput&&(Et*=Et);var At=i.textureSpecular,Tt=((i.local?1:0)+1)*(At.fixSeams?1:-1),Pt=(i.textureEncoding+1)*(i.textureGamma?1:-1),Lt=At.image?At.image[0]:null,bt=Lt?Lt.width:0;if(za.copy(i.size).multiplyScalar(.5),E(K,3*dt,i.cubePosition),F(Z,4*dt,za,Pt),I(W,4*dt,At.mipmapCount,Et,Tt,bt),j[dt]=i.textureDiffuse,q[dt]=i.textureSpecular,Y[dt]=i.textureMip,dt+=1,Ba.copy(l.getPosition()),Ba.subSelf(i.target.matrixWorld.getPosition()),Ba.normalize(),Ct.rotateAxis(Ba),0===Ba.data[0]&&0===Ba.data[1]&&0===Ba.data[2])continue;Na.copy(l.getPosition()),Ct.multiplyVector3(Na),E(c,3*at,Ba),F(u,4*at,Na,s),b(h,3*at,o,n),f[at]=i.castShadow?yt.length:Gt,i.castShadow&&yt.push(i),at+=1}var Ft=d.shadowCasters;Ft.length=0;var Rt,Ut,It;for(Rt=0,Ut=yt.length;Ut>Rt;Rt++)It=yt[Rt],Ft.push(It);for(Rt=0,Ut=Xt.length;Ut>Rt;Rt++)It=Xt[Rt],Ft.push(It);for(Rt=0,Ut=_t.length;Ut>Rt;Rt++)It=_t[Rt],Ft.push(It);for(Rt=0,Ut=wt.length;Ut>Rt;Rt++)It=wt[Rt],Ft.push(It);for(Rt=0,Ut=Dt.length;Ut>Rt;Rt++)It=Dt[Rt],Ft.push(It);if(xt>0){if(!d.poly.samplerLtcMat){var Nt=new Float32Array(THREE.PolyLight.ltcMatData),Bt=new THREE.DataTexture(Nt,64,64,THREE.RGBAFormat,THREE.FloatType,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.NearestFilter);Bt.flipY=!1,Bt.generateMipmaps=!1,Bt.needsUpdate=!0,d.poly.samplerLtcMat=Bt}if(!d.poly.samplerLtcMag){var Ot=new Float32Array(THREE.PolyLight.ltcMagData),Vt=new THREE.DataTexture(Ot,32,32,THREE.LuminanceAlphaFormat,THREE.FloatType,THREE.ClampToEdgeWrapping,THREE.ClampToEdgeWrapping,THREE.LinearFilter,THREE.NearestFilter);Vt.flipY=!1,Vt.generateMipmaps=!1,Vt.needsUpdate=!0,d.poly.samplerLtcMag=Vt}}for(a=3*at,r=Math.max(h.length,3*ct);r>a;a++)h[a]=0;for(a=3*rt,r=Math.max(p.length,3*ut);r>a;a++)p[a]=0;for(a=3*it,r=Math.max(g.length,3*ft);r>a;a++)g[a]=0;for(a=3*ot,r=Math.max(G.length,3*pt);r>a;a++)G[a]=0;for(a=3*nt,r=Math.max(_.length,3*mt);r>a;a++)_[a]=0;for(a=3*st,r=Math.max(A.length,3*vt);r>a;a++)A[a]=0;for(a=3*st,r=Math.max(T.length,3*vt);r>a;a++)T[a]=0;for(a=3*lt,r=Math.max(L.length,3*gt);r>a;a++)L[a]=0;for(a=3*ht,r=Math.max(Q.length,3*xt);r>a;a++)Q[a]=0;d.directional.length=at,d.point.length=rt,d.sphere.length=it,d.tube.length=ot,d.spot.length=nt,d.hemi.length=st,d.area.length=lt,d.image.length=dt,d.poly.length=ht}function B(e,t){var a;"fragment"===e?a=Rt.FRAGMENT_SHADER:"vertex"===e&&(a=Rt.VERTEX_SHADER);var r=Rt.createShader(a);Rt.shaderSource(r,t),Rt.compileShader(r),Rt.getShaderParameter(r,Rt.COMPILE_STATUS)||console.error(e.toUpperCase()+" SHADER COMPILATION FAILED");var i=Rt.getShaderInfoLog(r);if(""!==i){var o=THREE.DebugUtils.parseGLSLShaderErrorLog(i);THREE.DebugUtils.prettyPrintShaderErrors(t,o)}return r}function O(e){var t,a,r=[];for(var i in e)t=e[i],t!==!1&&(void 0!==t?(a="#define "+i+" "+t,r.push(a)):console.warn("THREE.ForwardRenderer generateDefines(): undefined value for label ["+i+"]"));return r.join("\n")}function V(e){var t,a,r,i={OES_standard_derivatives:"GL_OES_standard_derivatives",WEBGL_draw_buffers:"GL_EXT_draw_buffers",EXT_shader_texture_lod:"GL_EXT_shader_texture_lod",EXT_frag_depth:"GL_EXT_frag_depth"},o={EXT_shader_texture_lod:!0,WEBGL_draw_buffers:!0,OES_standard_derivatives:!0,EXT_frag_depth:!0,OES_element_index_uint:!0,ANGLE_instanced_arrays:!0,OES_vertex_array_object:!0,EXT_blend_minmax:!0,EXT_sRGB:!0},n=[];for(var s in e)a=e[s],lr&&o[s]||a!==!1&&(void 0!==a?(t=i[s],void 0!==t?(r="#extension "+t+" : enable",n.push(r)):console.warn("THREE.ForwardRenderer generateExtensions(): unknown extension ["+s+"]")):console.warn("THREE.ForwardRenderer generateExtensions(): undefined state for extension ["+s+"]"));return n.join("\n")}function k(e,t,a,r,i){var o=t.fragmentShader,n=t.vertexShader,s=t.extensions||{},l=t.defines||{},d=[];e?d.push(e):(d.push(o),d.push(n));var h;for(h in l)d.push(h),d.push(l[h]);for(h in i)d.push(h),d.push(i[h]);for(var c=d.join(),u=0,f=aa.length;f>u;u++){var p=aa[u];if(p.code===c)return p.usedTimes++,p.program}var m="SHADOWMAP_TYPE_BASIC";i.shadowMapType===THREE.PCFSoftShadowMap?m="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===THREE.PCFSoftHQShadowMap&&(m="SHADOWMAP_TYPE_PCF_SOFT_HQ");var v;switch(Ft){case THREE.SimpleOperator:v="TONEMAP_SIMPLE";break;case THREE.LinearOperator:v="TONEMAP_LINEAR";break;case THREE.ReinhardOperator:v="TONEMAP_REINHARD";break;case THREE.FilmicOperator:v="TONEMAP_FILMIC";break;case THREE.Filmic2015Operator:v="TONEMAP_FILMIC_2015";break;case THREE.UnchartedOperator:v="TONEMAP_UNCHARTED";break;case THREE.LumaReinhardOperator:v="TONEMAP_REINHARD_LUMA";break;case THREE.WhitePreservingReinhardOperator:v="TONEMAP_REINHARD_WHITE";break;case THREE.PhotographicOperator:v="TONEMAP_PHOTOGRAPHIC"}var g;switch(ta.specularBRDF){case THREE.SimpleBRDF:g="BRDF_SIMPLE";break;case THREE.BlinnPhongBRDF:g="BRDF_BLINN_PHONG";break;case THREE.GGXBRDF:g="BRDF_GGX"}var S;i.fog instanceof THREE.LinearFog?S="LINEAR_FOG":i.fog instanceof THREE.ExponentialFog?S="EXPONENTIAL_FOG":i.fog instanceof THREE.AtmosphericFog&&(S="ATMOSPHERIC_FOG");var x;switch(t.displacementDirection){case THREE.DisplaceByNormal:x="DISPLACE_BY_NORMAL";break;case THREE.DisplaceByPosition:x="DISPLACE_BY_POSITION"}var G=i.maxImageLights>0||i.polyTextures,M=i.bumpMap||i.normalMap||i.bumpDetailMap||i.normalDetailMap||i.normalGlossMap||i.wrapAroundSkin||i.displacementMap||G;s.OES_standard_derivatives=Qa&&(s.OES_standard_derivatives||!!M),s.EXT_shader_texture_lod=rr&&(s.EXT_shader_texture_lod||!!G);var y=V(s),X=O(l),_=Rt.createProgram(),w=["precision "+Xt+" float;","precision "+Xt+" int;",X,ta.gammaInput?"#define GAMMA_INPUT":"",ta.gammaOutput?"#define GAMMA_OUTPUT":"",ta.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",Ft?"#define TONEMAPPING":"",v?"#define "+v:"",Ct?"#define DITHERING_ENABLED":"",i.transparent?"#define TRANSPARENT":"",i.instances?"#define USE_INSTANCES":"","#define "+g,"#define MAX_DIR_LIGHTS "+i.maxDirLights,"#define MAX_POINT_LIGHTS "+i.maxPointLights,"#define MAX_SPHERE_LIGHTS "+i.maxSphereLights,"#define MAX_TUBE_LIGHTS "+i.maxTubeLights,"#define MAX_SPOT_LIGHTS "+i.maxSpotLights,"#define MAX_HEMI_LIGHTS "+i.maxHemiLights,"#define MAX_AREA_LIGHTS "+i.maxAreaLights,"#define MAX_IMAGE_LIGHTS "+i.maxImageLights,"#define MAX_POLY_LIGHTS "+i.maxPolyLights,i.areaTextures?"#define AREA_TEXTURE":"",i.polyTextures?"#define POLY_TEXTURE":"",$a&&ta.shadowMapUseDepthTextures?"#define DEPTH_TEXTURES":"","#define MAX_SHADOWS "+i.maxShadows,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"",i.map?"#define USE_MAP":"",i.lightMap?"#define USE_LIGHTMAP":"",i.lightMapGamma?"#define LIGHTMAP_GAMMA":"",Qa&&i.bumpMap?"#define USE_BUMPMAP":"",Qa&&i.normalMap?"#define USE_NORMALMAP":"",Qa&&i.normalGlossMap?"#define USE_NORMALGLOSSMAP":"",Qa&&i.bumpDetailMap?"#define USE_BUMPDETAILMAP":"",Qa&&i.normalDetailMap?"#define USE_NORMALDETAILMAP":"",i.glossMap?"#define USE_GLOSSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",Qa&&fr&&i.displacementMap?"#define USE_DISPLACEMENTMAP":"",Qa&&fr&&i.displacementMap?"#define "+x:"",i.vertexColors?"#define USE_COLOR":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+m:"",i.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",i.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",i.shadowSampler?"#define USE_SHADOWSAMPLER":"","#define DIR_INDEX_OFFSET "+i.dirIndexOffset,"#define SPOT_INDEX_OFFSET "+i.spotIndexOffset,"#define AREA_INDEX_OFFSET "+i.areaIndexOffset,"#define POLY_INDEX_OFFSET "+i.polyIndexOffset,"#define SPHERE_INDEX_OFFSET "+i.sphereIndexOffset,i.isParticle?"#define PARTICLE":"",i.sizeAttenuation?"#define USE_PARTICLE_SIZEATTENUATION":"",i.interpolateParticleFrames?"#define INTERPOLATE_PARTICLE_FRAMES":"",i.wrapAround?"#define WRAP_AROUND":"",Qa&&i.wrapAroundSkin?"#define WRAP_AROUND_SKIN":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.osxHack?"#define OSX_HACK":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].join("\n"),D=["#if __VERSION__ >= 300","#define attribute in","#define varying out","#define texture2D texture","#define texture2DLod textureLod","#define texture2DProj textureProj","#define texture2DProjLod textureProjLod","#define textureCube texture","#define textureCubeLod textureLod","#endif",fr?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+i.maxBones,i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.boneTextureWidth?"#define N_BONE_PIXEL_X "+i.boneTextureWidth.toFixed(1):"",i.boneTextureHeight?"#define N_BONE_PIXEL_Y "+i.boneTextureHeight.toFixed(1):"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals?"#define USE_MORPHNORMALS":"","#define MAX_MORPHTARGETS "+i.maxMorphTargets,"#define MAX_MORPHNORMALS "+i.maxMorphNormals,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fog?"#define "+S:"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat3 normalMatrix;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),C=["#if __VERSION__ >= 300","precision highp sampler2DShadow;","#define varying in","#ifdef MRT_OUTPUT","out vec4 mgl_FragData[ "+sr+" ];","#else","out vec4 mgl_FragColor;","#endif","#define texture2D texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define textureCube texture","#define textureCubeLodEXT textureLod","#define shadow2D texture","#else","#define mgl_FragColor gl_FragColor","#define mgl_FragData  gl_FragData","#endif","",rr?"#define SUPPORTS_TEXTURE_LOD":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fog?"#define "+S:"",i.metal?"#define METAL":"",i.parallax?"#define USE_PARALLAX":"",i.parallax&&i.parallaxRefineSteps>0?"#define PARALLAX_REFINE_STEPS "+i.parallaxRefineSteps.toFixed(0):"",""].join("\n"),A=y+"\n"+w+C+o,T=w+D+n;lr&&(A="#version 300 es\n"+A,T="#version 300 es\n"+T);var P=B("fragment",A),L=B("vertex",T);Rt.attachShader(_,L),Rt.attachShader(_,P),Rt.linkProgram(_),Rt.getProgramParameter(_,Rt.LINK_STATUS)||console.error("Could not link shader program\nVALIDATE_STATUS: "+Rt.getProgramParameter(_,Rt.VALIDATE_STATUS)+"\nGL_ERROR: "+THREE.DebugUtils.translateGLErrorCode(Rt.getError()));var b=Rt.getProgramInfoLog(_);if(""!==b)if(Qt){var E=(Qt.getTranslatedShaderSource(L),Qt.getTranslatedShaderSource(P)),F=THREE.DebugUtils.parseTranslatedShaderErrorLog(b);THREE.DebugUtils.prettyPrintTranslatedShaderErrors(E,F)}else console.warn("PROGRAM_INFO_LOG: "+b);Rt.deleteShader(P),Rt.deleteShader(L),_.uniforms={},_.attributes={};var R;R=[];for(h in a)R.push(h);z(_,R),R=[];for(h in r)R.push(h);return H(_,R),_.id=ra++,aa.push({program:_,code:c,usedTimes:1}),ta.info.memory.programs=aa.length,_}function z(e,t){var a,r,i;for(a=0,r=t.length;r>a;a++)i=t[a],e.uniforms[i]=Rt.getUniformLocation(e,i)}function H(e,t){var a,r,i;for(a=0,r=t.length;r>a;a++)i=t[a],e.attributes[i]=Rt.getAttribLocation(e,i)}function W(e){return 0===(e&e-1)}function j(e,t,a){a?(Rt.texParameteri(e,Rt.TEXTURE_WRAP_S,t.wrapS),Rt.texParameteri(e,Rt.TEXTURE_WRAP_T,t.wrapT),Rt.texParameteri(e,Rt.TEXTURE_MAG_FILTER,t.magFilter),Rt.texParameteri(e,Rt.TEXTURE_MIN_FILTER,t.minFilter)):(Rt.texParameteri(e,Rt.TEXTURE_WRAP_S,Rt.CLAMP_TO_EDGE),Rt.texParameteri(e,Rt.TEXTURE_WRAP_T,Rt.CLAMP_TO_EDGE),Rt.texParameteri(e,Rt.TEXTURE_MAG_FILTER,ht(t.magFilter)),Rt.texParameteri(e,Rt.TEXTURE_MIN_FILTER,ht(t.minFilter))),Vt&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(Rt.texParameterf(e,Vt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,ur)),t.__oldAnisotropy=t.anisotropy)}function q(e,t){Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_2D,e.__webglTexture),Fa[t]=e.id,Rt.pixelStorei(Rt.UNPACK_FLIP_Y_WEBGL,e.flipY),Rt.pixelStorei(Rt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Rt.pixelStorei(Rt.UNPACK_ALIGNMENT,e.unpackAlignment);var a=e.image,r=W(a.width)&&W(a.height),i=e.format,o=e.type;j(Rt.TEXTURE_2D,e,r);var n,s=e.mipmaps;if(e instanceof THREE.DataTexture){var l=i,d=i;if(lr&&(i===THREE.LuminanceAlphaFormat&&(o===THREE.FloatType?(l=THREE.RG32F,d=THREE.RG):o===THREE.HalfFloatType2&&(l=THREE.RG16F,d=THREE.RG)),i===THREE.RGBAFormat&&(o===THREE.FloatType?(l=THREE.RGBA32F,d=THREE.RGBAFormat):o===THREE.HalfFloatType2&&(l=THREE.RGBA16F,d=THREE.RGBAFormat))),s.length>0&&r){for(var h=0,c=s.length;c>h;h++)n=s[h],Rt.texImage2D(Rt.TEXTURE_2D,h,l,n.width,n.height,0,d,o,n.data);e.generateMipmaps=!1}else Rt.texImage2D(Rt.TEXTURE_2D,0,l,a.width,a.height,0,d,o,a.data)}else if(e instanceof THREE.CompressedTexture)for(var h=0,c=s.length;c>h;h++)if(n=s[h],Rt.pixelStorei(Rt.UNPACK_ALIGNMENT,n.unpackAlignment),i===THREE.RGBAFormat||i===THREE.RGBFormat||i===THREE.LuminanceAlphaFormat||i===THREE.LuminanceFormat){var u=tt(i,o);Rt.texImage2D(Rt.TEXTURE_2D,h,u,n.width,n.height,0,i,o,n.data)}else Rt.compressedTexImage2D(Rt.TEXTURE_2D,h,i,n.width,n.height,0,n.data);else if(s.length>0&&r){for(var h=0,c=s.length;c>h;h++)n=s[h],Rt.texImage2D(Rt.TEXTURE_2D,h,i,i,o,n);e.generateMipmaps=!1}else Rt.texImage2D(Rt.TEXTURE_2D,0,i,i,o,e.image);e.generateMipmaps&&r&&Rt.generateMipmap(Rt.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}function Y(e,t){if(e.width<=t&&e.height<=t)return e;
var a=Math.max(e.width,e.height),r=Math.floor(e.width*t/a),i=Math.floor(e.height*t/a),o=document.createElement("canvas");o.width=r,o.height=i;var n=o.getContext("2d");return n.drawImage(e,0,0,e.width,e.height,0,0,r,i),o}function K(e,t){Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Fa[t]=e.id,Rt.pixelStorei(Rt.UNPACK_FLIP_Y_WEBGL,e.flipY),Rt.pixelStorei(Rt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Rt.pixelStorei(Rt.UNPACK_ALIGNMENT,e.unpackAlignment);for(var a=e instanceof THREE.CompressedTexture,r=[],i=0;6>i;i++)r[i]=ta.autoScaleCubemaps&&!a?Y(e.image[i],cr):e.image[i];var o=r[0],n=W(o.width)&&W(o.height),s=e.format,l=e.type;j(Rt.TEXTURE_CUBE_MAP,e,n);for(var i=0;6>i;i++){var d=r[i].mipmaps;if(d&&d.length>0)for(var h=0,c=d.length;c>h;h++){var u=d[h];if(Rt.pixelStorei(Rt.UNPACK_ALIGNMENT,u.unpackAlignment),s===THREE.RGBAFormat||s===THREE.RGBFormat||s===THREE.LuminanceAlphaFormat||s===THREE.LuminanceFormat){var f=tt(s,l);Rt.texImage2D(Rt.TEXTURE_CUBE_MAP_POSITIVE_X+i,h,f,u.width,u.height,0,s,l,u.data)}else Rt.compressedTexImage2D(Rt.TEXTURE_CUBE_MAP_POSITIVE_X+i,h,s,u.width,u.height,0,u.data)}else Rt.texImage2D(Rt.TEXTURE_CUBE_MAP_POSITIVE_X+i,0,s,s,l,r[i])}e.generateMipmaps&&n&&(Rt.generateMipmap(Rt.TEXTURE_CUBE_MAP),e.mipmapCount=Math.log(Math.max(o.width,o.height))/Math.LN2),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}function Z(e,t){if(!e.__webglInit){e.__webglInit=!0,e.image.__webglTextureCube=Rt.createTexture(),ta.info.memory.textures++,Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Fa[t]=e.id;for(var a=0;6>a;a++)Rt.texImage2D(Rt.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,Rt.RGBA,1,1,0,Rt.RGBA,Rt.UNSIGNED_BYTE,Za)}e.needsUpdate&&K(e,t),Fa[t]!==e.id&&e.image.__webglTextureCube&&(Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Fa[t]=e.id)}function Q(e,t){e.__webglInit||(lt(e),e.__webglInit=!0),Fa[t]!==e.id&&e.__webglTexture&&(Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,e.__webglTexture),Fa[t]=e.id)}function J(e,t,a,r,i){Rt.bindFramebuffer(Rt.FRAMEBUFFER,e),i&&Rt.framebufferTexture2D(Rt.FRAMEBUFFER,Rt.COLOR_ATTACHMENT0,a,t.__webglTexture,0),r&&Rt.framebufferTexture2D(Rt.FRAMEBUFFER,Rt.DEPTH_ATTACHMENT,a,t.depthTexture.__webglTexture,0)}function $(e,t){if(Rt.bindRenderbuffer(Rt.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer)Rt.renderbufferStorage(Rt.RENDERBUFFER,Rt.DEPTH_COMPONENT16,t.width,t.height),Rt.framebufferRenderbuffer(Rt.FRAMEBUFFER,Rt.DEPTH_ATTACHMENT,Rt.RENDERBUFFER,e);else if(!t.depthBuffer&&t.stencilBuffer)Rt.renderbufferStorage(Rt.RENDERBUFFER,Rt.STENCIL_INDEX8,t.width,t.height),Rt.framebufferRenderbuffer(Rt.FRAMEBUFFER,Rt.STENCIL_ATTACHMENT,Rt.RENDERBUFFER,e);else if(t.depthBuffer&&t.stencilBuffer){var a=lr?Rt.DEPTH24_STENCIL8:Rt.DEPTH_STENCIL;Rt.renderbufferStorage(Rt.RENDERBUFFER,a,t.width,t.height),Rt.framebufferRenderbuffer(Rt.FRAMEBUFFER,Rt.DEPTH_STENCIL_ATTACHMENT,Rt.RENDERBUFFER,e)}}function et(e){if(!Ja)return void console.error("THREE.ForwardRenderer: can't create RenderTargetArray");var t=e.colorTexture.length;e.__webglFramebuffer=Rt.createFramebuffer(),e.__attachments=[],Rt.bindFramebuffer(Rt.FRAMEBUFFER,e.__webglFramebuffer);for(var a=0;t>a;a++)e.__attachments.push(Rt.COLOR_ATTACHMENT0+a);lr?Rt.drawBuffers(e.__attachments):Zt.drawBuffersEXT?Zt.drawBuffersEXT(e.__attachments):Zt.drawBuffersWEBGL(e.__attachments),e.__webglTexture=[];for(var a=0;t>a;a++){var r=e.colorTexture[a];r.__webglTexture=Rt.createTexture(),ta.info.memory.textures++}e.depthTexture?(e.depthTexture.__webglTexture=Rt.createTexture(),ta.info.memory.textures++):e.__webglRenderbuffer=Rt.createRenderbuffer()}function tt(e,t){var a=e;if(lr){if(t===THREE.HalfFloatType2)switch(e){case THREE.RGBAFormat:a=THREE.RGBA16F;break;case THREE.LuminanceAlphaFormat:a=THREE.RG16F;break;case THREE.LuminanceFormat:a=THREE.R16F}if(t===THREE.FloatType)switch(e){case THREE.RGBAFormat:a=THREE.RGBA32F;break;case THREE.LuminanceAlphaFormat:a=THREE.RG32F;break;case THREE.LuminanceFormat:a=THREE.R32F}}return a}function at(e){var t;if(lr)switch(e){case THREE.UnsignedShortType:t=Rt.DEPTH_COMPONENT16;break;case THREE.UnsignedIntType:t=Rt.DEPTH_COMPONENT24;break;case THREE.FloatType:t=Rt.DEPTH_COMPONENT32F}else t=Rt.DEPTH_COMPONENT;return t}function rt(e){var t=W(e.width)&&W(e.height),a=e.colorTexture.length;Rt.bindFramebuffer(Rt.FRAMEBUFFER,e.__webglFramebuffer);for(var r=0;a>r;r++){var i=e.__attachments[r],o=e.colorTexture[r];o.mrtColorAttachment=i;var n=o.internalFormat,s=o.format,l=o.type;Rt.bindTexture(Rt.TEXTURE_2D,o.__webglTexture),j(Rt.TEXTURE_2D,o,t),Rt.texImage2D(Rt.TEXTURE_2D,0,n,e.width,e.height,0,s,l,null),Rt.framebufferTexture2D(Rt.FRAMEBUFFER,i,Rt.TEXTURE_2D,o.__webglTexture,0)}if(e.depthTexture){var d=e.depthTexture.depthTextureType,h=at(d);Rt.bindTexture(Rt.TEXTURE_2D,e.depthTexture.__webglTexture),j(Rt.TEXTURE_2D,e.depthTexture,t),Rt.texImage2D(Rt.TEXTURE_2D,0,h,e.width,e.height,0,Rt.DEPTH_COMPONENT,d,null),Rt.framebufferTexture2D(Rt.FRAMEBUFFER,Rt.DEPTH_ATTACHMENT,Rt.TEXTURE_2D,e.depthTexture.__webglTexture,0),e.depthTexture.needsUpdate=!1}else $(e.__webglRenderbuffer,e)}function it(e){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],e.__webglTexture=Rt.createTexture();for(var t=0;6>t;t++)e.__webglFramebuffer[t]=Rt.createFramebuffer(),e.__webglRenderbuffer[t]=Rt.createRenderbuffer();ta.info.memory.textures++}function ot(e){var t=W(e.width)&&W(e.height),a=e.internalFormat,r=e.format,i=e.type;Rt.activeTexture(Rt.TEXTURE0),Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,e.__webglTexture),j(Rt.TEXTURE_CUBE_MAP,e,t);for(var o=0;6>o;o++)Rt.texImage2D(Rt.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,a,e.width,e.height,0,r,i,null),J(e.__webglFramebuffer[o],e,Rt.TEXTURE_CUBE_MAP_POSITIVE_X+o,!1,!0),$(e.__webglRenderbuffer[o],e);t&&(e.generateMipmaps||e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter)&&Rt.generateMipmap(Rt.TEXTURE_CUBE_MAP),t&&(e.mipmapCount=Math.log(Math.max(e.width,e.height))/Math.LN2)}function nt(e){var t=e.useColorTexture,a=e.useDepthTexture&&$a;e.__webglFramebuffer=Rt.createFramebuffer(),t&&!e.mrtColorAttachment&&(e.__webglTexture=Rt.createTexture(),ta.info.memory.textures++),e.shareDepthFrom||(a?(e.depthTexture={__webglTexture:Rt.createTexture(),id:THREE.TextureIdCount++},ta.info.memory.textures++):e.__webglRenderbuffer=Rt.createRenderbuffer())}function st(e){var t=e.useColorTexture,a=e.useDepthTexture&&$a,r=W(e.width)&&W(e.height),i=e.internalFormat,o=e.format,n=e.type;if(t&&!e.mrtColorAttachment&&(Rt.activeTexture(Rt.TEXTURE0),Rt.bindTexture(Rt.TEXTURE_2D,e.__webglTexture),j(Rt.TEXTURE_2D,e,r),Rt.texImage2D(Rt.TEXTURE_2D,0,i,e.width,e.height,0,o,n,null),r&&e.generateMipmaps&&Rt.generateMipmap(Rt.TEXTURE_2D)),a)if(e.shareDepthFrom)e.depthTexture=e.shareDepthFrom.depthTexture;else{var s=e.depthTextureType,l=at(s);Rt.bindTexture(Rt.TEXTURE_2D,e.depthTexture.__webglTexture),j(Rt.TEXTURE_2D,e,r),lr&&(Rt.texParameteri(Rt.TEXTURE_2D,Rt.TEXTURE_COMPARE_MODE,Rt.COMPARE_REF_TO_TEXTURE),Rt.texParameteri(Rt.TEXTURE_2D,Rt.TEXTURE_COMPARE_FUNC,Rt.LEQUAL)),Rt.texImage2D(Rt.TEXTURE_2D,0,l,e.width,e.height,0,Rt.DEPTH_COMPONENT,s,null)}J(e.__webglFramebuffer,e,Rt.TEXTURE_2D,a,t),a||(e.shareDepthFrom&&e.shareDepthFrom.depthTexture?(e.depthTexture=e.shareDepthFrom.depthTexture,Rt.framebufferTexture2D(Rt.FRAMEBUFFER,Rt.DEPTH_ATTACHMENT,Rt.TEXTURE_2D,e.depthTexture.__webglTexture,0)):e.shareDepthFrom?(e.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer,e.depthBuffer&&!e.stencilBuffer?Rt.framebufferRenderbuffer(Rt.FRAMEBUFFER,Rt.DEPTH_ATTACHMENT,Rt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Rt.framebufferRenderbuffer(Rt.FRAMEBUFFER,Rt.DEPTH_STENCIL_ATTACHMENT,Rt.RENDERBUFFER,e.__webglRenderbuffer)):$(e.__webglRenderbuffer,e))}function lt(e){if(e.needsUpdate){var t=e instanceof THREE.RenderTargetCube,a=e instanceof THREE.RenderTargetArray;void 0===e.__webglFramebuffer&&(void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),a?et(e):t?it(e):nt(e)),a?rt(e):t?ot(e):st(e),t?Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,null):Rt.bindTexture(Rt.TEXTURE_2D,null),Fa[0]=-1,Rt.bindRenderbuffer(Rt.RENDERBUFFER,null),Rt.bindFramebuffer(Rt.FRAMEBUFFER,null),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}}function dt(e){if(Rt.activeTexture(Rt.TEXTURE0),e instanceof THREE.RenderTargetCube)Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,e.__webglTexture),Rt.generateMipmap(Rt.TEXTURE_CUBE_MAP),Rt.bindTexture(Rt.TEXTURE_CUBE_MAP,null);else if(e instanceof THREE.RenderTargetArray){for(var t=0,a=e.colorTexture.length;a>t;t++)Rt.bindTexture(Rt.TEXTURE_2D,e.colorTexture[t].__webglTexture),Rt.generateMipmap(Rt.TEXTURE_2D);Rt.bindTexture(Rt.TEXTURE_2D,null)}else Rt.bindTexture(Rt.TEXTURE_2D,e.__webglTexture),Rt.generateMipmap(Rt.TEXTURE_2D),Rt.bindTexture(Rt.TEXTURE_2D,null);Fa[0]=-1}function ht(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Rt.NEAREST:Rt.LINEAR}function ct(e){if(pr&&e&&e.useVertexTexture)return 1024;var t=Rt.getParameter(Rt.MAX_VERTEX_UNIFORM_VECTORS),a=Math.floor((t-20)/4),r=a;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(r=Math.min(e.bones.length,r),r<e.bones.length&&console.warn("THREE.ForwardRenderer: too many bones - "+e.bones.length+", this GPU supports just "+r+" (try OpenGL instead of ANGLE)")),r}function ut(e){var t,a,r,i,o,n,s,l,d,h,c,u,f,p,m,v,g;a=r=i=o=n=s=l=d=h=c=u=0,f=p=m=v=g=0;for(var S=0,x=e.length;x>S;S++)t=e[S],t.onlyShadow||(t instanceof THREE.DirectionalLight&&(a++,t.castShadow&&f++),t instanceof THREE.SpotLight&&(n++,t.castShadow&&p++),t instanceof THREE.AreaLight&&(l++,t.texture&&d++,t.castShadow&&m++),t instanceof THREE.PolyLight&&(c++,t.texture&&u++,t.castShadow&&v++),t instanceof THREE.DayLight&&(a++,s++,t.castShadow&&f++),t instanceof THREE.DayLightCube&&(a++,h++,t.castShadow&&f++),t instanceof THREE.SphereLight&&(i++,t.castShadow&&g++),t instanceof THREE.PointLight&&r++,t instanceof THREE.TubeLight&&o++,t instanceof THREE.HemisphereLight&&s++,t instanceof THREE.ImageLight&&h++);var G=0,M=G+f,y=M+p,X=y+m,_=X+v,w={directional:a,point:r,sphere:i,tube:o,spot:n,hemi:s,area:l,areaTextures:d,image:h,poly:c,polyTextures:u,dirIndexOffset:G,spotIndexOffset:M,areaIndexOffset:y,polyIndexOffset:X,sphereIndexOffset:_};return w}function ft(e){var t,a,r,i=0;for(t=0,a=e.length;a>t;t++)r=e[t],r.castShadow&&(r instanceof THREE.SphereLight&&i++,r instanceof THREE.SpotLight&&i++,r instanceof THREE.AreaLight&&i++,r instanceof THREE.PolyLight&&i++,(r instanceof THREE.DirectionalLight||r instanceof THREE.DayLight||r instanceof THREE.DayLightCube)&&!r.shadowCascade&&i++);return i}function pt(e,t,a){var r=Rt.createFramebuffer(),i=Rt.createTexture();Rt.activeTexture(Rt.TEXTURE0),Rt.bindTexture(Rt.TEXTURE_2D,i),Rt.texImage2D(Rt.TEXTURE_2D,0,e,2,2,0,t,a,null),Rt.bindFramebuffer(Rt.FRAMEBUFFER,r),Rt.framebufferTexture2D(Rt.FRAMEBUFFER,Rt.COLOR_ATTACHMENT0,Rt.TEXTURE_2D,i,0);var o=Rt.checkFramebufferStatus(Rt.FRAMEBUFFER);return Rt.bindFramebuffer(Rt.FRAMEBUFFER,null),Rt.bindTexture(Rt.TEXTURE_2D,null),Fa[0]=-1,o===Rt.FRAMEBUFFER_COMPLETE}function mt(){var e=THREE.UnsignedIntType,t=at(e),a=Rt.createFramebuffer(),r=Rt.createTexture();Rt.activeTexture(Rt.TEXTURE0),Rt.bindTexture(Rt.TEXTURE_2D,r),Rt.texImage2D(Rt.TEXTURE_2D,0,t,2,2,0,Rt.DEPTH_COMPONENT,e,null),Rt.bindFramebuffer(Rt.FRAMEBUFFER,a),Rt.framebufferTexture2D(Rt.FRAMEBUFFER,Rt.DEPTH_ATTACHMENT,Rt.TEXTURE_2D,r,0);var i=Rt.checkFramebufferStatus(Rt.FRAMEBUFFER);return Rt.bindFramebuffer(Rt.FRAMEBUFFER,null),Rt.bindTexture(Rt.TEXTURE_2D,null),Fa[0]=-1,i===Rt.FRAMEBUFFER_COMPLETE}function vt(){Nt=Rt.getExtension("OES_texture_float_linear"),Vt=Rt.getExtension("EXT_texture_filter_anisotropic")||Rt.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Wt=Rt.getExtension("WEBGL_compressed_texture_s3tc")||Rt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),jt=Rt.getExtension("WEBGL_compressed_texture_pvrtc")||Rt.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc"),qt=Rt.getExtension("WEBGL_compressed_texture_atc")||Rt.getExtension("WEBKIT_WEBGL_compressed_texture_atc"),Yt=Rt.getExtension("WEBGL_compressed_texture_etc1")||Rt.getExtension("WEBKIT_WEBGL_compressed_texture_etc1"),Qt=Rt.getExtension("WEBGL_debug_shaders"),null===Nt&&console.log("THREE: linear filtering for float textures not supported."),null===Vt&&console.log("THREE: anisotropic texture filtering not supported."),null===Wt&&console.log("THREE: S3TC compressed textures not supported.")}function gt(){try{var e={alpha:_t,premultipliedAlpha:wt,antialias:Dt,stencil:At,depth:Tt,preserveDrawingBuffer:Pt};if(Rt=Mt.getContext("webgl2",e)||Mt.getContext("experimental-webgl2",e),null===Rt)throw"Error creating WebGL 2 context."}catch(t){console.error(t)}console.log("THREE: using WebGL 2 backend"),vt(),Jt=Rt.getExtension("WEBGL_color_buffer_float")||Rt.getExtension("EXT_color_buffer_float"),$t=Rt.getExtension("EXT_color_buffer_half_float"),null===Jt&&console.log("THREE: rendering into float textures not supported."),null===$t&&console.log("THREE: rendering into half float textures not supported.")}function St(){try{var e={alpha:_t,premultipliedAlpha:wt,antialias:Dt,stencil:At,depth:Tt,preserveDrawingBuffer:Pt};if(Rt=Mt.getContext("webgl",e)||Mt.getContext("experimental-webgl",e),null===Rt)throw"Error creating WebGL context."}catch(t){console.error(t)}console.log("THREE: using WebGL 1 backend"),vt(),Ut=Rt.getExtension("OES_texture_float"),It=Rt.getExtension("OES_texture_half_float"),Bt=Rt.getExtension("OES_texture_half_float_linear"),Ot=Rt.getExtension("OES_standard_derivatives"),Kt=Rt.getExtension("OES_element_index_uint"),zt=Rt.getExtension("WEBGL_depth_texture")||Rt.getExtension("WEBKIT_WEBGL_depth_texture"),Zt=Rt.getExtension("WEBGL_draw_buffers")||Rt.getExtension("WEBKIT_EXT_draw_buffers"),Ht=Rt.getExtension("EXT_frag_depth"),kt=Rt.getExtension("EXT_shader_texture_lod"),ea=Rt.getExtension("ANGLE_instanced_arrays"),null===Ut&&console.log("THREE: float textures not supported."),null===It&&console.log("THREE: half float textures not supported."),null===Bt&&console.log("THREE: linear filtering for half float textures not supported."),null===Ot&&console.log("THREE: standard derivatives not supported."),null===Kt&&console.log("THREE: 32-bit unsigned integer indices not supported."),null===zt&&console.log("THREE: depth texture not supported."),null===Zt&&console.log("THREE: multiple render targets not supported."),null===Ht&&console.log("THREE: fragment depth setting not supported."),null===kt&&console.log("THREE: fragment shader texture LOD not supported."),null===ea&&console.log("THREE: instancing not supported.")}function xt(){Rt.clearColor(0,0,0,1),Rt.clearDepth(1),Rt.clearStencil(0),Rt.enable(Rt.DEPTH_TEST),Rt.depthFunc(Rt.LEQUAL),Rt.frontFace(Rt.CCW),Rt.cullFace(Rt.BACK),Rt.enable(Rt.CULL_FACE),Rt.enable(Rt.BLEND),Rt.blendEquation(Rt.FUNC_ADD),Rt.blendFunc(Rt.SRC_ALPHA,Rt.ONE_MINUS_SRC_ALPHA),Rt.disable(Rt.STENCIL_TEST),Rt.clearColor(Lt.r,Lt.g,Lt.b,bt)}function Gt(){ta.shadowMapPlugin=new THREE.ShadowMapPlugin,ta.addPrePlugin(ta.shadowMapPlugin)}e=e||{};var Mt=void 0!==e.canvas?e.canvas:document.createElement("canvas"),yt=void 0!==e.backend?e.backend:"webgl1",Xt=void 0!==e.precision?e.precision:"highp",_t=void 0!==e.alpha?e.alpha:!1,wt=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,Dt=void 0!==e.antialias?e.antialias:!1,Ct=void 0!==e.dither?e.dither:!1,At=void 0!==e.stencil?e.stencil:!0,Tt=void 0!==e.depth?e.depth:!0,Pt=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,Lt=new THREE.Color(void 0!==e.clearColor?e.clearColor:0),bt=void 0!==e.clearAlpha?e.clearAlpha:0,Et=void 0!==e.scale?e.scale:1,Ft=void 0!==e.tonemapping?e.tonemapping:THREE.SimpleOperator;this.brightness=void 0!==e.brightness?e.brightness:1,this.whitePoint=void 0!==e.whitePoint?e.whitePoint:1,this.domElement=Mt,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.autoUpdateScene=!0,this.autoUpdateView=!0,this.gammaInput=!0,this.gammaOutput=!1,this.physicallyBasedShading=!0,this.specularBRDF=THREE.GGXBRDF,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFSoftShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.shadowMapUseDepthTextures=!1,this.shadowMapDepthTextureType=THREE.UnsignedIntType,this.shadowMapSlopeDepthBias=!1,this.shadowMapSlopeScale=2,this.shadowMapSlopeBias=0,this.shadowMapSlopeMax=.001,this.maxMorphTargets=4,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Rt,Ut,It,Nt,Bt,Ot,Vt,kt,zt,Ht,Wt,jt,qt,Yt,Kt,Zt,Qt,Jt,$t,ea,ta=this,aa=[],ra=0,ia=null,oa=null,na=-1,sa=null,la=null,da=0,ha=0,ca=-1,ua=-1,fa=-1,pa=-1,ma=-1,va=-1,ga=-1,Sa=-1,xa=-1,Ga=-1,Ma=null,ya=null,Xa=null,_a=0,wa=0,Da=0,Ca=0,Aa=0,Ta=0,Pa={},La=[],ba={},Ea=[],Fa=[],Ra=new THREE.Frustum,Ua=new THREE.Matrix4,Ia=new THREE.Vector3,Na=new THREE.Vector3,Ba=new THREE.Vector3,Oa=new THREE.Vector3,Va=new THREE.Vector3,ka=new THREE.Vector3,za=new THREE.Vector3,Ha=new THREE.Vector3,Wa=new THREE.Vector3,ja=new THREE.Vector3,qa=new THREE.Vector3,Ya=!0,Ka={directional:{length:0,colors:[],positionsNorm:[],positionsFull:[],pars:[]},point:{length:0,colors:[],positions:[],distances:[]},sphere:{length:0,colors:[],positions:[],pars:[]},tube:{length:0,colors:[],positions0:[],positions1:[],pars:[]},spot:{length:0,colors:[],positions:[],directions:[],pars:[]},area:{length:0,colors:[],positions:[],normals:[],rights:[],ups:[],attenuations:[],pars:[],textures:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]},image:{length:0,positions:[],sizes:[],texturesDiffuse:[],texturesSpecular:[],texturesMip:[],pars:[]},poly:{length:0,colors:[],points:[],pars:[],samplerLtcMat:null,samplerLtcMag:null,textures:[],texturesPars:[]},shadowCasters:[]},Za=new Uint8Array([0,0,0,255]);if("webgl2"===yt){gt();var Qa=!0,Ja=!0,$a=!0,er=!0,tr=!0,ar=!0,rr=!0,ir=!0,or=!0,nr=!0,sr=Rt.getParameter(Rt.MAX_DRAW_BUFFERS)}else{St();var Qa=!!Ot,Ja=!!Zt,$a=!!zt,er=!!Ut,tr=!!It,ar=!!Bt,rr=!!kt,ir=!!Ht,or=!!Kt,nr=!!ea,sr=Ja?Rt.getParameter(Zt.MAX_DRAW_BUFFERS_WEBGL):0}var lr="webgl2"===yt;xt(),this.context=Rt;{var dr=Rt.getParameter(Rt.MAX_TEXTURE_IMAGE_UNITS),hr=Rt.getParameter(Rt.MAX_VERTEX_TEXTURE_IMAGE_UNITS),cr=(Rt.getParameter(Rt.MAX_TEXTURE_SIZE),Rt.getParameter(Rt.MAX_CUBE_MAP_TEXTURE_SIZE)),ur=Vt?Rt.getParameter(Vt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,fr=hr>0,pr=fr&&Ut,mr=!!Nt;Wt||jt||qt||Yt?Rt.getParameter(Rt.COMPRESSED_TEXTURE_FORMATS):[]}THREE.elementIndexUintAvailable=or;{var vr=Rt.getShaderPrecisionFormat(Rt.VERTEX_SHADER,Rt.HIGH_FLOAT),gr=Rt.getShaderPrecisionFormat(Rt.VERTEX_SHADER,Rt.MEDIUM_FLOAT),Sr=(Rt.getShaderPrecisionFormat(Rt.VERTEX_SHADER,Rt.LOW_FLOAT),Rt.getShaderPrecisionFormat(Rt.FRAGMENT_SHADER,Rt.HIGH_FLOAT)),xr=Rt.getShaderPrecisionFormat(Rt.FRAGMENT_SHADER,Rt.MEDIUM_FLOAT);Rt.getShaderPrecisionFormat(Rt.FRAGMENT_SHADER,Rt.LOW_FLOAT),Rt.getShaderPrecisionFormat(Rt.VERTEX_SHADER,Rt.HIGH_INT),Rt.getShaderPrecisionFormat(Rt.VERTEX_SHADER,Rt.MEDIUM_INT),Rt.getShaderPrecisionFormat(Rt.VERTEX_SHADER,Rt.LOW_INT),Rt.getShaderPrecisionFormat(Rt.FRAGMENT_SHADER,Rt.HIGH_INT),Rt.getShaderPrecisionFormat(Rt.FRAGMENT_SHADER,Rt.MEDIUM_INT),Rt.getShaderPrecisionFormat(Rt.FRAGMENT_SHADER,Rt.LOW_INT)}console.log("THREE: render target support autodetection START (please ignore following warnings)");var Gr=pt(Rt.RGB,Rt.RGB,Rt.UNSIGNED_BYTE),Mr=er&&(lr?pt(Rt.RGB32F,Rt.RGB,Rt.FLOAT):pt(Rt.RGB,Rt.RGB,Rt.FLOAT)),yr=er&&(lr?pt(Rt.RGBA32F,Rt.RGBA,Rt.FLOAT):pt(Rt.RGBA,Rt.RGBA,Rt.FLOAT)),Xr=er&&(lr?pt(Rt.R32F,Rt.RED,Rt.FLOAT):pt(Rt.LUMINANCE,Rt.LUMINANCE,Rt.FLOAT)),_r=er&&(lr?pt(Rt.R32F,Rt.RED,Rt.FLOAT):pt(Rt.ALPHA,Rt.ALPHA,Rt.FLOAT)),wr=er&&(lr?pt(Rt.RG32F,Rt.RG,Rt.FLOAT):pt(Rt.LUMINANCE_ALPHA,Rt.LUMINANCE_ALPHA,Rt.FLOAT)),Dr=tr&&(lr?pt(Rt.RGB16F,Rt.RGB,Rt.HALF_FLOAT):pt(Rt.RGB,Rt.RGB,It.HALF_FLOAT_OES)),Cr=tr&&(lr?pt(Rt.RGBA16F,Rt.RGBA,Rt.HALF_FLOAT):pt(Rt.RGBA,Rt.RGBA,It.HALF_FLOAT_OES)),Ar=tr&&(lr?pt(Rt.R16F,Rt.RED,Rt.HALF_FLOAT):pt(Rt.LUMINANCE,Rt.LUMINANCE,It.HALF_FLOAT_OES)),Tr=tr&&(lr?pt(Rt.R16F,Rt.RED,Rt.HALF_FLOAT):pt(Rt.ALPHA,Rt.ALPHA,It.HALF_FLOAT_OES)),Pr=tr&&(lr?pt(Rt.RG16F,Rt.RG,Rt.HALF_FLOAT):pt(Rt.LUMINANCE_ALPHA,Rt.LUMINANCE_ALPHA,It.HALF_FLOAT_OES)),Lr=$a&&mt();console.log("THREE: render target support autodetection END");var br=vr.precision>0&&Sr.precision>0,Er=gr.precision>0&&xr.precision>0;"highp"!==Xt||br||(Er?(Xt="mediump",console.warn("THREE.ForwardRenderer: highp not supported, using mediump")):(Xt="lowp",console.warn("THREE.ForwardRenderer: highp and mediump not supported, using lowp"))),"mediump"!==Xt||Er||(Xt="lowp",console.warn("THREE.ForwardRenderer: mediump not supported, using lowp"));var Fr=!1,Rr=THREE.RendererUtils.getUvScale;this.getContext=function(){return Rt},this.getRenderingBackend=function(){return yt},this.supportsStandardDerivatives=function(){return Qa},this.supportsElementIndexUint=function(){return or},this.supportsFloatTextures=function(){return er},this.supportsHalfFloatTextures=function(){return tr},this.supportsFloatTexturesLinear=function(){return mr},this.supportsHalfFloatTexturesLinear=function(){return ar},this.supportsVertexTextures=function(){return fr},this.supportsRGBUnsignedByteRenderTarget=function(){return Gr},this.supportsLuminanceFloatRenderTarget=function(){return Xr},this.supportsAlphaFloatRenderTarget=function(){return _r},this.supportsLuminanceAlphaFloatRenderTarget=function(){return wr},this.supportsRGBFloatRenderTarget=function(){return Mr},this.supportsRGBAFloatRenderTarget=function(){return yr},this.supportsLuminanceHalfFloatRenderTarget=function(){return Ar},this.supportsAlphaHalfFloatRenderTarget=function(){return Tr},this.supportsLuminanceAlphaHalfFloatRenderTarget=function(){return Pr},this.supportsRGBHalfFloatRenderTarget=function(){return Dr},this.supportsRGBAHalfFloatRenderTarget=function(){return Cr},this.supportsDepthOnlyRenderTarget=function(){return Lr},this.supportsDepthTextures=function(){return $a},this.supportsDrawBuffers=function(){return Ja},this.supportsFragDepth=function(){return ir},this.supportsShaderTextureLod=function(){return rr},this.supportsInstancing=function(){return nr},this.getMaxDrawBuffers=function(){return sr},this.getMaxAnisotropy=function(){return ur},this.getPrecision=function(){return Xt},this.setSize=function(e,t){Mt.width=e*this.devicePixelRatio,Mt.height=t*this.devicePixelRatio,Mt.style.width=e+"px",Mt.style.height=t+"px",this.setViewport(0,0,Mt.width,Mt.height)},this.setScale=function(e){Et=e},this.setViewport=function(e,t,a,r){_a=void 0!==e?e:0,wa=void 0!==t?t:0,Da=void 0!==a?a:Mt.width,Ca=void 0!==r?r:Mt.height,Rt.viewport(_a,wa,Da,Ca)},this.setScissor=function(e,t,a,r){Rt.scissor(e,t,a,r)},this.enableScissorTest=function(e){e?Rt.enable(Rt.SCISSOR_TEST):Rt.disable(Rt.SCISSOR_TEST)},this.setClearColorHex=function(e,t){Lt.setHex(e),bt=t,Ft&&Lt.copyTonemapped(Lt,Ft,ta.brightness,ta.whitePoint),Rt.clearColor(Lt.r,Lt.g,Lt.b,bt)},this.setClearColor=function(e,t){Ft?Lt.copyTonemapped(e,Ft,ta.brightness,ta.whitePoint):Lt.copy(e),bt=t,Rt.clearColor(Lt.r,Lt.g,Lt.b,bt)},this.getClearColor=function(){return Lt},this.getClearAlpha=function(){return bt},this.clear=function(e,t,a){var r=0;(void 0===e||e)&&(r|=Rt.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=Rt.DEPTH_BUFFER_BIT),(void 0===a||a)&&(r|=Rt.STENCIL_BUFFER_BIT),Rt.clear(r)},this.clearTarget=function(e,t,a,r){this.setRenderTarget(e),this.clear(t,a,r)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){ia=null,fa=-1,xa=-1,Ga=-1,sa=-1,na=-1,Ya=!0,ca=-1,ua=-1,this.shadowMapPlugin.update(e,t)};var Ur=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var a,r,i,o=!1;for(a=0,r=aa.length;r>a;a++)if(i=aa[a],i.program===t){i.usedTimes--,0===i.usedTimes&&(o=!0);break}if(o===!0){var n=[];for(a=0,r=aa.length;r>a;a++)i=aa[a],i.program!==t&&n.push(i);aa=n,Rt.deleteProgram(t),ta.info.memory.programs--}}},Ir=function(e){for(var t=0,a=e.attributesList.length;a>t;t++){var r=e.attributesList[t];r.buffer||(r.buffer=Rt.createBuffer())}};this.setBuffers=function(e){for(var t,a,r=e.dynamic?Rt.DYNAMIC_DRAW:Rt.STATIC_DRAW,i=e.attributesList,o=0,n=i.length;n>o;o++)a=i[o],a.needsUpdate&&(t="index"===a.name?Rt.ELEMENT_ARRAY_BUFFER:Rt.ARRAY_BUFFER,Rt.bindBuffer(t,a.buffer),a.partialUpdate&&e.alreadyUploaded?Rt.bufferSubData(t,a.subOffset,a.array.subarray(a.subBegin,a.subEnd)):(Rt.bufferData(t,a.array,r),e.alreadyUploaded=!0),a.needsUpdate=!1,e.dynamic||delete a.array)};var Nr=function(e,t,a){for(var r,o,n,s,l,d=t.virtualAttributesList,h=0,c=d.length;c>h;h++)r=d[h],n=r.mapped,n&&(o=e[r.name],0>o||(s=n.buffer,l=n.itemSize,i(o),Rt.bindBuffer(Rt.ARRAY_BUFFER,s),Rt.vertexAttribPointer(o,l,Rt.FLOAT,!1,0,a*l*4)))},Br=function(e,t,a,r){for(var i,o=a.numSupportedMorphTargets,n=[],l=e.morphTargetInfluences,d=0,h=l.length;h>d;d++)i=l[d],i>0&&n.push([i,d]);n.length>o?(n.sort(s),n.length=o):0===n.length&&n.push([0,0]),e.__morphTargetInfluencesArray||(e.__morphTargetInfluencesArray=new Float32Array(ta.maxMorphTargets));for(var c,u,f=e.__morphTargetInfluencesArray,p=t.virtualAttributes,m=t.attributesList,v=t.morphTargets,g=0;o>g;)n[g]?(c=n[g][1],u=v[c].index,p["morphTarget"+g].mapped=m[u],p["morphNormal"+g].mapped=m[u+1],f[g]=l[c]):f[g]=0,g++;null!==r.uniforms.morphTargetInfluences&&Rt.uniform1fv(r.uniforms.morphTargetInfluences,f)};this.renderImmediateGeometry=function(e,t,a){e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Rt.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Rt.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Rt.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Rt.createBuffer());var r=t.attributes,i=a.map||a.lightMap||a.bumpMap||a.normalMap||a.bumpDetailMap||a.normalDetailMap||a.normalGlossMap||a.glossMap||a.specularMap||a.displacementMap,o=a.uniforms;i=i||o.map&&o.map.value||o.lightMap&&o.lightMap.value||o.bumpMap&&o.bumpMap.value||o.normalMap&&o.normalMap.value||o.bumpDetailMap&&o.bumpDetailMap.value||o.normalDetailMap&&o.normalDetailMap.value||o.normalGlossMap&&o.normalGlossMap.value||o.glossMap&&o.glossMap.value||o.specularMap&&o.specularMap.value||o.displacementMap&&o.displacementMap.value,e.hasPositions&&r.position>=0&&(Rt.bindBuffer(Rt.ARRAY_BUFFER,e.__webglVertexBuffer),Rt.bufferData(Rt.ARRAY_BUFFER,e.positionArray,Rt.STREAM_DRAW),Rt.enableVertexAttribArray(r.position),Rt.vertexAttribPointer(r.position,3,Rt.FLOAT,!1,0,0)),e.hasNormals&&r.normal>=0&&(Rt.bindBuffer(Rt.ARRAY_BUFFER,e.__webglNormalBuffer),Rt.bufferData(Rt.ARRAY_BUFFER,e.normalArray,Rt.STREAM_DRAW),Rt.enableVertexAttribArray(r.normal),Rt.vertexAttribPointer(r.normal,3,Rt.FLOAT,!1,0,0)),e.hasUvs&&r.uv>=0&&i&&(Rt.bindBuffer(Rt.ARRAY_BUFFER,e.__webglUvBuffer),Rt.bufferData(Rt.ARRAY_BUFFER,e.uvArray,Rt.STREAM_DRAW),Rt.enableVertexAttribArray(r.uv),Rt.vertexAttribPointer(r.uv,2,Rt.FLOAT,!1,0,0)),e.hasColors&&r.color>=0&&a.vertexColors&&(Rt.bindBuffer(Rt.ARRAY_BUFFER,e.__webglColorBuffer),Rt.bufferData(Rt.ARRAY_BUFFER,e.colorArray,Rt.STREAM_DRAW),Rt.enableVertexAttribArray(r.color),Rt.vertexAttribPointer(r.color,3,Rt.FLOAT,!1,0,0)),Rt.drawArrays(Rt.TRIANGLES,0,e.count),e.count=0},this.renderGeometry=function(e,r,i){var n=e.program,s=n.attributes,l=!1,d=16777215*r.id+n.id;if(d!==sa&&(sa=d,l=!0),l&&o(),i.morphTargetInfluences&&e.morphTargets&&Br(i,r,e,n),i instanceof THREE.Mesh)if(r.attributes.index)t(r,s,l);else{var h=i instanceof THREE.TriangleStrip?Rt.TRIANGLE_STRIP:Rt.TRIANGLES;a(r,s,h,l)}else if(i instanceof THREE.Particles){var h=Rt.POINTS;a(r,s,h,l)}};var Or=function(e,t){for(var a,r,i,o=0,s=0,l=e.length;l>s;s++)a=e[s],r=a.object,i=a.geometry,a.render=!1,a.id=r.id,r.visible&&r.enabled&&((r instanceof THREE.Mesh||r instanceof THREE.Particles)&&r.frustumCulled&&!Ra.contains(r,i)||(L(r,t),u(a),a.render=!0,ta.sortObjects===!0&&(null!==r.renderDepth?a.z=r.renderDepth:(Ia.copy(r.matrixWorld.getPosition()),Ua.multiplyVector3(Ia),a.z=Ia.data[2])),o+=1));ta.sortObjects&&o>0&&e.sort(n)};this.cullInstances=function(e,t,a){var r=t.numInstances;t.culledOffsets||(t.culledOffsets=new Float32Array(3*r),t.culledRotations=new Float32Array(4*r),t.srcOffsets=t.attributes.offset.array,t.srcRotations=t.attributes.rotation.array);for(var i=t.attributes.offset,o=t.attributes.rotation,n=t.srcOffsets,s=t.srcRotations,l=t.culledOffsets,d=t.culledRotations,h=0,c=0;r>c;c++){var u=a.containsInstance(e,t,c);if(u){var f=3*c,p=n[f],m=n[f+1],v=n[f+2],g=4*c,S=s[g],x=s[g+1],G=s[g+2],M=s[g+3],y=3*h;l[y]=p,l[y+1]=m,l[y+2]=v;var X=4*h;d[X]=S,d[X+1]=x,d[X+2]=G,d[X+3]=M,h+=1}}t.numVisibleInstances=h,o.array=d,i.array=l,o.needsUpdate=!0,i.needsUpdate=!0,o.partialUpdate=!0,i.partialUpdate=!0,o.subOffset=0,i.subOffset=0,o.subBegin=0,i.subBegin=0,o.subEnd=4*h,i.subEnd=3*h};var Vr=function(e,t){for(var a,r,i=0,o=e.length;o>i;i++)a=e[i],r=a.object,a.render=!1,r.visible&&r.enabled&&(Ra.contains(r,r)||!r.frustumCulled)&&(L(r,t),c(a),a.render=!0)},kr=function(e){for(var t,a=0,r=e.length;r>a;a++)t=e[a],t.render&&u(t)},zr=function(e){for(var t,a=0,r=e.length;r>a;a++)t=e[a],t.render&&c(t)};this.renderCube=function(e,t,a){var r=a.generateMipmaps;a.generateMipmaps=!1,a.activeCubeFace=0,this.render(e,t.px,a),a.activeCubeFace=1,this.render(e,t.nx,a),a.activeCubeFace=2,this.render(e,t.py,a),a.activeCubeFace=3,this.render(e,t.ny,a),a.activeCubeFace=4,this.render(e,t.pz,a),a.generateMipmaps=r,a.activeCubeFace=5,this.render(e,t.nz,a)},this.render=function(e,t,a,r){if(t instanceof THREE.Camera==!1)return void console.error("THREE.ForwardRenderer.render: camera is not an instance of THREE.Camera.");var i=e.__lights,o=e.fog,n=e.heightFog;na=-1,Ya=!0,Fa.length=0,this.autoUpdateScene&&e.updateMatrixWorld(),this.autoUpdateView&&(void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),Ua.multiply(t.projectionMatrix,t.matrixWorldInverse),Ra.setFromMatrix(Ua)),this.autoUpdateObjects&&this.initWebGLObjects(e),Fr||(Gt(),Fr=!0),l(this.renderPluginsPre,e,t);for(var s=0,c=e.__webglObjects.length;c>s;s++){var u=e.__webglObjects[s].object,f=u.geometries;if(u instanceof THREE.Mesh||u instanceof THREE.Particles)for(var p=0,m=f.length;m>p;p++){var v=f[p],g=v.numInstances,S=g>0&&nr;S&&(v.instanceCulled?(v.srcOffsets&&(v.attributes.offset.array=v.srcOffsets,v.attributes.rotation.array=v.srcRotations),ta.cullInstances(u,v,Ra),ta.setBuffers(v)):v.numVisibleInstances=g)}}this.setRenderTarget(a),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),this.autoUpdateView?(Or(e.__webglObjects,t),Vr(e.__webglObjectsImmediate,t)):(kr(e.__webglObjects),zr(e.__webglObjectsImmediate)),this.setBlending(THREE.NoBlending),d(e.__webglObjects,!0,"opaque",t,i,o,n,!1),h(e.__webglObjectsImmediate,"opaque",t,i,o,n,!1),d(e.__webglObjects,!1,"transparent",t,i,o,n,!0),h(e.__webglObjectsImmediate,"transparent",t,i,o,n,!0),l(this.renderPluginsPost,e,t),a&&a.generateMipmaps&&a.minFilter!==THREE.NearestFilter&&a.minFilter!==THREE.LinearFilter&&dt(a),this.setDepthTest(!0),this.setDepthWrite(!0);for(var s=0,c=e.__webglObjects.length;c>s;s++){var u=e.__webglObjects[s].object,f=u.geometries;if(u instanceof THREE.Mesh||u instanceof THREE.Particles)for(var p=0,m=f.length;m>p;p++){var v=f[p];v.srcOffsets&&(v.attributes.offset.array=v.srcOffsets,v.attributes.rotation.array=v.srcRotations)}}},this.renderImmediateObject=function(e,t){var a=e.program;sa=-1,ta.setMaterialFaces(e),t.immediateRenderCallback?t.immediateRenderCallback(a,Rt,Ra):t.render(function(t){ta.renderImmediateGeometry(t,a,e)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[]);e.__objectsAdded.length;)f(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)g(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);
for(var t=0,a=e.__webglObjects.length;a>t;t++)v(e.__webglObjects[t].object)},this.initMaterial=function(e,t,a,r,i){var o;e instanceof THREE.EmissiveMaterial?o="emissive":e instanceof THREE.PhongMaterial?o="phong":e instanceof THREE.DynamicParticleMaterial&&(o="dynamicParticle"),o&&x(e,THREE.ShaderLib[o]);var n,s,l=ut(t),d=ft(t),h=ct(r),c={map:!!e.map,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,normalGlossMap:!!e.normalGlossMap,bumpDetailMap:!!e.bumpDetailMap,normalDetailMap:!!e.normalDetailMap,glossMap:!!e.glossMap,specularMap:!!e.specularMap,displacementMap:!!e.displacementMap,vertexColors:e.vertexColors,fog:a,useFog:e.fog,isParticle:e.particle,sizeAttenuation:e.particle&&e.particleSizeAttenuation,interpolateParticleFrames:e.particle&&e.interpolateFrames&&e.numFrames>1,skinning:e.skinning,maxBones:h,useVertexTexture:pr&&r&&r.useVertexTexture,boneTextureWidth:r&&r.boneTextureWidth,boneTextureHeight:r&&r.boneTextureHeight,morphTargets:e.morphTargets&&this.maxMorphTargets>0,morphNormals:e.morphNormals&&this.maxMorphNormals>0,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:l.directional,maxPointLights:l.point,maxSphereLights:l.sphere,maxTubeLights:l.tube,maxSpotLights:l.spot,maxHemiLights:l.hemi,maxAreaLights:l.area,areaTextures:l.areaTextures>0,maxImageLights:l.image,maxPolyLights:l.poly,polyTextures:l.polyTextures>0,maxShadows:d,shadowMapEnabled:this.shadowMapEnabled&&r.receiveShadow&&d>0,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,shadowSampler:lr&&$a&&this.shadowMapUseDepthTextures,areaIndexOffset:l.areaIndexOffset,polyIndexOffset:l.polyIndexOffset,spotIndexOffset:l.spotIndexOffset,dirIndexOffset:l.dirIndexOffset,sphereIndexOffset:l.sphereIndexOffset,alphaTest:e.alphaTest,metal:e.metal,parallax:e.parallax,parallaxRefineSteps:e.parallaxRefineSteps,wrapAround:e.wrapAround,wrapAroundSkin:e.wrapAroundSkin,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide,instances:e.instances,transparent:e.transparent,lightMapGamma:!!e.lightMapGamma,osxHack:navigator.platform.toLowerCase().indexOf("mac")>=0},u={position:!0,normal:!0,uv:!0,uv2:!0,tangent:!0,color:!0};for(n=0;n<this.maxMorphTargets;n++)u["morphTarget"+n]=!0;for(n=0;n<this.maxMorphNormals;n++)u["morphNormal"+n]=!0;if(i){for(s in i.attributes)u[s]=!0;for(s in i.virtualAttributes)u[s]=!0}var f={viewMatrix:!0,viewInverseMatrix:!0,modelViewMatrix:!0,projectionMatrix:!0,normalMatrix:!0,modelMatrix:!0,cameraPosition:!0,morphTargetInfluences:!0};c.useVertexTexture?f.boneTexture=!0:f.boneGlobalMatrices=!0;for(s in e.uniforms)f[s]=!0;e.program=k(o,e,f,u,c);var p=e.program.uniforms;e.uniformsListUnique=[],e.uniformsListShared=[];for(var m in e.uniforms){var v=p[m];if(v){var g=e.uniforms[m],S=[g,v];g.shared?e.uniformsListShared.push(S):e.uniformsListUnique.push(S)}}if(e.morphTargets){var G=e.program.attributes;for(e.numSupportedMorphTargets=0,n=0;n<this.maxMorphTargets;n++)G["morphTarget"+n]>=0&&e.numSupportedMorphTargets++}},this.setProgram=function(e,t,a,r,i,o,n){da=0,i.needsUpdate&&(i.program&&Ur(i),ta.initMaterial(i,t,a,o,n),i.needsUpdate=!1);var s=!1,l=!1,d=i.program;d!==ia&&(Rt.useProgram(d),ia=d,s=!0,l=!0),i.id!==na&&(na=i.id,s=!0);var h=d.uniforms,c=i.uniforms;if(i.skinning)if(pr&&o.useVertexTexture){if(null!==h.boneTexture){var u=T();Rt.uniform1i(h.boneTexture,u),ta.setTexture(o.boneTexture,u)}}else null!==h.boneGlobalMatrices&&Rt.uniformMatrix4fv(h.boneGlobalMatrices,!1,o.boneMatrices);if(!l&&e===la||null===h.projectionMatrix||(Rt.uniformMatrix4fv(h.projectionMatrix,!1,e.projectionMatrix.elements),e!==la&&(la=e)),l){if(a&&i.fog&&y(c,a,e),r&&i.defines&&i.defines.USE_HEIGHT_FOG&&X(c,r),i.lights&&(Ya&&(N(t,e),Ya=!1),w(c,Ka)),o.receiveShadow&&!i._shadowPass&&c.shadowMatrix&&null!==h.shadowMatrix&&C(c,Ka.shadowCasters),null!==h.viewMatrix&&Rt.uniformMatrix4fv(h.viewMatrix,!1,e.matrixWorldInverse.elements),null!==h.viewInverseMatrix&&Rt.uniformMatrix4fv(h.viewInverseMatrix,!1,e.matrixWorld.elements),null!==h.cameraPosition){var f=e.matrixWorld.getPosition();Rt.uniform3fv(h.cameraPosition,f.data)}P(i.uniformsListShared),ha=da}else da=ha;return s&&(i.particle&&M(c,i,e),(i instanceof THREE.EmissiveMaterial||i instanceof THREE.PhongMaterial||i instanceof THREE.DynamicParticleMaterial)&&G(c,i),i instanceof THREE.PhongMaterial&&_(c,i),P(i.uniformsListUnique)),A(h,o),d},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Rt.disable(Rt.CULL_FACE):(Rt.frontFace(t===THREE.FrontFaceDirectionCW?Rt.CW:Rt.CCW),Rt.cullFace(e===THREE.CullFaceBack?Rt.BACK:e===THREE.CullFaceFront?Rt.FRONT:Rt.FRONT_AND_BACK),Rt.enable(Rt.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,a=e.side===THREE.BackSide;ca!==t&&(t?Rt.disable(Rt.CULL_FACE):Rt.enable(Rt.CULL_FACE),ca=t),ua!==a&&(Rt.frontFace(a?Rt.CW:Rt.CCW),ua=a)},this.setDepthTest=function(e){xa!==e&&(e?Rt.enable(Rt.DEPTH_TEST):Rt.disable(Rt.DEPTH_TEST),xa=e)},this.setDepthWrite=function(e){Ga!==e&&(Rt.depthMask(e),Ga=e)},this.setPolygonOffset=function(e,t,a){Ma!==e&&(e?Rt.enable(Rt.POLYGON_OFFSET_FILL):Rt.disable(Rt.POLYGON_OFFSET_FILL),Ma=e),(ya!==t||Xa!==a)&&(Rt.polygonOffset(t,a),ya=t,Xa=a)},this.setBlending=function(e,t,a,r,i,o){e!==fa&&(e===THREE.NoBlending?Rt.disable(Rt.BLEND):e===THREE.AdditiveBlending?(Rt.enable(Rt.BLEND),Rt.blendEquation(Rt.FUNC_ADD),Rt.blendFunc(Rt.SRC_ALPHA,Rt.ONE)):e===THREE.SubtractiveBlending?(Rt.enable(Rt.BLEND),Rt.blendEquation(Rt.FUNC_ADD),Rt.blendFunc(Rt.ZERO,Rt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Rt.enable(Rt.BLEND),Rt.blendEquation(Rt.FUNC_ADD),Rt.blendFunc(Rt.ZERO,Rt.SRC_COLOR)):e===THREE.LegacyNormalBlending?(Rt.enable(Rt.BLEND),Rt.blendEquationSeparate(Rt.FUNC_ADD,Rt.FUNC_ADD),Rt.blendFuncSeparate(Rt.SRC_ALPHA,Rt.ONE_MINUS_SRC_ALPHA,Rt.ONE,Rt.ONE_MINUS_SRC_ALPHA)):e===THREE.CustomBlending?Rt.enable(Rt.BLEND):(Rt.enable(Rt.BLEND),Rt.blendEquationSeparate(Rt.FUNC_ADD,Rt.FUNC_ADD),Rt.blendFuncSeparate(Rt.ONE,Rt.ONE_MINUS_SRC_ALPHA,Rt.ONE,Rt.ONE_MINUS_SRC_ALPHA)),fa=e),e===THREE.CustomBlending?(t!==pa&&(Rt.blendEquation(t),pa=t),(a!==ma||r!==va||i!==ga||o!==Sa)&&(Rt.blendFuncSeparate(a,r,i,o),ma=a,va=r,ga=i,Sa=o)):(pa=null,ma=null,va=null,ga=null,Sa=null)},this.setTexture=function(e,t){e instanceof THREE.Texture&&(e.__webglInit||(e.__webglInit=!0,e.__webglTexture=Rt.createTexture(),ta.info.memory.textures++,Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_2D,e.__webglTexture),Fa[t]=e.id,Rt.texImage2D(Rt.TEXTURE_2D,0,Rt.RGBA,1,1,0,Rt.RGBA,Rt.UNSIGNED_BYTE,Za)),e.needsUpdate&&q(e,t)),Fa[t]!==e.id&&e.__webglTexture&&(Rt.activeTexture(Rt.TEXTURE0+t),Rt.bindTexture(Rt.TEXTURE_2D,e.__webglTexture),Fa[t]=e.id)},this.setRenderTarget=function(e){{var t,a,r,i,o,n=e instanceof THREE.RenderTargetCube;e instanceof THREE.RenderTargetArray}e?(lt(e),t=n?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,a=e.width,r=e.height,i=0,o=0):(t=null,a=Da,r=Ca,i=_a,o=wa),t!==oa&&(Rt.bindFramebuffer(Rt.FRAMEBUFFER,t),Rt.viewport(i,o,a,r),oa=t),Aa=a,Ta=r},void 0!==e.width&&void 0!==e.height&&this.setSize(e.width,e.height)},THREE.DeferredRenderer=function(e){var t=this,a=void 0!==e.width?e.width:800,r=void 0!==e.height?e.height:600,i=void 0!==e.scale?e.scale:1,o=Math.max(1,Math.floor(i*a)),n=Math.max(1,Math.floor(i*r)),s=void 0!==e.tonemapping?e.tonemapping:THREE.SimpleOperator,l=void 0!==e.antialias?e.antialias:!1,d=void 0!==e.dither?e.dither:!1,h=void 0!==e.useMultipleRenderTargets?e.useMultipleRenderTargets:!1,c=void 0!==e.temporalAA?e.temporalAA:!1,u=void 0!==e.backend?e.backend:"webgl1",f="webgl2"===u,p=void 0!==e.specularBRDF?e.specularBRDF:THREE.GGXBRDF;t.brightness=void 0!==e.brightness?e.brightness:1,t.whitePoint=void 0!==e.whitePoint?e.whitePoint:1,this.renderer=e.renderer,void 0===this.renderer&&(this.renderer=new THREE.ForwardRenderer({alpha:!1,antialias:!1,depth:!1,stencil:!1,tonemapping:THREE.NoOperator,scale:i,backend:u}),this.renderer.setSize(a,r),this.renderer.setClearColorHex(0,0),this.renderer.gammaInput=!0,this.renderer.gammaOutput=!1,this.renderer.specularBRDF=p,this.renderer.autoClear=!1);var m=this.renderer.devicePixelRatio;o=Math.max(1,Math.floor(o*m)),n=Math.max(1,Math.floor(n*m)),this.domElement=this.renderer.domElement,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFSoftShadowMap,this.shadowMapSlopeDepthBias=!1,this.shadowMapSlopeScale=2,this.shadowMapSlopeBias=0,this.shadowMapSlopeMax=.001,this.shadowMapProjectionBias=1e-5,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapUseDepthTextures=!1,this.shadowMapDepthTextureType=THREE.UnsignedIntType,this.shadowMapDepthTextureBias=0,this.shadowMapCascadeUpdateThreshold=2,this.shadowMapCascadeUpdateModulo=2,this.shadowMapDebug=!1,this.transparentShadows=!1,this.particlesOffscreen=!1,this.particlesOffscreenScale=.5,this.particlesOit=!1,this.particlesShadows=!1,this.occludersEnabled=!1,this.ssaoEnabled=!1,this.ssaoScale=.5,this.ssaoRadius=1,this.ssaoSamples=9,this.bloomEnabled=!1,this.bloomScale=.25,this.bloomStrength=1,this.bloomThreshold=1,this.dofEnabled=!1,this.dofFancy=!1,this.dofPhysical=!0,this.dofLensFstop=4,this.dofLensFocalLength=50,this.dofLensBlurScale=50,this.dofLensMaxCoc=1,this.dofLensApertureSides=7,this.dofDebug=!1,this.dofAutofocus=!1,this.dofAutofocusPoint=new THREE.Vector2(.5,.5),this.dofFocusDistance=1,this.dofFocusWidth=1,this.dofFocusRampWidth=2,this.dofMaxBlur=.2,this.fogEnabled=!1,this.fogColor=new THREE.Color(0),this.fogStrength=.1,this.fogStart=100,this.specularMipFix=!1,this.useDepthTexture=!1,this.skinHighQuality=!1,this.taaBeforeDOF=!1,this.useMultiProxies=!1,h&&!this.renderer.supportsDrawBuffers()&&(console.warn("THREE.DeferredRenderer: can't use multiple render targets, falling back to multipass."),h=!1);var v=5,g=this.renderer.getMaxDrawBuffers();h&&this.renderer.supportsDrawBuffers()&&v>g&&(console.warn("THREE.DeferredRenderer: not enough attachments for multiple render targets (available: "+g+", required: "+v+"), falling back to multipass."),h=!1);var S,x,G,M,y,X,_,w,D,C,A,T,P,L,b,E,F,R,U,I,N,B,O,V,k,z,H,W,j,q,Y,K,Z,Q,J,$,et,tt,at,rt,it,ot,nt,st,lt=!1,dt=this.renderer.context,ht=new THREE.Projector,ct=new THREE.Vector3,ut=new THREE.Vector3,ft=new THREE.Color(0),pt=new THREE.Color(16777215),mt=new THREE.Vector3(1,1,1),vt=THREE.DeferredShaders.combined,gt=THREE.DeferredShaders.color,St=THREE.DeferredShaders.depth,xt=THREE.DeferredShaders.normalDepth,Gt=THREE.DeferredShaders.occluder,Mt=THREE.DeferredShaders.composite,yt=[],Xt=new THREE.Color,_t=0,wt=[],Dt=[],Ct=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(xt.uniforms),vertexShader:xt.vertexShader,fragmentShader:xt.fragmentShader,blending:THREE.NoBlending}),At=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(St.uniforms),vertexShader:St.vertexShader,fragmentShader:St.fragmentShader,blending:THREE.NoBlending}),Tt=new THREE.ShaderMaterial({uniforms:THREE.UniformsUtils.clone(Gt.uniforms),vertexShader:Gt.vertexShader,fragmentShader:Gt.fragmentShader,blending:THREE.NoBlending}),Pt={},Lt={},bt={},Et={},Ft={},Rt=0,Ut=0,It=THREE.Math.generateHalton_2_3(16),Nt=new THREE.Vector4(0,0,0,0),Bt=new THREE.Matrix4,Ot=new THREE.Matrix4,Vt=new THREE.Matrix4,kt=function(e,a){var r=THREE.UniformsUtils.clone(vt.uniforms),i={USE_MAP:!!e.map,USE_LIGHTMAP:!!e.lightMap,USE_BUMPMAP:!!e.bumpMap,USE_NORMALMAP:!!e.normalMap,USE_NORMALGLOSSMAP:!!e.normalGlossMap,USE_GLOSSMAP:!!e.glossMap,USE_BUMPDETAILMAP:!!e.bumpDetailMap,USE_NORMALDETAILMAP:!!e.normalDetailMap,USE_SPECULARMAP:!!e.specularMap,USE_DISPLACEMENTMAP:!!e.displacementMap,USE_PARALLAX:!!e.parallax,LIGHTMAP_GAMMA:!!e.lightMapGamma,PARTICLE:e.particle,USE_PARTICLE_SIZEATTENUATION:e.particle&&e.particleSizeAttenuation,TEXTURE_DEPTH:t.useDepthTexture,WIREFRAME:e.wireframe,MRT_OUTPUT:!0};if(e.parallax&&e.parallaxRefineSteps>0&&(i.PARALLAX_REFINE_STEPS=e.parallaxRefineSteps.toFixed(0).toString()),e.displacementMap)switch(e.displacementDirection){case THREE.DisplaceByNormal:i.DISPLACE_BY_NORMAL=!0;break;case THREE.DisplaceByPosition:i.DISPLACE_BY_POSITION=!0}var n={WEBGL_draw_buffers:!0};(i.USE_BUMPMAP||i.USE_NORMALMAP||i.USE_NORMALGLOSSMAP||i.USE_NORMALDETAILMAP||i.USE_BUMPDETAILMAP||i.USE_DISPLACEMENTMAP||i.WIREFRAME)&&(n.OES_standard_derivatives=!0);var s=new THREE.ShaderMaterial({fragmentShader:vt.fragmentShader,vertexShader:vt.vertexShader,uniforms:r,defines:i,extensions:n,blending:THREE.NoBlending,instances:e.instances}),l=void 0!==e.color?e.color:pt,d=void 0!==e.specular?e.specular:ft,h=void 0!==e.wrapRGB?e.wrapRGB:mt,c=void 0!==e.shininess?e.shininess:1,u=void 0!==e.wrapAround?e.wrapAround?-1:1:1;if(r.diffuse.value.setRGBA(l,u),r.specular.value.setRGBA(d,c),r.wrapRGB.value.copy(h),r.map.value=e.map,e.lightMap&&(r.lightMap.value=e.lightMap),e.bumpMap&&(r.bumpMap.value=e.bumpMap,r.bumpScale.value=e.bumpScale),(e.normalMap||e.normalGlossMap)&&(r.normalMap.value=e.normalGlossMap?e.normalGlossMap:e.normalMap,r.normalScale.value.copy(e.normalScale)),e.bumpDetailMap&&(r.bumpDetailMap.value=e.bumpDetailMap),e.normalDetailMap&&(r.normalDetailMap.value=e.normalDetailMap),(e.bumpDetailMap||e.normalDetailMap)&&r.detailRepeatScale.value.set(e.detailRepeat.x,e.detailRepeat.y,e.detailScale),e.specularMap&&(r.specularMap.value=e.specularMap),e.glossMap&&(r.glossMap.value=e.glossMap),e.displacementMap&&(r.displacementMap.value=e.displacementMap,r.displacementScaleBias.value.set(e.displacementScale,e.displacementBias),r.displacementNormalScale.value=e.displacementNormalScale),e.particle&&(r.particleSize.value=e.particleSize,r.screenWidth.value=o),e.particle&&e.particleSizeAttenuation&&wt.push({material:s}),e.parallax&&(r.parallaxScale.value=e.parallaxScale),e.wireframe&&(r.wireframeDiffuse.value.copy(e.wireframeDiffuse),r.wireframeSpecular.value.copy(e.wireframeSpecular),r.wireframeShininessThickness.value.set(e.wireframeShininess,e.wireframeThickness)),s.vertexColors=e.vertexColors,s.morphTargets=e.morphTargets,s.morphNormals=e.morphNormals,s.skinning=e.skinning,s.alphaTest=e.alphaTest,s.side=e.side,s.visible=e.visible,s.polygonOffset=e.polygonOffset,s.polygonOffsetFactor=e.polygonOffsetFactor,s.polygonOffsetUnits=e.polygonOffsetUnits,void 0!==a){var f=a.offset,p=a.repeat;r.offsetRepeat.value.set(f.data[0],f.data[1],p.data[0],p.data[1])}return s},zt=function(e,t){var a={PARTICLE:e.particle,USE_PARTICLE_SIZEATTENUATION:e.particle&&e.particleSizeAttenuation,USE_DISPLACEMENTMAP:!!e.displacementMap},r={};if(e.displacementMap)switch(e.displacementDirection){case THREE.DisplaceByNormal:a.DISPLACE_BY_NORMAL=!0;break;case THREE.DisplaceByPosition:a.DISPLACE_BY_POSITION=!0}if(e.morphTargets||e.skinning||e.alphaTest||e.particle||e.displacementMap||e.instances){var i=THREE.UniformsUtils.clone(Gt.uniforms),n=new THREE.ShaderMaterial({uniforms:i,vertexShader:Gt.vertexShader,fragmentShader:Gt.fragmentShader,blending:THREE.NoBlending,instances:e.instances});if(n.morphTargets=e.morphTargets,n.skinning=e.skinning,void 0!==t){var s=t.offset,l=t.repeat;i.offsetRepeat.value.set(s.data[0],s.data[1],l.data[0],l.data[1])}e.alphaTest&&e.map&&(i.alphaMap.value=e.map),e.displacementMap&&(i.displacementMap.value=e.displacementMap,i.displacementScaleBias.value.set(e.displacementScale,e.displacementBias)),e.particle&&(i.particleSize.value=e.particleSize,i.screenWidth.value=o,i.particleSizeAttenuation&&wt.push({material:n}))}else var n=Tt.clone();return n.defines=a,n.extensions=r,n.alphaTest=e.alphaTest,n.visible=e.visible,n.side=e.side,n},Ht=function(e,t){var a=THREE.UniformsUtils.clone(gt.uniforms),r={USE_MAP:!!e.map,USE_LIGHTMAP:!!e.lightMap,USE_SPECULARMAP:!!e.specularMap,USE_NORMALGLOSSMAP:!!e.normalGlossMap,USE_GLOSSMAP:!!e.glossMap,USE_BUMPMAP:!!e.bumpMap&&e.parallax,USE_PARALLAX:!!e.parallax,USE_DISPLACEMENTMAP:!!e.displacementMap,LIGHTMAP_GAMMA:!!e.lightMapGamma,PARTICLE:e.particle,USE_PARTICLE_SIZEATTENUATION:e.particle&&e.particleSizeAttenuation,WIREFRAME:e.wireframe};if(e.parallax&&e.parallaxRefineSteps>0&&(r.PARALLAX_REFINE_STEPS=e.parallaxRefineSteps.toFixed(0).toString()),e.displacementMap)switch(e.displacementDirection){case THREE.DisplaceByNormal:r.DISPLACE_BY_NORMAL=!0;break;case THREE.DisplaceByPosition:r.DISPLACE_BY_POSITION=!0}var i={};(r.USE_BUMPMAP||r.USE_PARALLAX||r.WIREFRAME)&&(i.OES_standard_derivatives=!0);var n=new THREE.ShaderMaterial({fragmentShader:gt.fragmentShader,vertexShader:gt.vertexShader,uniforms:a,defines:r,extensions:i,instances:e.instances}),s=void 0!==e.color?e.color:pt,l=void 0!==e.specular?e.specular:ft,d=void 0!==e.wrapRGB?e.wrapRGB:mt,h=void 0!==e.shininess?e.shininess:1,c=void 0!==e.wrapAround?e.wrapAround?-1:1:1;if(a.diffuse.value.setRGBA(s,c),a.specular.value.setRGBA(l,h),a.wrapRGB.value.copy(d),a.map.value=e.map,e.lightMap&&(a.lightMap.value=e.lightMap),e.specularMap&&(a.specularMap.value=e.specularMap),e.glossMap&&(a.glossMap.value=e.glossMap),e.normalGlossMap&&(a.normalMap.value=e.normalGlossMap),e.displacementMap&&(a.displacementMap.value=e.displacementMap,a.displacementScaleBias.value.set(e.displacementScale,e.displacementBias)),e.particle&&(a.particleSize.value=e.particleSize,a.screenWidth.value=o),e.particle&&e.particleSizeAttenuation&&wt.push({material:n}),e.parallax&&(a.parallaxScale.value=e.parallaxScale,a.bumpMap.value=e.bumpMap),e.wireframe&&(a.wireframeDiffuse.value.copy(e.wireframeDiffuse),a.wireframeSpecular.value.copy(e.wireframeSpecular),a.wireframeShininessThickness.value.set(e.wireframeShininess,e.wireframeThickness)),n.vertexColors=e.vertexColors,n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.skinning=e.skinning,n.alphaTest=e.alphaTest,n.side=e.side,n.visible=e.visible,n.polygonOffset=e.polygonOffset,n.polygonOffsetFactor=e.polygonOffsetFactor,n.polygonOffsetUnits=e.polygonOffsetUnits,void 0!==t){var u=t.offset,f=t.repeat;a.offsetRepeat.value.set(u.data[0],u.data[1],f.data[0],f.data[1])}return n},Wt=function(e,t){var a={USE_BUMPMAP:!!e.bumpMap,USE_NORMALMAP:!!e.normalMap,USE_NORMALGLOSSMAP:!!e.normalGlossMap,USE_BUMPDETAILMAP:!!e.bumpDetailMap,USE_NORMALDETAILMAP:!!e.normalDetailMap,USE_DISPLACEMENTMAP:!!e.displacementMap,USE_PARALLAX:!!e.parallax,PARTICLE:e.particle,USE_PARTICLE_SIZEATTENUATION:e.particle&&e.particleSizeAttenuation};if(e.parallax&&e.parallaxRefineSteps>0&&(a.PARALLAX_REFINE_STEPS=e.parallaxRefineSteps.toFixed(0).toString()),e.displacementMap)switch(e.displacementDirection){case THREE.DisplaceByNormal:a.DISPLACE_BY_NORMAL=!0;break;case THREE.DisplaceByPosition:a.DISPLACE_BY_POSITION=!0}var r={};if((a.USE_BUMPMAP||a.USE_NORMALMAP||a.USE_NORMALGLOSSMAP||a.USE_NORMALDETAILMAP||a.USE_BUMPDETAILMAP||a.USE_PARALLAX||a.USE_DISPLACEMENTMAP)&&(r.OES_standard_derivatives=!0),e.morphTargets||e.skinning||e.bumpMap||e.normalMap||e.alphaTest||e.particle||e.displacementMap||e.instances||e.polygonOffset){var i=THREE.UniformsUtils.clone(xt.uniforms),n=new THREE.ShaderMaterial({uniforms:i,vertexShader:xt.vertexShader,fragmentShader:xt.fragmentShader,blending:THREE.NoBlending,instances:e.instances});if(n.morphTargets=e.morphTargets,n.morphNormals=e.morphNormals,n.skinning=e.skinning,e.bumpMap&&(i.bumpMap.value=e.bumpMap,i.bumpScale.value=e.bumpScale),(e.normalMap||e.normalGlossMap)&&(i.normalMap.value=e.normalGlossMap?e.normalGlossMap:e.normalMap,i.normalScale.value.copy(e.normalScale)),e.bumpDetailMap&&(i.bumpDetailMap.value=e.bumpDetailMap),e.normalDetailMap&&(i.normalDetailMap.value=e.normalDetailMap),(e.bumpDetailMap||e.normalDetailMap)&&i.detailRepeatScale.value.set(e.detailRepeat.x,e.detailRepeat.y,e.detailScale),e.displacementMap&&(i.displacementMap.value=e.displacementMap,i.displacementScaleBias.value.set(e.displacementScale,e.displacementBias),i.displacementNormalScale.value=e.displacementNormalScale),void 0!==t){var s=t.offset,l=t.repeat;i.offsetRepeat.value.set(s.data[0],s.data[1],l.data[0],l.data[1])}e.alphaTest&&e.map&&(i.alphaMap.value=e.map),e.particle&&(i.particleSize.value=e.particleSize,i.screenWidth.value=o,e.particleSizeAttenuation&&wt.push({material:n})),e.parallax&&(i.parallaxScale.value=e.parallaxScale),n.polygonOffset=e.polygonOffset,n.polygonOffsetFactor=e.polygonOffsetFactor,n.polygonOffsetUnits=e.polygonOffsetUnits}else var n=Ct.clone();return n.defines=a,n.extensions=r,n.vertexColors=e.vertexColors,n.side=e.side,n.alphaTest=e.alphaTest,n.visible=e.visible,n},jt=function(e,a){var r={PARTICLE:e.particle,USE_PARTICLE_SIZEATTENUATION:e.particle&&e.particleSizeAttenuation,USE_DISPLACEMENTMAP:!!e.displacementMap,SLOPE_DEPTH_BIAS:t.shadowMapSlopeDepthBias,DEPTH_TEXTURES:t.shadowMapUseDepthTextures&&t.renderer.supportsDepthTextures()},i={};if(r.SLOPE_DEPTH_BIAS&&!r.DEPTH_TEXTURES&&(i.OES_standard_derivatives=!0),e.displacementMap)switch(e.displacementDirection){case THREE.DisplaceByNormal:r.DISPLACE_BY_NORMAL=!0;break;case THREE.DisplaceByPosition:r.DISPLACE_BY_POSITION=!0}if(e.morphTargets||e.skinning||e.alphaTest||e.particle||e.displacementMap||e.instances){var n=THREE.UniformsUtils.clone(St.uniforms),s=new THREE.ShaderMaterial({uniforms:n,vertexShader:St.vertexShader,fragmentShader:St.fragmentShader,blending:THREE.NoBlending,instances:e.instances});if(s.morphTargets=e.morphTargets,s.skinning=e.skinning,void 0!==a){var l=a.offset,d=a.repeat;n.offsetRepeat.value.set(l.data[0],l.data[1],d.data[0],d.data[1])}e.alphaTest&&e.map&&(n.alphaMap.value=e.map),e.displacementMap&&(n.displacementMap.value=e.displacementMap,n.displacementScaleBias.value.set(e.displacementScale,e.displacementBias)),e.particle&&(n.particleSize.value=e.particleSize,n.screenWidth.value=o,e.particleSizeAttenuation&&wt.push({material:s}))}else var s=At.clone();return t.shadowMapSlopeDepthBias&&(s.uniforms.slopeScale.value=t.shadowMapSlopeScale,s.uniforms.slopeBias.value=t.shadowMapSlopeBias,s.uniforms.slopeMax.value=t.shadowMapSlopeMax),s.defines=r,s.extensions=i,s.vertexColors=e.vertexColors,s.alphaTest=e.alphaTest,s.visible=e.visible,s.side=t.shadowMapCullFace===THREE.CullFaceFront?THREE.BackSide:THREE.FrontSide,s},qt=function(e){var t=e.properties,a=Kt(e.materials);t.combinedMaterials=a.combinedMaterials,t.colorMaterials=a.colorMaterials,t.depthMaterials=a.depthMaterials,t.normalDepthMaterials=a.normalDepthMaterials,t.forwardMaterials=e.materials,t.occluderMaterials=a.occluderMaterials,t.deferredInitialized=!0,t.deferredNeedsUpdate=!1},Yt=THREE.RendererUtils.getUvScale,Kt=function(e){for(var t={combinedMaterials:[],colorMaterials:[],depthMaterials:[],normalDepthMaterials:[],occluderMaterials:[]},a=0,r=e.length;r>a;a++){var i=e[a],o=Yt(i);if(h){void 0===Pt[i.id]&&(Pt[i.id]=kt(i,o));var n=Pt[i.id];t.combinedMaterials.push(n),void 0===Ft[i.id]&&(Ft[i.id]=zt(i,o));var s=Ft[i.id];t.occluderMaterials.push(s)}else{void 0===Lt[i.id]&&(Lt[i.id]=Ht(i,o));var l=Lt[i.id];t.colorMaterials.push(l),void 0===bt[i.id]&&(bt[i.id]=Wt(i,o));var d=bt[i.id];t.normalDepthMaterials.push(d),void 0===Ft[i.id]&&(Ft[i.id]=Wt(i,o));var s=Ft[i.id];t.occluderMaterials.push(s)}void 0===Et[i.id]&&(Et[i.id]=jt(i,o));var c=Et[i.id];t.depthMaterials.push(c)}return t},Zt=function(e){for(var t,a,r,i,o=e.properties,n=o.forwardMaterials,s=o.combinedMaterials,l=o.colorMaterials,d=o.depthMaterials,c=o.normalDepthMaterials,u=o.occluderMaterials,f=0,p=n.length;p>f;f++){var m=n[f],v=m.visible,g=Yt(m),S=d[f];S.visible=v,r=S.uniforms;var x=u[f];if(x.visible=v,i=x.uniforms,S.alphaTest=m.alphaTest,x.alphaTest=m.alphaTest,h){var G=s[f];G.visible=v,t=G.uniforms,G.alphaTest=m.alphaTest}else{var M=l[f],y=c[f];M.visible=v,y.visible=v,t=M.uniforms,a=y.uniforms,M.alphaTest=m.alphaTest,y.alphaTest=m.alphaTest}if(t.map.value=m.map,m instanceof THREE.PhongMaterial){var X=m.wrapAround?-1:1,_=m.shininess,w=m.color,D=m.specular,C=m.wrapRGB;t.diffuse.value.setRGBA(w,X),t.specular.value.setRGBA(D,_),t.wrapRGB.value.copy(C),t.lightMap.value=m.lightMap,t.specularMap.value=m.specularMap,t.glossMap.value=m.glossMap,t.bumpMap.value=m.bumpMap,t.normalMap.value=m.normalGlossMap?m.normalGlossMap:m.normalMap,t.displacementMap.value=m.displacementMap,t.parallaxScale.value=m.parallaxScale,t.displacementScaleBias.value.set(m.displacementScale,m.displacementBias),h?(t.bumpDetailMap.value=m.bumpDetailMap,t.normalDetailMap.value=m.normalDetailMap,t.detailRepeatScale.value.set(m.detailRepeat.x,m.detailRepeat.y,m.detailScale),t.normalScale.value.copy(m.normalScale),t.bumpScale.value=m.bumpScale,t.displacementNormalScale.value=m.displacementNormalScale):(a.bumpMap.value=m.bumpMap,a.normalMap.value=m.normalGlossMap?m.normalGlossMap:m.normalMap,a.bumpDetailMap.value=m.bumpDetailMap,a.normalDetailMap.value=m.normalDetailMap,a.detailRepeatScale.value.set(m.detailRepeat.x,m.detailRepeat.y,m.detailScale),a.normalScale.value.copy(m.normalScale),a.bumpScale.value=m.bumpScale,a.parallaxScale.value=m.parallaxScale,a.displacementMap.value=m.displacementMap,a.displacementScaleBias.value.set(m.displacementScale,m.displacementBias),a.displacementNormalScale.value=m.displacementNormalScale,m.alphaTest&&m.map&&(a.alphaMap.value=m.map)),m.alphaTest&&m.map&&(r.alphaMap.value=m.map,i.alphaMap.value=m.map),m.displacementMap&&(r.displacementMap.value=m.displacementMap,r.displacementScaleBias.value.set(m.displacementScale,m.displacementBias),i.displacementMap.value=m.displacementMap,i.displacementScaleBias.value.set(m.displacementScale,m.displacementBias))}else m instanceof THREE.EmissiveMaterial&&(m.alphaTest&&m.map&&(i.alphaMap.value=m.map),m.displacementMap&&(i.displacementMap.value=m.displacementMap,i.displacementScaleBias.value.set(m.displacementScale,m.displacementBias)));if(g){var A=g.offset,T=g.repeat;t.offsetRepeat.value.set(A.data[0],A.data[1],T.data[0],T.data[1]),r.offsetRepeat.value.set(A.data[0],A.data[1],T.data[0],T.data[1]),i.offsetRepeat.value.set(A.data[0],A.data[1],T.data[0],T.data[1]),h||a.offsetRepeat.value.set(A.data[0],A.data[1],T.data[0],T.data[1])}}o.deferredNeedsUpdate=!1},Qt=function(e){var a,r,i,o,n,s,l,d=e.__objects,h=e.__lights;for(a=0,r=d.length;r>a;a++)n=d[a],l=n.properties,n.materials&&(l.deferredInitialized?l.deferredNeedsUpdate&&Zt(n):qt(n));if(t.useMultiProxies)var c={polyLight:null};for(a=0,r=h.length;r>a;a++)if(s=h[a],!s.properties.deferredInitialized){if(s instanceof THREE.PointLight)i=new THREE.PointLightProxy(s,t),o=s.distance>0?it:rt;else if(s instanceof THREE.SphereLight)i=new THREE.SphereLightProxy(s,t),o=s.distance>0?it:rt;else if(s instanceof THREE.TubeLight)i=new THREE.TubeLightProxy(s,t),o=rt;else if(s instanceof THREE.SpotLight)i=new THREE.SpotLightProxy(s,t),o=rt;else if(s instanceof THREE.DirectionalLight)i=new THREE.DirectionalLightProxy(s,t),o=rt;else if(s instanceof THREE.HemisphereLight)i=new THREE.HemisphereLightProxy(s,t),o=rt;else if(s instanceof THREE.DayLight)i=new THREE.DayLightProxy(s,t),o=rt;else if(s instanceof THREE.DayLightCube)i=new THREE.DayLightCubeProxy(s,t),o=rt;else if(s instanceof THREE.AreaLight)i=new THREE.AreaLightProxy(s,t),o=rt;else if(s instanceof THREE.PolyLight)if(t.useMultiProxies){if(!c.polyLight){var u=new THREE.MultiPolyLightProxy(t);u.needsInit=!0,c.polyLight=u}c.polyLight.addLight(s),i=null,o=null}else i=new THREE.PolyLightProxy(s,t),o=rt;else s instanceof THREE.ImageLight&&(i=new THREE.ImageLightProxy(s,t),o=s.local?it:rt);i&&(o.add(i),Dt.push(i)),s.castShadow&&ot.properties.shadowCasters.push(s),s.properties.deferredInitialized=!0}if(t.useMultiProxies&&c.polyLight&&c.polyLight.needsInit){var u=c.polyLight;u.init(),rt.add(u),Dt.push(u),u.needsInit=!1}},Jt=function(e,t,a,r,i,o){for(var n=0,s=e.length;s>n;n++){var l=e[n];l.blending=t,t===THREE.CustomBlending&&(l.blendSrcColor=a,l.blendDstColor=r,l.blendSrcAlpha=i,l.blendDstAlpha=o)}},$t=function(e){for(var t=[],a=0,r=e.length;r>a;a++)t[a]=e[a].clone();return t},ea=function(){return h&&t.useDepthTexture?{TEXTURE_DEPTH:!0}:h&&!t.useDepthTexture?{RGBA_DEPTH:!0}:{FLOAT_DEPTH:!0}},ta=function(e){switch(e.TONEMAP_SIMPLE=!1,e.TONEMAP_LINEAR=!1,e.TONEMAP_REINHARD=!1,e.TONEMAP_FILMIC=!1,e.TONEMAP_FILMIC_2015=!1,e.TONEMAP_UNCHARTED=!1,e.TONEMAP_REINHARD_LUMA=!1,e.TONEMAP_REINHARD_WHITE=!1,e.TONEMAP_PHOTOGRAPHIC=!1,s){case THREE.SimpleOperator:e.TONEMAP_SIMPLE=!0;break;case THREE.LinearOperator:e.TONEMAP_LINEAR=!0;break;case THREE.ReinhardOperator:e.TONEMAP_REINHARD=!0;break;case THREE.FilmicOperator:e.TONEMAP_FILMIC=!0;break;case THREE.Filmic2015Operator:e.TONEMAP_FILMIC_2015=!0;break;case THREE.UnchartedOperator:e.TONEMAP_UNCHARTED=!0;break;case THREE.LumaReinhardOperator:e.TONEMAP_REINHARD_LUMA=!0;break;case THREE.WhitePreservingReinhardOperator:e.TONEMAP_REINHARD_WHITE=!0;break;case THREE.PhotographicOperator:e.TONEMAP_PHOTOGRAPHIC=!0}e.TONEMAPPING=!0},aa=function(e,t){na(e,t,!0,!1,!1)},ra=function(e,t){na(e,t,!1,!0,!1)},ia=function(e,t){na(e,t,!1,!1,!0)},oa=function(e,t){na(e,t,!0,!0,!0)},na=function(e,a,r,i,o){for(var n=e.__objects,s="occluderMaterials"===a,l=0,d=n.length;d>l;l++){var h=n[l];if(h.materials){var c=h.properties,u=c[a];if(u){h.materials=u;for(var f=!0,p=c.forwardMaterials,m=0,v=u.length;v>m;m++){var g=u[m],S=p[m],x=S.transparent,G=!x,M=!(x||S instanceof THREE.PhongMaterial),y=S.particle&&x,X=!!S.occluder;g.enabled=x&&i||G&&r||M&&o&&!s||X&&s,g.enabled=g.enabled&&(!y||!t.particlesOffscreen),g.enabled=g.enabled&&!(M&&!o),f=f&&!g.enabled}h.enabled=!f}}}},sa=function(e){la(e,4)},la=function(e,t){for(var a,r=e.__objects,i=0,o=r.length;o>i;i++)if(a=r[i],a.materials)if(a instanceof THREE.Particles||4===t&&!a.castShadow)for(var n=0,s=a.materials.length;s>n;n++){var l=a.materials[n];l.enabled=!1}else{var d,h=a.properties,c=h.forwardMaterials;if(0===t);else if(1===t);else if(2===t);else if(3===t);else if(4===t){if(void 0===h.forwardMaterialsTranslucency){var u=$t(c);Jt(u,THREE.AdditiveBlending),h.forwardMaterialsTranslucency=u}d=h.forwardMaterialsTranslucency,da(d)}if(t>0)for(var n=0,s=c.length;s>n;n++){var f=c[n],p=d[n];p.additiveFactor=f.additiveFactor}a.enabled=!0,a.materials=d}},da=function(e){for(var t=0,a=e.length;a>t;t++){{var r=e[t];r.uniforms}if(!r.particle&&r.transparent){if(r.enabled=!0,!r.defines){var i=ea();i.TRANSLUCENT_PASS=!0,r.defines=i}}else r.enabled=!1}},ha=function(e){ma(e,0)},ca=function(e){ma(e,1)},ua=function(e){ma(e,2)},fa=function(e){ma(e,3)},pa=function(e){ma(e,4)},ma=function(e,t){for(var a,r=e.__objects,i=0,o=r.length;o>i;i++)if(a=r[i],a.materials)if(a instanceof THREE.Particles&&(4!==t||a.castShadow)){var n,s=a.properties,l=s.forwardMaterials;if(0===t)n=l,va(n,!1);else if(1===t){if(void 0===s.forwardMaterialsMRT){var d=$t(l);Jt(d,THREE.CustomBlending,THREE.OneFactor,THREE.OneFactor,THREE.ZeroFactor,THREE.OneMinusSrcAlphaFactor),s.forwardMaterialsMRT=d}n=s.forwardMaterialsMRT,va(n,!1)}else if(2===t){if(void 0===s.forwardMaterialsAccumulation){var h=$t(l);Jt(h,THREE.CustomBlending,THREE.OneFactor,THREE.OneFactor,THREE.ZeroFactor,THREE.OneMinusSrcAlphaFactor),s.forwardMaterialsAccumulation=h}n=s.forwardMaterialsAccumulation,va(n,!0)}else if(3===t){if(void 0===s.forwardMaterialsRevealage){var c=$t(l);Jt(c,THREE.CustomBlending,THREE.OneFactor,THREE.OneFactor,THREE.ZeroFactor,THREE.OneMinusSrcAlphaFactor),s.forwardMaterialsRevealage=c}n=s.forwardMaterialsRevealage,va(n,!1)}else if(4===t){if(void 0===s.forwardMaterialsTranslucency){var u=$t(l);Jt(u,THREE.AdditiveBlending),s.forwardMaterialsTranslucency=u}n=s.forwardMaterialsTranslucency,ga(n)}if(t>0)for(var f=0,p=l.length;p>f;f++){var m=l[f],v=n[f];v.time=m.time,v.additiveFactor=m.additiveFactor}a.enabled=!0,a.materials=n}else for(var f=0,p=a.materials.length;p>f;f++){var g=a.materials[f];g.enabled=!1}},va=function(e,a){for(var r=0,i=e.length;i>r;r++){var s=e[r],l=s.uniforms;if(s.particle&&s.transparent){if(s.enabled=!0,!s.defines){var d=ea();t.particlesOffscreen&&(d.OFFSCREEN_PARTICLES=!0),t.fogEnabled&&(d.FOG_ENABLED=!0),s.lights&&(h||a)&&(d.USE_LIGHTS=!0),t.particlesOit&&(d.OIT_PARTICLES=!0,h?(d.OIT_MRT_PASS=!0,d.MRT_OUTPUT=!0):a?d.OIT_ACCUMULATION_PASS=!0:d.OIT_REVEALAGE_PASS=!0),s.defines=d}s.extensions||(s.extensions={}),t.particlesOit&&h&&(s.extensions.WEBGL_draw_buffers=!0),l&&(l.tDepth.value=h?S.renderTarget2.colorTexture[4]:G.renderTarget2,t.fogEnabled&&(l.fogColor.value.copy(t.fogColor),l.fogStrength.value=t.fogStrength,l.fogStart.value=t.fogStart),l.viewSize.value.set(o*t.particlesOffscreenScale,n*t.particlesOffscreenScale))}else s.enabled=!1}},ga=function(e){for(var t=0,a=e.length;a>t;t++){{var r=e[t];r.uniforms}if(r.particle&&r.transparent){if(r.enabled=!0,!r.defines){var i=ea();i.TRANSLUCENT_PASS=!0,r.defines=i}}else r.enabled=!1}},Sa=function(e,a,r){for(var i=0,o=e.length;o>i;i++){var n=e[i],s=n.uniforms,l=a[i].transparent,d=!!a[i].forceShadow;
n.enabled=!l||d,r?(n.polygonOffset=!0,n.polygonOffsetFactor=1.5,n.polygonOffsetUnits=10,s.depthTextureBias.value=t.shadowMapDepthTextureBias):(s.slopeScale.value=t.shadowMapSlopeScale,s.slopeBias.value=t.shadowMapSlopeBias,s.slopeMax.value=t.shadowMapSlopeMax),n.side=t.shadowMapCullFace===THREE.CullFaceFront?THREE.BackSide:t.shadowMapCullFace===THREE.CullFaceBack?THREE.FrontSide:THREE.DoubleSide}},xa=function(e,t){for(var a,r=e.__objects,i=0,o=r.length;o>i;i++)if(a=r[i],a.materials)if(a.castShadow){var n=a.properties.depthMaterials;a.materials=n,a.enabled=!0,Sa(n,a.properties.forwardMaterials,t)}else{for(var s=0,l=a.materials.length;l>s;s++){var d=a.materials[s];d.enabled=!1}a.enabled=!1}},Ga=function(e,t){e.position.copy(t.matrixWorld.getPosition()),t.target&&e.lookAt(t.target.matrixWorld.getPosition()),e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld)},Ma=function(e,t){e.near=t.shadowCameraNear,e.far=t.shadowCameraFar,t instanceof THREE.PointLight||t instanceof THREE.SphereLight?e.fov=90:t instanceof THREE.SpotLight||t instanceof THREE.AreaLight&&!t.shadowCameraOrtho||t instanceof THREE.PolyLight&&!t.shadowCameraOrtho?e.fov=t.shadowCameraFov:(t instanceof THREE.DirectionalLight||t instanceof THREE.DayLight||t instanceof THREE.DayLightCube||t instanceof THREE.AreaLight&&t.shadowCameraOrtho||t instanceof THREE.PolyLight&&t.shadowCameraOrtho)&&(e.left=t.shadowCameraLeft,e.right=t.shadowCameraRight,e.top=t.shadowCameraTop,e.bottom=t.shadowCameraBottom),e.updateProjectionMatrix()},ya=function(e,t,a,r){e.near=t.shadowCameraNear,e.far=t.shadowCameraFar;var i=t.shadowCascadeNearZ[a],o=t.shadowCascadeFarZ[a],n=t.properties.pointsFrustum[a];n[0].setZ(i),n[1].setZ(i),n[2].setZ(i),n[3].setZ(i),n[4].setZ(o),n[5].setZ(o),n[6].setZ(o),n[7].setZ(o);var s=t.properties.pointsWorld[a];ct.set(1/0,1/0,1/0),ut.set(-1/0,-1/0,-1/0);for(var l=ct.data,d=ut.data,h=0;8>h;h++){var c=s[h],u=c.data;c.copy(n[h]),ht.unprojectVector(c,r),e.matrixWorldInverse.multiplyVector3(c),u[0]<l[0]&&(l[0]=u[0]),u[0]>d[0]&&(d[0]=u[0]),u[1]<l[1]&&(l[1]=u[1]),u[1]>d[1]&&(d[1]=u[1]),u[2]<l[2]&&(l[2]=u[2]),u[2]>d[2]&&(d[2]=u[2])}e.left=l[0],e.right=d[0],e.top=d[1],e.bottom=l[1],e.updateProjectionMatrix()},Xa=function(e,a,r){var i=t.renderer,o=a.projectionMatrix.elements,n=o[10];o[10]*=1+t.shadowMapProjectionBias,i.render(e,a,r,!0),o[10]=n},_a=function(e,a){var r=t.renderer;r.autoClearDepth=!0,r.autoClearStencil=!1,r.autoUpdateScene=!1;var i=t.shadowMapUseDepthTextures&&r.supportsDepthTextures();i?(r.autoClearColor=!1,dt.colorMask(!1,!1,!1,!1)):(Xt.copy(r.getClearColor()),_t=r.getClearAlpha(),r.setClearColor(pt,1)),xa(e,i);for(var o=e.properties.shadowCasters,n=0,s=o.length;s>n;n++){var l=o[n];if(l instanceof THREE.SpotLight||l instanceof THREE.AreaLight||l instanceof THREE.PolyLight){var d=l.properties.shadowMap,h=l.properties.shadowCamera;Ga(h,l),Ma(h,l),Xa(e,h,d)}else if(l instanceof THREE.DirectionalLight||l instanceof THREE.DayLight||l instanceof THREE.DayLightCube){for(var c=0;c<l.properties.cascadeCount;c++)if(!(c>t.shadowMapCascadeUpdateThreshold&&Rt%t.shadowMapCascadeUpdateModulo!==0)){var d=l.properties.shadowMap[c],h=l.properties.shadowCamera[c];Ga(h,l),l.shadowCascade?ya(h,l,c,a):Ma(h,l),Xa(e,h,d)}}else if(l instanceof THREE.PointLight||l instanceof THREE.SphereLight)for(var c=0;6>c;c++){var d=l.properties.shadowMap[c],h=l.properties.shadowCamera[c];Ga(h,l),Ma(h,l),Xa(e,h,d)}}i?(r.autoClearColor=!0,dt.colorMask(!0,!0,!0,!0)):r.setClearColor(Xt,_t)},wa=function(e,t){if(t.properties.gyro)var a=t.properties.nonGyroLight,r=t.properties.nonGyroTarget;else var a=t,r=t.target;e.position.copy(a.matrixWorld.getPosition()),t.target&&e.lookAt(r.matrixWorld.getPosition()),e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld)},Da=function(e,t){e.near=t.textureCameraNear,e.far=t.textureCameraFar,t instanceof THREE.PointLight||t instanceof THREE.SphereLight?e.fov=90:t instanceof THREE.SpotLight||t instanceof THREE.AreaLight?e.fov=t.textureCameraFov:(t instanceof THREE.DirectionalLight||t instanceof THREE.DayLight||t instanceof THREE.DayLightCube||t instanceof THREE.AreaLight)&&(e.left=t.textureCameraLeft,e.right=t.textureCameraRight,e.top=t.textureCameraTop,e.bottom=t.textureCameraBottom),e.updateProjectionMatrix()},Ca=function(e){var a=t.renderer;a.autoClearDepth=!1,a.autoClearStencil=!1,a.autoUpdateScene=!1,Xt.copy(a.getClearColor()),_t=a.getClearAlpha(),a.setClearColor(ft,0);var r=e.properties.shadowCasters;if(t.particlesShadows){pa(e);for(var i=0,o=r.length;o>i;i++){var n=r[i];if(n.castTransparentShadow&&(n instanceof THREE.DirectionalLight||n instanceof THREE.DayLight||n instanceof THREE.DayLightCube||n instanceof THREE.SpotLight)){var s=n.texture,l=n.properties.textureCamera;wa(l,n),Da(l,n),a.render(e,l,s,!0)}}}sa(e);for(var i=0,o=r.length;o>i;i++){var n=r[i];if(n.castTransparentShadow&&(n instanceof THREE.DirectionalLight||n instanceof THREE.DayLight||n instanceof THREE.DayLightCube||n instanceof THREE.SpotLight)){var s=n.texture,l=n.properties.textureCamera;t.particlesShadows&&(wa(l,n),Da(l,n)),a.render(e,l,s,!t.particlesShadows)}}a.setClearColor(Xt,_t)},Aa=function(){var e=t.renderer,a=e.shadowMapUseDepthTextures;e.shadowMapEnabled=t.shadowMapEnabled,e.shadowMapAutoUpdate=!1,e.shadowMapUseDepthTextures=!0,dt.depthFunc(dt.LEQUAL),y.render(),e.shadowMapUseDepthTextures=a},Ta=function(){var e=t.renderer;e.shadowMapEnabled=!1,e.autoClearDepth=!1,dt.depthFunc(dt.LEQUAL),T.render()},Pa=function(e,a){st.enabled=!1;var r=e.properties.mirrors;if(void 0!==r){var i=r.length;if(0!==i){var s=t.renderer;s.autoClearDepth=!0,dt.depthFunc(dt.LEQUAL),oa(e,"forwardMaterials");var l=s.shadowMapUseDepthTextures;s.shadowMapEnabled=t.shadowMapEnabled,s.shadowMapAutoUpdate=!1,s.shadowMapUseDepthTextures=!0;for(var d=h?S.renderTarget2.colorTexture[4]:G.renderTarget2,c=0;i>c;c++){var u=r[c],f=u.material.uniforms,p=u.material.defines;f.refractionSampler.value=nt,f.refractionDepthSampler.value=d,f.matProjInverse.value=a.projectionMatrixInverse,f.matViewInverse.value=a.matrixWorld,f.viewSize.value.set(o,n),p.USE_MRT=h,u.properties.secondaryMirror?u.renderWithMirror(e,a,u.properties.secondaryMirror):u.render(e,a)}st.enabled=!0,s.autoClearDepth=!1,s.shadowMapUseDepthTextures=l}}},La=function(e){t.particlesOit?h?(ca(e),X.render()):(ua(e),X.render(),fa(e),_.render()):(ha(e),X.render())},ba=function(){var e=t.renderer;e.autoClearDepth=!0,dt.depthFunc(dt.LEQUAL),S.render()},Ea=function(){var e=t.renderer;e.autoClearDepth=!0,dt.depthFunc(dt.LEQUAL),G.render()},Fa=function(){var e=t.renderer;e.autoClearDepth=!0,e.autoUpdateView=!1,x.render()},Ra=function(e){e.projectionMatrixInverse.getInverse(e.projectionMatrix);for(var t=0,a=it.children.length;a>t;t++){var r=it.children[t];r.update(e)}for(var t=0,a=rt.children.length;a>t;t++){var r=rt.children[t];r.update(e)}},Ua=function(e,o){var n=t.renderer;if(n.autoUpdateView=!0,t.shadowMapEnabled&&t.shadowMapAutoUpdate&&_a(e,o),t.transparentShadows&&t.shadowMapAutoUpdate&&Ca(e,o),t.ssaoEnabled){var s=o.far+o.near,l=o.far-o.near,d=2*o.near;O.uniforms.cameraCoef.value.set(s,l,d),z.uniforms.cameraCoef.value.set(s,l,d),H.uniforms.cameraCoef.value.set(s,l,d),O.uniforms.radius.value=i*t.ssaoRadius*15,z.uniforms.h.value=4*t.ssaoRadius/a,H.uniforms.v.value=2*t.ssaoRadius/r,D.render(),C.render()}n.autoClearDepth=!1,n.autoUpdateScene=!0,n.autoUpdateObjects=!0,Ra(o),dt.depthFunc(dt.GEQUAL),M.render()},Ia=function(){I.enabled=!0,V.enabled=t.dofEnabled,B.enabled=l,t.taaBeforeDOF||(Y.enabled=c,K.enabled=c),k.enabled=!1,I.renderToScreen=!1,V.renderToScreen=!1,B.renderToScreen=!1,t.taaBeforeDOF||(Y.renderToScreen=!1,K.renderToScreen=!1),k.renderToScreen=!1,l&&t.dofEnabled?t.dofFancy?(k.enabled=!0,k.renderToScreen=!0):c?(k.enabled=!0,k.renderToScreen=!0):V.renderToScreen=!0:l&&!t.dofEnabled?(k.enabled=!0,k.renderToScreen=!0):!l&&t.dofEnabled?t.dofFancy?c?(k.enabled=!0,k.renderToScreen=!0):I.renderToScreen=!0:c?(k.enabled=!0,k.renderToScreen=!0):V.renderToScreen=!0:c?(k.enabled=!0,k.renderToScreen=!0):I.renderToScreen=!0},Na=function(){var e=I.material,t=e.defines;if(ta(t),e.needsUpdate=!0,q.material.needsUpdate=!0,c){var a=$.defines,r=et.defines;ta(a),ta(r),$.needsUpdate=!0,et.needsUpdate=!0}},Ba=function(){var e=I.material,t=e.defines;t.DITHERING_ENABLED=d,e.needsUpdate=!0},Oa=function(e){var t={isES3:f,hasFloatsNearest:e.supportsFloatTextures(),hasFloatsLinear:e.supportsFloatTexturesLinear(),hasHalfFloatsNearest:e.supportsHalfFloatTextures(),hasHalfFloatsLinear:e.supportsHalfFloatTexturesLinear(),hasRGBFloatRenderTarget:e.supportsRGBFloatRenderTarget(),hasRGBHalfFloatRenderTarget:e.supportsRGBHalfFloatRenderTarget(),hasRGBUbyteRenderTarget:e.supportsRGBUnsignedByteRenderTarget()};return t},Va=function(){if("webgl2"===u)var e={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBA32F,type:THREE.FloatType},i={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBA32F,type:THREE.FloatType},s={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBA16F,type:THREE.HalfFloatType2},l={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBA16F,type:THREE.HalfFloatType2},c={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBFormat,internalFormat:THREE.RGBFormat,type:THREE.UnsignedByteType};else var e={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBAFormat,type:THREE.FloatType},i={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBAFormat,type:THREE.FloatType},s={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBAFormat,type:THREE.HalfFloatType1},l={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:THREE.RGBAFormat,type:THREE.HalfFloatType1},c={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBFormat,internalFormat:THREE.RGBFormat,type:THREE.UnsignedByteType};var f,p=Oa(t.renderer);if(p.hasHalfFloatsLinear?f=s:p.hasHalfFloatsNearest?f=l:p.hasFloatsLinear?f=e:p.hasFloatsNearest?f=i:console.error("THREE.DeferredRenderer: missing float or half float render targets support"),p.hasRGBUbyteRenderTarget||(c.format=THREE.RGBAFormat,c.internalFormat=THREE.RGBAFormat),h){var m=t.useDepthTexture?4:5,v={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,internalFormat:THREE.RGBAFormat,type:THREE.UnsignedByteType,stencilBuffer:!1},g=new THREE.RenderTargetArray(o,n,m,t.useDepthTexture,v);g.generateMipmaps=!1,P=new THREE.RenderPass,P.clear=!0,P.clearColor=pt,P.clearAlpha=1,S=new THREE.EffectComposer(t.renderer,g),S.addPass(P);var rt=S.renderTarget2,it=rt.colorTexture[3],ot=t.useDepthTexture?rt.depthTexture:rt.colorTexture[4]}else{var lt=new THREE.RenderTarget(o,n,i);lt.generateMipmaps=!1;var dt=new THREE.RenderTarget(o,n,i);dt.generateMipmaps=!1,b=new THREE.RenderPass,b.clear=!0,b.clearColor=pt,b.clearAlpha=1,G=new THREE.EffectComposer(t.renderer,dt),G.addPass(b),L=new THREE.RenderPass,L.clear=!0,x=new THREE.EffectComposer(t.renderer,lt),x.addPass(L),x.renderTarget2.shareDepthFrom=G.renderTarget2}var ht=Math.max(1,Math.floor(o*t.ssaoScale)),ct=Math.max(1,Math.floor(n*t.ssaoScale)),ut=new THREE.RenderTarget(ht,ct,c),mt=new THREE.RenderTarget(o,n,c);ut.generateMipmaps=!1,mt.generateMipmaps=!1,ut.depthBuffer=!1,ut.stencilBuffer=!1,mt.depthBuffer=!1,mt.stencilBuffer=!1,O=new THREE.ShaderPass(THREE.SSAOShader),O.clear=!1,O.uniforms.size.value.set(ht,ct),O.uniforms.aoClamp.value=1.5,z=new THREE.ShaderPass(THREE.SSAOBilateralHorizontalBlurShader),H=new THREE.ShaderPass(THREE.SSAOBilateralVerticalBlurShader),z.uniforms.h.value=4*t.ssaoRadius/a,H.uniforms.v.value=2*t.ssaoRadius/r,O.material.blending=THREE.NoBlending,O.material.depthTest=!1,O.material.depthWrite=!1,z.material.blending=THREE.NoBlending,z.material.depthTest=!1,z.material.depthWrite=!1,H.material.blending=THREE.NoBlending,H.material.depthTest=!1,H.material.depthWrite=!1,h?(O.uniforms.tDepth.value=ot,z.uniforms.tDepth.value=ot,H.uniforms.tDepth.value=ot,z.uniforms.tNormal.value=it,H.uniforms.tNormal.value=it):(O.uniforms.tDepth.value=G.renderTarget2,z.uniforms.tDepth.value=G.renderTarget2,H.uniforms.tDepth.value=G.renderTarget2);var vt=ea(),gt=t.ssaoSamples;vt.PREBAKED_SAMPLES=!0,vt.NUM_PREBAKED_SAMPLES=gt,O.uniforms.samplePoints.value=THREE.Math.generatePoissonDiscSamples(gt),O.material.defines=vt,z.material.defines=vt,H.material.defines=vt,D=new THREE.EffectComposer(t.renderer,ut),D.addPass(O),z.textureID="dummy",z.uniforms.tDiffuse.value=D.renderTarget1,C=new THREE.EffectComposer(t.renderer,mt),C.addPass(z),C.addPass(H);var St=new THREE.RenderTarget(o,n,f),xt=new THREE.RenderTarget(o,n,c);St.generateMipmaps=!1,xt.generateMipmaps=!1,xt.depthBuffer=!1,xt.stencilBuffer=!1,E=new THREE.RenderPass,E.clear=!0,F=new THREE.RenderPass,F.clear=!1,nt=new THREE.RenderTarget(o,n,c),st=new THREE.SavePass(nt),st.material.depthTest=!1,st.enabled=!1,M=new THREE.EffectComposer(t.renderer,St),M.addPass(E),M.addPass(F),M.addPass(st),M.renderTarget2.shareDepthFrom=h?S.renderTarget2:G.renderTarget2,R=new THREE.RenderPass,R.clear=!1,y=new THREE.EffectComposer(t.renderer,St),y.addPass(R),y.renderTarget1=M.renderTarget1,y.renderTarget2=M.renderTarget2,y.renderTarget2.shareDepthFrom=h?S.renderTarget2:G.renderTarget2,N=new THREE.RenderPass,N.clear=!1;var Gt=h?ot:G.renderTarget2;Gt.generateMipmaps=!1,T=new THREE.EffectComposer(t.renderer,Gt),T.addPass(N),T.renderTarget2=Gt,h&&(T.renderTarget2.shareDepthFrom=S.renderTarget2,T.renderTarget2.needsUpdate=!0),U=new THREE.RenderPass,U.clear=!0,U.clearColor=ft,U.clearAlpha=1;var yt=Math.max(1,Math.floor(o*t.particlesOffscreenScale)),Xt=Math.max(1,Math.floor(n*t.particlesOffscreenScale));if(t.particlesOit)if(h){var _t=new THREE.RenderTargetArray(yt,Xt,2,!1,f);_t.generateMipmaps=!1,X=new THREE.EffectComposer(t.renderer,_t),X.addPass(U)}else{var Dt=new THREE.RenderTarget(yt,Xt,f),Ct=new THREE.RenderTarget(yt,Xt,f);Dt.generateMipmaps=!1,Ct.generateMipmaps=!1,X=new THREE.EffectComposer(t.renderer,Dt),X.addPass(U),_=new THREE.EffectComposer(t.renderer,Ct),_.addPass(U)}else{var At=new THREE.RenderTarget(yt,Xt,f);At.generateMipmaps=!1,X=new THREE.EffectComposer(t.renderer,At),X.addPass(U)}var Tt=Math.max(1,Math.floor(o*t.bloomScale)),Pt=Math.max(1,Math.floor(n*t.bloomScale)),Lt=new THREE.RenderTarget(Tt,Pt,c);Lt.generateMipmaps=!1,Lt.depthBuffer=!1,Lt.stencilBuffer=!1,W=new THREE.ShaderPass(THREE.BloomHorizontalBlurShader),j=new THREE.ShaderPass(THREE.BloomVerticalBlurShader),q=new THREE.ShaderPass(THREE.BloomFilterShader),q.uniforms.tSource.value=M.renderTarget2,q.uniforms.threshold.value=t.bloomThreshold,q.uniforms.brightness.value=t.brightness,q.uniforms.whitePoint.value=t.whitePoint,W.uniforms.h.value=1/Tt,j.uniforms.v.value=1/Pt,W.material.blending=THREE.NoBlending,W.material.depthTest=!1,W.material.depthWrite=!1,j.material.blending=THREE.NoBlending,j.material.depthTest=!1,j.material.depthWrite=!1,q.material.blending=THREE.NoBlending,q.material.depthTest=!1,q.material.depthWrite=!1,A=new THREE.EffectComposer(t.renderer,Lt),A.addPass(q),A.addPass(W),A.addPass(j),I=new THREE.ShaderPass(Mt),I.uniforms.brightness.value=t.brightness,I.uniforms.whitePoint.value=t.whitePoint,I.uniforms.samplerLight.value=M.renderTarget2,I.uniforms.samplerBloom.value=A.renderTarget1,I.uniforms.bloomStrength.value=t.bloomStrength,t.particlesOit?h?(I.uniforms.samplerParticles.value=X.renderTarget2.colorTexture[0],I.uniforms.samplerParticlesRevealage.value=X.renderTarget2.colorTexture[1]):(I.uniforms.samplerParticles.value=X.renderTarget2,I.uniforms.samplerParticlesRevealage.value=_.renderTarget2):I.uniforms.samplerParticles.value=X.renderTarget2;var bt=ea();if(t.fogEnabled&&(bt.FOG_ENABLED=!0,I.uniforms.samplerDepth.value=h?ot:G.renderTarget2,wt.push({material:I.material,depth:"samplerDepth"})),d&&(bt.DITHERING_ENABLED=!0),I.material.blending=THREE.NoBlending,I.material.depthTest=!1,I.material.depthWrite=!1,I.clear=!0,ta(bt),bt.BLOOM_ENABLED=t.bloomEnabled,bt.OFFSCREEN_PARTICLES=t.particlesOffscreen,bt.PARTICLE_OIT=t.particlesOit,bt.USE_MRT=h,bt.FANCY_DOF=t.dofFancy&&t.dofEnabled,I.material.defines=bt,q.material.defines=bt,B=new THREE.ShaderPass(THREE.FXAAShader),B.material.blending=THREE.NoBlending,B.material.depthTest=!1,B.material.depthWrite=!1,B.uniforms.resolution.value.set(1/o,1/n),t.taaBeforeDOF){J=St.clone(),Q=St.clone(),Z=St.clone(),tt=new THREE.ShaderMaterial({vertexShader:THREE.TAAShader.vertexShader,fragmentShader:THREE.TAAShader.fragmentShader,uniforms:THREE.UniformsUtils.clone(THREE.TAAShader.uniforms),blending:THREE.NoBlending}),$=new THREE.ShaderMaterial({vertexShader:THREE.TonemapShader.vertexShader,fragmentShader:THREE.TonemapShader.fragmentShader,uniforms:THREE.UniformsUtils.clone(THREE.TonemapShader.uniforms),blending:THREE.NoBlending}),et=new THREE.ShaderMaterial({vertexShader:THREE.TonemapInverseShader.vertexShader,fragmentShader:THREE.TonemapInverseShader.fragmentShader,uniforms:THREE.UniformsUtils.clone(THREE.TonemapInverseShader.uniforms),blending:THREE.NoBlending}),at=new THREE.ShaderMaterial({vertexShader:THREE.CopyShader.vertexShader,fragmentShader:THREE.CopyShader.fragmentShader,uniforms:THREE.UniformsUtils.clone(THREE.CopyShader.uniforms),blending:THREE.NoBlending});var Et=ea();Et.USE_MRT=h,tt.defines=Et;var Ft={};ta(Ft),$.defines=Ft,et.defines=Ft}else{var Rt=xt.clone();K=new THREE.SavePass(Rt),Y=new THREE.ShaderPass(THREE.TAAShader),Y.uniforms.tDiffuseLast.value=Rt,Y.uniforms.tDepth.value=Gt,Y.uniforms.feedbackMin.value=.88,Y.uniforms.feedbackMax.value=.97;var Et=ea();Et.USE_MRT=h,Y.material.defines=Et}if(t.dofFancy){var Ut=.75;V=new THREE.FancyDepthOfFieldPass(o,n,Ut,p)}else V=new THREE.DepthOfFieldPass(1024,512,p);V.defines=ea(),t.dofDebug&&(V.defines.DOF_DEBUG=1),t.dofPhysical&&(V.defines.DOF_PHYSICAL=1),V.depthInput=h?ot:G.renderTarget2,V.colorInput=M.renderTarget2,V.autoFocus=t.dofAutofocus,V.autoFocusPoint=t.dofAutofocusPoint,V.focusDistance=t.dofFocusDistance,V.focusRampStart=t.dofFocusWidth,V.focusRampEnd=t.dofFocusWidth+t.dofFocusRampWidth,V.maxBlur=t.dofMaxBlur,t.dofFancy&&t.dofPhysical&&(V.lensFstop=t.dofLensFstop,V.lensFocalLength=t.dofLensFocalLength,V.lensBlurScale=t.dofLensBlurScale,t.fogEnabled&&(V.defines.FOG_ENABLED=!0)),k=new THREE.ShaderPass(THREE.CopyShader),k.renderToScreen=!0,t.dofFancy?(I.uniforms.samplerBlur.value=V.renderTargetBlurPass2,I.uniforms.samplerBlurAmount.value=V.renderTargetBlurAmount,w=new THREE.EffectComposer(t.renderer,xt),w.addPass(V),w.addPass(I),w.addPass(B),t.taaBeforeDOF||(w.addPass(Y),w.addPass(K)),w.addPass(k)):(w=new THREE.EffectComposer(t.renderer,xt),w.addPass(I),w.addPass(B),w.addPass(V),t.taaBeforeDOF||(w.addPass(Y),w.addPass(K)),w.addPass(k)),Ia()};this.getRenderingBackend=function(){return u},this.setAntialias=function(e){l=e,Ia()},this.getAntialias=function(){return l},this.setDOF=function(e){this.dofEnabled=e,Ia();var a=I.material,r=a.defines;r.FANCY_DOF=t.dofFancy&&t.dofEnabled,a.needsUpdate=!0},this.setTonemapping=function(e){s=e,lt&&Na()},this.setDither=function(e){d=e,lt&&Ba()},this.setSSAOSamples=function(e){this.ssaoSamples=e;var t=ea();t.PREBAKED_SAMPLES=!0,t.NUM_PREBAKED_SAMPLES=e,O.uniforms.samplePoints.value=THREE.Math.generatePoissonDiscSamples(e),O.material.defines=t,O.material.needsUpdate=!0},this.addEffect=function(e,a){if(e.material&&e.uniforms&&(e.properties={},a&&(a.normalDepthUniform||a.colorUniform||a.depthUniform))){var r={material:e.material,normalDepth:a.normalDepthUniform,color:a.colorUniform,depth:a.depthUniform};wt.push(r),e.properties.normalDepthUniform=a.normalDepthUniform,e.properties.colorUniform=a.colorUniform,e.properties.depthUniform=a.depthUniform,(a.normalDepthUniform||a.depthUniform)&&(e.material.defines=ea())}if(w){var i=t.dofFancy?-2:-3;w.insertPass(e,i)}else yt.push(e)},this.setScale=function(e){if(i=e,this.renderer.setScale(i),o=Math.max(1,Math.floor(i*a)),n=Math.max(1,Math.floor(i*r)),o=Math.max(1,Math.floor(o*m)),n=Math.max(1,Math.floor(n*m)),lt){var s=Math.max(1,Math.floor(o*t.ssaoScale)),l=Math.max(1,Math.floor(n*t.ssaoScale)),d=Math.max(1,Math.floor(o*t.bloomScale)),c=Math.max(1,Math.floor(n*t.bloomScale)),u=Math.max(1,Math.floor(o*t.particlesOffscreenScale)),f=Math.max(1,Math.floor(n*t.particlesOffscreenScale));M.setSize(o,n),w.setSize(o,n),X.setSize(u,f),_&&_.setSize(u,f),D.setSize(s,l),C.setSize(o,n),A.setSize(d,c),h?S.setSize(o,n):(G.setSize(o,n),x.setSize(o,n));for(var p=0,v=wt.length;v>p;p++){var g=wt[p],y=g.material,T=y.uniforms;T.viewSize&&T.viewSize.value.set(o,n),T.screenWidth&&(T.screenWidth.value=o)}for(var p=0,v=Dt.length;v>p;p++){var P=Dt[p];P.resize(o,n)}B.uniforms.resolution.value.set(1/o,1/n),V.resize(o,n),O.uniforms.size.value.set(s,l),W.uniforms.h.value=1/d,j.uniforms.v.value=1/c,t.taaBeforeDOF?(J.setSize(o,n),Q.setSize(o,n),Z.setSize(o,n)):K.renderTarget.setSize(o,n)}},this.setSize=function(e,t){a=e,r=t,this.renderer.setSize(a,r),this.setScale(i)},this.getCombinedTarget=function(){return S.renderTarget2},this.getColorTarget=function(){return x.renderTarget2},this.getNormalDepthTarget=function(){return G.renderTarget2},this.getSSAOTarget=function(){return C.renderTarget2},this.getUseMultipleRenderTargets=function(){return h},this.prepareForwardPass=function(e){e.properties.deferredInitialized&&oa(e,"forwardMaterials")},this.renderCube=function(e,t,a){e.properties.deferredInitialized&&aa(e,"forwardMaterials"),this.renderer.autoClear=!0,this.renderer.renderCube(e,t,a),this.renderer.autoClear=!1},this.render=function(e,a){if(!lt){Va();for(var r=t.dofFancy?-2:-3,i=0,s=yt.length;s>i;i++){var l=yt[i],d=l.properties;if(d){var u,f,p,m=d.normalDepthUniform,v=d.colorUniform,g=d.depthUniform;if(h){var y=S.renderTarget2;p=t.useDepthTexture?y.depthTexture:y.colorTexture[4],f=y.colorTexture[0]}else u=G.renderTarget2,f=x.renderTarget2,p=G.renderTarget2;m&&(l.uniforms[m].value=u),v&&(l.uniforms[v].value=f),g&&(l.uniforms[g].value=p)}w.insertPass(l,r)}lt=!0}var X=t.renderer,_=e.properties;if(_.deferredInitialized||(_.lightSceneGeometry=new THREE.Scene,_.lightSceneFullscreen=new THREE.Scene,_.shadowCasters=[],_.deferredInitialized=!0),it=_.lightSceneGeometry,rt=_.lightSceneFullscreen,ot=e,c){var D=It,C=D[2*Ut],T=D[2*Ut+1],B=o,O=n;a.jitter(C,T,B,O),Nt.z=Nt.x,Nt.w=Nt.y,Nt.x=C,Nt.y=T,Ut=(Ut+1)%(.5*D.length)}if(h?(P.camera=a,P.scene=e):(L.camera=a,L.scene=e,b.camera=a,b.scene=e),F.camera=a,F.scene=it,E.camera=THREE.EffectComposer.camera,E.scene=rt,R.camera=a,R.scene=e,N.camera=a,N.scene=e,U.camera=a,U.scene=e,X.autoUpdateObjects=!1,X.initWebGLObjects(e),X.initWebGLObjects(THREE.EffectComposer.scene),Qt(e),X.autoUpdateScene=!1,e.updateMatrixWorld(),E.clear=!0,h?(P.clear=!0,aa(e,"combinedMaterials"),ba(e,a),Ua(e,a),P.clear=!1):(L.clear=!0,b.clear=!0,aa(e,"normalDepthMaterials"),Ea(e,a),aa(e,"colorMaterials"),Fa(e,a),Ua(e,a),L.clear=!1,b.clear=!1),E.clear=!1,Pa(e,a),X.autoUpdateScene=!1,X.autoUpdateObjects=!1,ia(e,"forwardMaterials"),Aa(e,a),ra(e,"forwardMaterials"),Aa(e,a),t.particlesOffscreen&&La(e,a),t.occludersEnabled&&(ia(e,"occluderMaterials"),Ta(e,a),ia(e,"forwardMaterials")),t.bloomEnabled&&(q.uniforms.threshold.value=t.bloomThreshold,q.uniforms.brightness.value=t.brightness,q.uniforms.whitePoint.value=t.whitePoint,A.render()),X.autoUpdateObjects=!0,X.autoUpdateScene=!0,X.autoClearDepth=!0,dt.depthFunc(dt.LEQUAL),t.bloomEnabled){var k=I.uniforms;k.bloomStrength.value=t.bloomStrength,k.brightness.value=t.brightness,k.whitePoint.value=t.whitePoint}if(t.dofEnabled&&(V.cameraNear=a.near,V.cameraFar=a.far,V.autoFocus=t.dofAutofocus,V.autoFocusPoint=t.dofAutofocusPoint,V.focusDistance=t.dofFocusDistance,V.focusRampStart=t.dofFocusWidth,V.focusRampEnd=t.dofFocusWidth+t.dofFocusRampWidth,V.maxBlur=t.dofMaxBlur,t.dofFancy&&t.dofPhysical&&(V.lensFstop=t.dofLensFstop,V.lensFocalLength=t.dofLensFocalLength,V.lensBlurScale=t.dofLensBlurScale,V.lensMaxCoc=t.dofLensMaxCoc,V.lensApertureSides=t.dofLensApertureSides)),c){if(t.taaBeforeDOF)var z=tt.uniforms;else{var z=Y.uniforms;z.tDiffuseLast.value=K.renderTarget}if(z.jitterOffset.value.copy(Nt),z.matViewProjLast.value=Bt,z.matProjInverse.value=a.projectionMatrixInverse,z.matViewInverse.value=a.matrixWorld,z.viewSize.value.set(o,n),Ot.copy(a.projectionMatrix),Vt.copy(a.matrixWorldInverse),Bt.multiply(Ot,Vt),t.taaBeforeDOF){var H=THREE.EffectComposer.camera,W=THREE.EffectComposer.scene,j=THREE.EffectComposer.quad.materials,nt=$.uniforms;nt.tDiffuse.value=M.renderTarget2,nt.brightness.value=t.brightness,nt.whitePoint.value=t.whitePoint,j[0]=$,X.render(W,H,J),z.tDiffuse.value=J,z.tDiffuseLast.value=Z,j[0]=tt,X.render(W,H,Q),at.uniforms.tDiffuse.value=Q,j[0]=at,X.render(W,H,Z);var st=et.uniforms;st.tDiffuse.value=Q,st.brightness.value=t.brightness,st.whitePoint.value=t.whitePoint,j[0]=et,X.render(W,H,M.renderTarget2),V.colorInput=M.renderTarget2}}if(t.fogEnabled){var ht=I.uniforms;if(ht.fogColor.value.copy(t.fogColor),ht.fogStrength.value=t.fogStrength,ht.fogStart.value=t.fogStart,ht.cameraNearFar.value.set(a.near,a.far),t.dofFancy&&t.dofPhysical){var ct=V.blurAmountUniforms;ct.fogColor.value.copy(t.fogColor),ct.fogStrength.value=t.fogStrength,ct.fogStart.value=t.fogStart}}I.uniforms.brightness.value=t.brightness,I.uniforms.whitePoint.value=t.whitePoint,w.render(.1),Rt+=1}},THREE.ShadowMapPlugin=function(){function e(e,t){var a=new THREE.DirectionalLight;a.isVirtual=!0,a.onlyShadow=!0,a.castShadow=!0,a.shadowCameraNear=e.shadowCameraNear,a.shadowCameraFar=e.shadowCameraFar,a.shadowCameraLeft=e.shadowCameraLeft,a.shadowCameraRight=e.shadowCameraRight,a.shadowCameraBottom=e.shadowCameraBottom,a.shadowCameraTop=e.shadowCameraTop,a.shadowCameraVisible=e.shadowCameraVisible,a.shadowDarkness=e.shadowDarkness,a.shadowBias=e.shadowCascadeBias[t],a.shadowMapWidth=e.shadowCascadeWidth[t],a.shadowMapHeight=e.shadowCascadeHeight[t],a.properties.pointsWorld=[],a.properties.pointsFrustum=[];for(var r=a.properties.pointsWorld,i=a.properties.pointsFrustum,o=0;8>o;o++)r[o]=new THREE.Vector3,i[o]=new THREE.Vector3;var n=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return i[0].set(-1,-1,n),i[1].set(1,-1,n),i[2].set(-1,1,n),i[3].set(1,1,n),i[4].set(-1,-1,s),i[5].set(1,-1,s),i[6].set(-1,1,s),i[7].set(1,1,s),a}function t(e,t){var a=e.shadowCascadeArray[t];a.position.copy(e.position),a.target.position.copy(e.target.position),a.lookAt(a.target.position),a.shadowCameraVisible=e.shadowCameraVisible,a.shadowDarkness=e.shadowDarkness,a.shadowBias=e.shadowCascadeBias[t];var r=e.shadowCascadeNearZ[t],i=e.shadowCascadeFarZ[t],o=a.properties.pointsFrustum;o[0].setZ(r),o[1].setZ(r),o[2].setZ(r),o[3].setZ(r),o[4].setZ(i),o[5].setZ(i),o[6].setZ(i),o[7].setZ(i)}function a(e,t){var a=t.properties,r=a.shadowCamera,i=a.pointsFrustum,o=a.pointsWorld;m.set(1/0,1/0,1/0),v.set(-1/0,-1/0,-1/0);for(var n=m.data,s=v.data,l=THREE.ShadowMapPlugin.__projector,d=0;8>d;d++){var h=o[d],c=h.data;h.copy(i[d]),l.unprojectVector(h,e),r.matrixWorldInverse.multiplyVector3(h),c[0]<n[0]&&(n[0]=c[0]),c[0]>s[0]&&(s[0]=c[0]),c[1]<n[1]&&(n[1]=c[1]),c[1]>s[1]&&(s[1]=c[1]),c[2]<n[2]&&(n[2]=c[2]),c[2]>s[2]&&(s[2]=c[2])}r.left=n[0],r.right=s[0],r.top=s[1],r.bottom=n[1],r.updateProjectionMatrix()}var r,i,o,n,s,l,d,h,c,u,f=new THREE.Frustum,p=new THREE.Matrix4,m=new THREE.Vector3,v=new THREE.Vector3,g=[new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,-1,0)],S=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],x={},G={};this.init=function(e){r=e.context,i=e;var t=THREE.ShaderLib.depthRGBA;u=THREE.UniformsUtils.clone(t.uniforms),u.slopeScale.value=i.shadowMapSlopeScale,u.slopeBias.value=i.shadowMapSlopeBias,u.slopeMax.value=i.shadowMapSlopeMax;var a=i.shadowMapSlopeDepthBias&&i.supportsStandardDerivatives(),f={SLOPE_DEPTH_BIAS:a},p={SLOPE_DEPTH_BIAS:a,SPRITE:!0,SDF:!0},m=i.supportsVertexTextures(),v={SLOPE_DEPTH_BIAS:a,USE_DISPLACEMENTMAP:m,DISPLACE_BY_NORMAL:!0},g={SLOPE_DEPTH_BIAS:a,USE_DISPLACEMENTMAP:m,DISPLACE_BY_POSITION:!0},S={OES_standard_derivatives:a},x={OES_standard_derivatives:!0},G=t.fragmentShader,M=t.vertexShader;o=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:f,extensions:S}),n=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:f,extensions:S,morphTargets:!0}),s=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:f,extensions:S,skinning:!0}),l=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:f,extensions:S,morphTargets:!0,skinning:!0}),d=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:p,extensions:x}),h=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:v,extensions:S}),c=new THREE.ShaderMaterial({fragmentShader:G,vertexShader:M,uniforms:u,defines:g,extensions:S}),o._shadowPass=!0,n._shadowPass=!0,s._shadowPass=!0,l._shadowPass=!0,d._shadowPass=!0,h._shadowPass=!0,c._shadowPass=!0},this.render=function(e,t){i.shadowMapEnabled&&i.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(m,v){var M,y,X,_,w,D,C,A,T,P,L,b,E,F,R,U=[],I=0,N=null,B=null,O=i.supportsDepthTextures()&&i.shadowMapUseDepthTextures;r.clearColor(1,1,1,1),r.disable(r.BLEND);var V;for(V=i.shadowMapCullFace===THREE.CullFaceFront?THREE.BackSide:i.shadowMapCullFace===THREE.CullFaceBack?THREE.FrontSide:THREE.DoubleSide,i.setDepthTest(!0),O&&r.colorMask(!1,!1,!1,!1),M=0,y=m.__lights.length;y>M;M++)if(E=m.__lights[M],E.castShadow)if((E instanceof THREE.DirectionalLight||E instanceof THREE.DayLight||E instanceof THREE.DayLightCube)&&E.shadowCascade)for(w=0;w<E.shadowCascadeCount;w++){var k;if(E.shadowCascadeArray[w])k=E.shadowCascadeArray[w];else{k=e(E,w),k.originalCamera=v;var z=new THREE.Gyroscope;z.position=E.shadowCascadeOffset,z.add(k),z.add(k.target),v.add(z),E.shadowCascadeArray[w]=k,console.log("Created virtualLight",k)}t(E,w),U[I]=k,I++}else U[I]=E,I++;for(i.shadowMapSlopeDepthBias&&(O?i.setPolygonOffset(!0,1.5,10):(u.slopeScale.value=i.shadowMapSlopeScale,u.slopeBias.value=i.shadowMapSlopeBias,u.slopeMax.value=i.shadowMapSlopeMax)),M=0,y=U.length;y>M;M++){if(E=U[M],F=E.properties,!F.shadowMap){var H=!i.supportsDepthOnlyRenderTarget(),W=i.supportsLuminanceFloatRenderTarget()?THREE.LuminanceFormat:i.supportsRGBFloatRenderTarget()?THREE.RGBFormat:THREE.RGBAFormat,j="webgl2"===i.getRenderingBackend(),q={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,type:THREE.UnsignedByteType};if(j)var Y={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,useColorTexture:H,stencilBuffer:!1,format:W,useDepthTexture:!0,depthTextureType:i.shadowMapDepthTextureType};else var Y={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,useColorTexture:H,stencilBuffer:!1,format:W,useDepthTexture:!0,depthTextureType:i.shadowMapDepthTextureType};var K=O?Y:q;F.shadowMap=new THREE.RenderTarget(E.shadowMapWidth,E.shadowMapHeight,K),F.shadowMap.generateMipmaps=!1,F.shadowMapPars=new THREE.Vector4(E.shadowMapWidth,E.shadowMapHeight,E.shadowDarkness,E.shadowBias),F.shadowMatrixForward=new THREE.Matrix4}if(!F.shadowCamera){var Z=E.shadowMapWidth/E.shadowMapHeight;if(E instanceof THREE.SpotLight)A=new THREE.PerspectiveCamera(E.shadowCameraFov,Z,E.shadowCameraNear,E.shadowCameraFar);else if(E instanceof THREE.DirectionalLight||E instanceof THREE.DayLight||E instanceof THREE.DayLightCube)A=new THREE.OrthographicCamera(E.shadowCameraLeft,E.shadowCameraRight,E.shadowCameraTop,E.shadowCameraBottom,E.shadowCameraNear,E.shadowCameraFar);else if(E instanceof THREE.AreaLight||E instanceof THREE.PolyLight)A=E.shadowCameraOrtho?new THREE.OrthographicCamera(E.shadowCameraLeft,E.shadowCameraRight,E.shadowCameraTop,E.shadowCameraBottom,E.shadowCameraNear,E.shadowCameraFar):new THREE.PerspectiveCamera(E.shadowCameraFov,Z,E.shadowCameraNear,E.shadowCameraFar);else{if(!(E instanceof THREE.SphereLight)){console.error("THREE:ShadowMapPlugin: Unsupported light type for shadow");continue}A=[];for(var Q=0;6>Q;Q++){var J=new THREE.PerspectiveCamera(90,Z,E.shadowCameraNear,E.shadowCameraFar);J.up.copy(g[Q]),J.lookAt(S[Q]),A[Q]=J}}F.shadowCamera=A,E instanceof THREE.SphereLight||(m.add(A),i.autoUpdateScene&&m.updateMatrixWorld())}if(D=F.shadowMap,A=F.shadowCamera,C=F.shadowMatrixForward,F.shadowCamera instanceof Array&&void 0!==E.forwardShadowSide){var $=E.forwardShadowSide;
A=F.shadowCamera[$],A.position.copy(E.matrixWorld.getPosition())}else A.position.copy(E.matrixWorld.getPosition()),A.lookAt(E.target.matrixWorld.getPosition());for(A.updateMatrixWorld(),A.matrixWorldInverse.getInverse(A.matrixWorld),E.isVirtual&&k.originalCamera==v&&a(v,E),E.cameraHelper&&(E.cameraHelper.visible=E.shadowCameraVisible),E.shadowCameraVisible&&E.cameraHelper.update(),C.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),C.multiplySelf(A.projectionMatrix),C.multiplySelf(A.matrixWorldInverse),p.multiply(A.projectionMatrix,A.matrixWorldInverse),f.setFromMatrix(p),i.setRenderTarget(D),i.clear(),R=m.__webglObjects,X=0,_=R.length;_>X;X++)L=R[X],b=L.object,T=L.geometry,L.render=!1,b.visible&&b.castShadow&&((b instanceof THREE.Mesh||b instanceof THREE.Particles)&&b.frustumCulled&&!f.contains(b,T)||(b._modelViewMatrix.multiply(A.matrixWorldInverse,b.matrixWorld),L.render=!0));var et,tt,at,rt,it,ot;for(X=0,_=R.length;_>X;X++)if(L=R[X],L.render&&(b=L.object,T=L.geometry,rt=T instanceof THREE.SpriteGeometry,et=rt||L.transparent&&L.transparent.forceShadow?L.transparent:L.opaque,et&&et.visible)){if(tt=T.morphTargets.length>0&&et.morphTargets,at=b instanceof THREE.SkinnedMesh&&et.skinning,it=et.displacementMap,ot=et.instances,b.customDepthMaterial)P=b.customDepthMaterial;else if(it){P=et.displacementDirection===THREE.DisplaceByNormal?h:c;var nt=P.uniforms,st=et.uniforms;nt.displacementMap.value=et.displacementMap,nt.displacementScaleBias.value.set(et.displacementScale,et.displacementBias),nt.displacementNormalScale.value=et.displacementNormalScale,nt.offsetRepeat.value.copy(st.offsetRepeat.value)}else if(at)void 0===x[et.id]&&(P=tt?l:s,x[et.id]=P.clone(),x[et.id]._shadowPass=!0),P=x[et.id];else if(tt)P=n;else if(rt){P=d;var nt=P.uniforms,st=et.uniforms;nt.map.value=st.map.value,nt.alphaTest.value=st.alphaTest.value,nt.epsilon.value=st.epsilon.value}else P=o;ot&&(void 0===G[et.id]&&(G[et.id]=P.clone(),G[et.id]._shadowPass=!0,G[et.id].instances=!0),P=G[et.id],T.instanceCulled&&(i.cullInstances(b,T,f),i.setBuffers(T))),P.side=rt?THREE.DoubleSide:V,i.setMaterialFaces(P),i.setProgram(A,m.__lights,N,B,P,b,T),i.renderGeometry(P,T,b)}for(R=m.__webglObjectsImmediate,X=0,_=R.length;_>X;X++)L=R[X],b=L.object,b.visible&&b.castShadow&&(f.contains(b,b)||!b.frustumCulled)&&(b._modelViewMatrix.multiply(A.matrixWorldInverse,b.matrixWorld),i.setProgram(A,m.__lights,N,B,o,b,null),i.renderImmediateObject(o,b))}var lt=i.getClearColor(),dt=i.getClearAlpha();r.clearColor(lt.r,lt.g,lt.b,dt),r.enable(r.BLEND),O&&r.colorMask(!0,!0,!0,!0)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.EffectComposer=function(e,t){if(e?e instanceof THREE.DeferredRenderer&&console.warn("THREE.EffectComposer: passed deferred renderer parameter, probably not what you intended"):console.warn("THREE.EffectComposer: undefined renderer"),this.renderer=e,void 0===t){var a=window.innerWidth||1,r=window.innerHeight||1,i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,internalFormat:THREE.RGBAFormat,type:THREE.UnsignedByteType,stencilBuffer:!1};t=new THREE.RenderTarget(a,r,i)}this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},THREE.EffectComposer.prototype={swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var t,a,r=!1,i=this.passes.length;for(a=0;i>a;a++)if(t=this.passes[a],t.enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){var o=this.renderer.context;o.stencilFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),o.stencilFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}t instanceof THREE.MaskPass?r=!0:t instanceof THREE.ClearMaskPass&&(r=!1)}},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t)}},THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),THREE.EffectComposer.quad=new THREE.Mesh(new THREE.TriangleGeometry([[-1,-3,0],[3,1,0],[-1,1,0]],[[0,-1],[2,1],[0,1]]),null),THREE.EffectComposer.scene=new THREE.Scene,THREE.EffectComposer.scene.add(THREE.EffectComposer.quad),THREE.TexturePass=function(e,t){var a=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(a.uniforms),this.uniforms.opacity.value=void 0!==t?t:1,this.uniforms.tDiffuse.value=e,this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}),this.enabled=!0,this.needsSwap=!1},THREE.TexturePass.prototype={render:function(e,t,a){THREE.EffectComposer.quad.materials[0]=this.material,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,a)}},THREE.ShaderPass=function(e,t){this.textureID=void 0!==t?t:"tDiffuse",this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader,defines:THREE.UniformsUtils.cloneDefines(e.defines)}),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1},THREE.ShaderPass.prototype={render:function(e,t,a){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a),THREE.EffectComposer.quad.materials[0]=this.material,this.renderToScreen?e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,t,this.clear)}},THREE.SavePass=function(e){var t=THREE.CopyShader;this.textureID="tDiffuse",this.uniforms=THREE.UniformsUtils.clone(t.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.renderTarget=e,void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},this.renderTarget=new THREE.RenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters)),this.enabled=!0,this.needsSwap=!1,this.clear=!1},THREE.SavePass.prototype={render:function(e,t,a){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=a),THREE.EffectComposer.quad.materials[0]=this.material,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}},THREE.RenderPass=function(e,t,a,r){this.scene=e,this.camera=t,this.clearColor=a,this.clearAlpha=void 0!==r?r:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(e,t,a){this.clearColor&&(this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.render(this.scene,this.camera,a,this.clear),this.clearColor&&e.setClearColor(this.oldClearColor,this.oldClearAlpha)}},THREE.MaskPass=function(e,t){this.scene=e,this.camera=t,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(e,t,a){var r=e.context;r.colorMask(!1,!1,!1,!1),r.depthMask(!1);var i,o;this.inverse?(i=0,o=1):(i=1,o=0),r.enable(r.STENCIL_TEST),r.stencilOp(r.REPLACE,r.REPLACE,r.REPLACE),r.stencilFunc(r.ALWAYS,i,4294967295),r.clearStencil(o),e.render(this.scene,this.camera,a,this.clear),e.render(this.scene,this.camera,t,this.clear),r.colorMask(!0,!0,!0,!0),r.depthMask(!0),r.stencilFunc(r.EQUAL,1,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(e){var t=e.context;t.disable(t.STENCIL_TEST)}},THREE.BloomPass=function(e,t,a,r){e=void 0!==e?e:1,t=void 0!==t?t:25,a=void 0!==a?a:4,r=void 0!==r?r:256;var i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetX=new THREE.RenderTarget(r,r,i),this.renderTargetY=new THREE.RenderTarget(r,r,i);var o=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(o.uniforms),this.copyUniforms.opacity.value=e,this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:o.vertexShader,fragmentShader:o.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});var n=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(n.uniforms),this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx,this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(a),this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,defines:{KERNEL_SIZE_FLOAT:t.toFixed(1),KERNEL_SIZE_INT:t.toFixed(0)}}),this.enabled=!0,this.needsSwap=!1,this.clear=!1},THREE.BloomPass.prototype={render:function(e,t,a,r,i){i&&e.context.disable(e.context.STENCIL_TEST),THREE.EffectComposer.quad.materials[0]=this.materialConvolution,this.convolutionUniforms.tDiffuse.value=a,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0),this.convolutionUniforms.tDiffuse.value=this.renderTargetX,this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetY,!0),THREE.EffectComposer.quad.materials[0]=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetY,i&&e.context.enable(e.context.STENCIL_TEST),e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,a,this.clear)}},THREE.BloomPass.blurX=new THREE.Vector2(.001953125,0),THREE.BloomPass.blurY=new THREE.Vector2(0,.001953125),THREE.DepthOfFieldPass=function(e,t,a){e=void 0!==e?e:1024,t=void 0!==t?t:512;var r=a.isES3?THREE.RGBA32F:THREE.RGBAFormat,i={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,internalFormat:r,type:THREE.FloatType},o={minFilter:THREE.LinearMipMapLinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetBlur=new THREE.RenderTarget(e,t,o),this.renderTargetBlur.generateMipmaps=!0,this.renderTargetDistance1=new THREE.RenderTarget(2,2,i),this.renderTargetDistance1.generateMipmaps=!1,this.renderTargetDistance2=this.renderTargetDistance1.clone(),this.renderTargetDistanceRead=this.renderTargetDistance1,this.renderTargetDistanceWrite=this.renderTargetDistance2;var n=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(n.uniforms),this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1});var s=THREE.DistanceShader;this.distanceUniforms=THREE.UniformsUtils.clone(s.uniforms),this.materialDistance=new THREE.ShaderMaterial({uniforms:this.distanceUniforms,vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1});var l=THREE.DepthOfFieldShader;this.dofUniforms=THREE.UniformsUtils.clone(l.uniforms),this.materialDOF=new THREE.ShaderMaterial({uniforms:this.dofUniforms,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1}),this.dofUniforms.tBlur.value=this.renderTargetBlur,this.dofUniforms.blurSize.value.set(e,t),this.depthInput=null,this.colorInput=null,this.cameraNear=null,this.cameraFar=null,this.autoFocus=null,this.autoFocusPoint=null,this.focusDistance=null,this.focusRampStart=null,this.focusRampEnd=null,this.maxBlur=null,this.defines=null,this.enabled=!0,this.needsSwap=!0,this.clear=!1},THREE.DepthOfFieldPass.prototype={resize:function(){},render:function(e,t,a){var r=this.dofUniforms,i=this.copyUniforms,o=this.distanceUniforms,n=this.renderTargetDistanceRead;this.renderTargetDistanceRead=this.renderTargetDistanceWrite,this.renderTargetDistanceWrite=n,r.tDepth.value=this.depthInput,o.tDepth.value=this.depthInput,r.autoFocus.value=this.autoFocus,r.autoFocusPoint.value.copy(this.autoFocusPoint),r.focusDistance.value=this.focusDistance,r.focusRampStart.value=this.focusRampStart,r.focusRampEnd.value=this.focusRampEnd,r.maxBlur.value=this.maxBlur,r.cameraNearFar.value.set(this.cameraNear,this.cameraFar),o.cameraNearFar.value.set(this.cameraNear,this.cameraFar),o.samplePoint.value.copy(this.autoFocusPoint),i.tDiffuse.value=a,r.tDiffuse.value=a,r.tDistance.value=this.renderTargetDistanceRead,o.tDistance.value=this.renderTargetDistanceRead,this.materialDistance.defines=this.defines,this.materialDOF.defines=this.defines,THREE.EffectComposer.quad.materials[0]=this.materialCopy,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetBlur,!0),THREE.EffectComposer.quad.materials[0]=this.materialDOF,this.renderToScreen?e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,t,this.clear),THREE.EffectComposer.quad.materials[0]=this.materialDistance,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetDistanceWrite,!1)}},THREE.FancyDepthOfFieldPass=function(e,t,a,r){this.blurScale=void 0!==a?a:.75;var i,o,n,s=Math.max(1,Math.floor(this.blurScale*e)),l=Math.max(1,Math.floor(this.blurScale*t));r.isES3?(i=THREE.RGBA32F,o=THREE.RGBA16F,n=THREE.HalfFloatType2):(i=THREE.RGBAFormat,o=THREE.RGBAFormat,n=THREE.HalfFloatType1);var d,h,c,u={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:i,type:THREE.FloatType},f={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:o,type:n},p={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:i,type:THREE.FloatType},m={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:i,type:THREE.FloatType},v={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:o,type:n},g={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,stencilBuffer:!1,format:THREE.RGBAFormat,internalFormat:o,type:n},S={minFilter:THREE.NearestFilter,magFilter:THREE.LinearFilter,stencilBuffer:!1,format:THREE.RGBAFormat,type:THREE.UnsignedByteType};r.hasHalfFloatsLinear?(d=v,c=f,h=v):r.hasHalfFloatsNearest?(d=g,c=f,h=g):r.hasFloatsLinear?(d=p,c=u,h=p):r.hasFloatsNearest?(d=m,c=u,h=m):(d=S,c=S,h=S),this.renderTargetBlurAmount=new THREE.RenderTarget(s,l,h),this.renderTargetBlurAmount.generateMipmaps=!1,this.renderTargetBlurPass1=new THREE.RenderTarget(s,l,d),this.renderTargetBlurPass1.generateMipmaps=!1,this.renderTargetBlurPass2=new THREE.RenderTarget(s,l,d),this.renderTargetBlurPass2.generateMipmaps=!1,this.renderTargetDistance1=new THREE.RenderTarget(2,2,c),this.renderTargetDistance1.generateMipmaps=!1,this.renderTargetDistance2=this.renderTargetDistance1.clone(),this.renderTargetDistanceRead=this.renderTargetDistance1,this.renderTargetDistanceWrite=this.renderTargetDistance2;var x=THREE.DOFBlurAmountShader;this.blurAmountUniforms=THREE.UniformsUtils.clone(x.uniforms),this.materialBlurAmount=new THREE.ShaderMaterial({uniforms:this.blurAmountUniforms,vertexShader:x.vertexShader,fragmentShader:x.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1});var G=THREE.DistanceShader;this.distanceUniforms=THREE.UniformsUtils.clone(G.uniforms),this.materialDistance=new THREE.ShaderMaterial({uniforms:this.distanceUniforms,vertexShader:G.vertexShader,fragmentShader:G.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1});var M=THREE.DOFBlurPass1Shader;this.dofPass1Uniforms=THREE.UniformsUtils.clone(M.uniforms),this.materialDOFPass1=new THREE.ShaderMaterial({uniforms:this.dofPass1Uniforms,vertexShader:M.vertexShader,fragmentShader:M.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1});var y=THREE.DOFBlurPass2Shader;this.dofPass2Uniforms=THREE.UniformsUtils.clone(y.uniforms),this.materialDOFPass2=new THREE.ShaderMaterial({uniforms:this.dofPass2Uniforms,vertexShader:y.vertexShader,fragmentShader:y.fragmentShader,blending:THREE.NoBlending,depthTest:!1,depthWrite:!1}),this.depthInput=null,this.colorInput=null,this.cameraNear=null,this.cameraFar=null,this.autoFocus=null,this.autoFocusPoint=null,this.focusDistance=null,this.focusRampStart=null,this.focusRampEnd=null,this.maxBlur=null,this.lensFstop=null,this.lensFocalLength=null,this.lensBlurScale=null,this.lensMaxCoc=null,this.lensApertureSides=null,this.defines=null,this.oldLensApertureSides=null,this.enabled=!0,this.needsSwap=!0,this.clear=!1},THREE.FancyDepthOfFieldPass.prototype={setLensApertureSides:function(e){(void 0===e||3>e)&&(e=3),this.dofPass1Uniforms.samplePoints1.value=THREE.Math.generateConcentricCircleSamples(7,e),this.dofPass1Uniforms.samplePoints2.value=THREE.Math.generateConcentricCircleSamples(3,e),this.dofPass2Uniforms.samplePoints.value=THREE.Math.generateConcentricCircleSamples(3,e)},resize:function(e,t){var a=Math.max(1,Math.floor(this.blurScale*e)),r=Math.max(1,Math.floor(this.blurScale*t));this.renderTargetBlurAmount.setSize(a,r),this.renderTargetBlurPass1.setSize(a,r),this.renderTargetBlurPass2.setSize(a,r)},render:function(e){var t=this.dofPass1Uniforms,a=this.dofPass2Uniforms,r=this.blurAmountUniforms,i=(this.blurCompositeUniforms,this.distanceUniforms),o=this.renderTargetDistanceRead;if(this.renderTargetDistanceRead=this.renderTargetDistanceWrite,this.renderTargetDistanceWrite=o,this.lensApertureSides!==this.oldLensApertureSides){var n=THREE.Math.generateConcentricCircleSamples(7,this.lensApertureSides),s=THREE.Math.generateConcentricCircleSamples(3,this.lensApertureSides);t.samplePoints1.value=n,t.samplePoints2.value=s,a.samplePoints.value=s,this.oldLensApertureSides=this.lensApertureSides}r.tDepth.value=this.depthInput,i.tDepth.value=this.depthInput,t.tDiffuse.value=this.colorInput,t.resolution.value.set(this.colorInput.width,this.colorInput.height),r.tDiffuse.value=this.colorInput,r.resolution.value.set(this.colorInput.width,this.colorInput.height),r.cameraNearFar.value.set(this.cameraNear,this.cameraFar),r.autoFocus.value=this.autoFocus,r.autoFocusPoint.value.copy(this.autoFocusPoint),r.focusDistance.value=this.focusDistance,r.focusRampStart.value=this.focusRampStart,r.focusRampEnd.value=this.focusRampEnd,r.maxBlur.value=this.maxBlur,r.lensAperture.value=this.lensFocalLength/this.lensFstop,r.lensFocalLength.value=this.lensFocalLength,r.lensBlurScale.value=this.lensBlurScale,r.lensMaxCoc.value=this.lensMaxCoc,i.cameraNearFar.value.set(this.cameraNear,this.cameraFar),i.samplePoint.value.copy(this.autoFocusPoint),t.tBlurAmount.value=this.renderTargetBlurAmount,a.tBlurAmount.value=this.renderTargetBlurAmount,r.tDistance.value=this.renderTargetDistanceRead,i.tDistance.value=this.renderTargetDistanceRead,a.tDiffuse.value=this.renderTargetBlurPass1,a.resolution.value.set(this.colorInput.width,this.colorInput.height),this.materialBlurAmount.defines=this.defines,this.materialDistance.defines=this.defines,this.materialDOFPass1.defines=this.defines,this.materialDOFPass2.defines=this.defines,THREE.EffectComposer.quad.materials[0]=this.materialBlurAmount,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetBlurAmount,!0),THREE.EffectComposer.quad.materials[0]=this.materialDOFPass1,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetBlurPass1,!0),THREE.EffectComposer.quad.materials[0]=this.materialDOFPass2,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetBlurPass2,!0),THREE.EffectComposer.quad.materials[0]=this.materialDistance,e.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetDistanceWrite,!1)}},THREE.PhysicsSimulation=function(e){var t=this,a=void 0!==e.useTransferables?e.useTransferables:!1,r=void 0!==e.workerUrl?e.workerUrl:"js/ammo/ammo.worker.js";this.currentFrame=0,this.currentFPS=0,this.allFPS=0,this.callbackIdle=null,this.callbackInitialized=null;var i,o=6,n=7,s=new Float32Array(0),l=[],d=[],h=[],c=[],u=[],f=function(e){for(var t=0,a=e.length;a>t;t++)for(var r=e[t].wheels,i=0,o=r.length;o>i;i++){var n=r[i],s=d.length;d.push(n.mesh),n.mesh=s}},p=function(e,t){for(var a=(e.length-t)/n,r=l.length,i=Math.min(a,r),o=0;i>o;o++){var s=l[o],d=s.position.data,h=s.quaternion.data;e[t]=d[0],e[t+1]=d[1],e[t+2]=d[2],e[t+3]=h[0],e[t+4]=h[1],e[t+5]=h[2],e[t+6]=h[3],t+=n}},m=function(e,t,a){var r=l.length,i=Math.min(a,r);a!==r&&console.warn("Number of physics bodies = ",a," while number of rendering bodies = ",r);for(var o=0;i>o;o++){var s=l[o],d=s.position.data,h=s.quaternion.data;d[0]=e[t],d[1]=e[t+1],d[2]=e[t+2],h[0]=e[t+3],h[1]=e[t+4],h[2]=e[t+5],h[3]=e[t+6],t+=n}return t},v=function(e,t,a){var r=d.length,i=Math.min(a,r);a!==r&&console.warn("Number of physics wheels = ",a," while number of rendering wheels = ",r);for(var o=0;i>o;o++){var s=d[o],l=s.position.data,h=s.quaternion.data;l[0]=e[t],l[1]=e[t+1],l[2]=e[t+2],h[0]=e[t+3],h[1]=e[t+4],h[2]=e[t+5],h[3]=e[t+6],t+=n}return t},g=function(e,t,a){var r=u.length,i=Math.min(a,r);a!==r&&console.warn("Number of physics vehicles = ",a," while number of local vehicles = ",r);for(var o=0;i>o;o++){var n=u[o],s=e[t];n.speed=s,t+=1}return t},S=function(e){var r,n=!1;a&&(e instanceof Float32Array?(r=e.buffer,0===e.length&&r.byteLength>0&&(e=new Float32Array(r))):e instanceof ArrayBuffer&&(r=e,e=new Float32Array(r),n=!0));var s=0,l=e[0];if(l>=t.currentFrame){t.currentFrame=l,t.currentFPS=e[1],t.allFPS=e[2];var d=e[3],h=e[4],c=e[5];s+=o,s=m(e,s,d),s=v(e,s,c),s=g(e,s,h)}else console.warn("Physics simulation frames received out of order");a&&(n?i.postMessage(e,[e.buffer]):i.postMessage(e.buffer,[e.buffer]))},x=function(e){var a=e.data;if(a instanceof Float32Array||a instanceof ArrayBuffer&&a.byteLength>1)S(a);else{var r=a;"simulationIdle"===r.type?t.callbackIdle&&t.callbackIdle():"simulationInitialized"===r.type?t.callbackInitialized&&t.callbackInitialized():"debug"===r.type&&console.log(r.content)}};this.loadPhysicsVehicle=function(e){var t,a,r,i,o,n=e.chassisUrl,s=e.wheelUrl,l=e.scale,d=e.position,h=e.chassisOffset,c=e.chassisShape,u=e.chassisPhysicsProperties,f=e.vehiclePhysicsProperties,p=e.wheels,m=e.callback,v=e.debugPhysicsShapes,g=[],S=0,x=function(){if(S+=1,2===S){var e=[t];e=e.concat(g),f.wheels=[];for(var n=0,s=p.length;s>n;n++){var d=p[n],h={mesh:g[n],isFrontWheel:d.isFrontWheel,wheelRadius:d.wheelRadius,suspensionRestLength:d.suspensionRestLength,connectionPoint:d.connectionPoint,wheelDirection:d.wheelDirection,wheelAxle:d.wheelAxle,tuning:d.tuning};f.wheels.push(h)}t.properties.physics=u;var v={chassisGeometries:a,wheelGeometries:r,chassisMaterials:i,wheelMaterials:o,parts:e,chassisShape:c,vehiclePhysicsProperties:f,scale:l};m(v)}},G=new THREE.UTF8Loader;G.load(n,function(e,r){if(a=e,i=r,THREE.GeometryUtils.center(e),h){var o=new THREE.Matrix4,n=new THREE.Vector3(h[0],h[1],h[2]);o.makeTranslation(n);for(var s=0;s<e.length;s++){var u=e[s];u.applyMatrix(o)}}if(t=new THREE.Mesh(e,r),t.scale.multiplyScalar(l),t.position.set(d[0],d[1],d[2]),t.useQuaternion=!0,t.castShadow=!0,t.receiveShadow=!0,t.visible=!1,v)for(var f=[16711680,16755200,16711935,65280,16776960],p=new THREE.Vector3(1,1,1).multiplyScalar(1/l),m=new THREE.Vector3,g=new THREE.Matrix4,S=new THREE.Matrix4,s=0,G=c.children.length;G>s;s++){var M=new THREE.EmissiveMaterial({color:f[s%f.length],transparent:!0,opacity:.8}),y=c.children[s],X=y.position;m.set(X[0],X[1],X[2]),S.makeScale(p),g.makeTranslation(m);var _=new THREE.BoxGeometry(2*y.sx,2*y.sy,2*y.sz);_.applyMatrix(g),_.applyMatrix(S),_.computeBoundingSphere(),e.push(_),r.push(M)}x()}),G.load(s,function(e,t){r=e,o=t,THREE.GeometryUtils.center(e);for(var a=0,i=p.length;i>a;a++){var n=p[a],s=new THREE.Mesh(e,t);s.castShadow=!0,s.receiveShadow=!0,s.visible=!1;var h;n.mirrored?(s.rotation.y=Math.PI,h=new THREE.Node,h.add(s)):h=s,h.useQuaternion=!0,h.scale.multiplyScalar(l),h.position.set(d[0],d[1],d[2]),g.push(h)}x()})},this.applyEngineForce=function(e,t,a){if(i){var r={type:"applyEngineForce",force:e,vehicleId:t,wheelId:a};i.postMessage(r)}},this.setSteering=function(e,t,a){if(i){var r={type:"setSteering",steering:e,vehicleId:t,wheelId:a};i.postMessage(r)}},this.setBrake=function(e,t,a){if(i){var r={type:"setBrake",brake:e,vehicleId:t,wheelId:a};i.postMessage(r)}},this.setGravity=function(e,t,a){if(i){var r={type:"setGravity",value:[e,t,a]};i.postMessage(r)}},this.resetTransforms=function(){if(i){var e=l.length,t=e*n;s.length<t&&(s=new Float32Array(t)),p(s,0);var a={type:"resetTransforms",nObjects:e,transforms:s};i.postMessage(a)}},this.startPhysics=function(e){l=e.objects,h=e.shapes,void 0!==e.constraints&&(c=e.constraints),void 0!==e.vehicles&&(u=e.vehicles,f(e.vehicles));for(var t=[],a=0,o=l.length;o>a;a++){var d=l[a],m=d.properties.physics,v=a,g=m.shapeId,S=void 0!==m.mass?m.mass:1,G=void 0!==m.linearSleepThreshold?m.linearSleepThreshold:.8,M=void 0!==m.angularSleepThreshold?m.angularSleepThreshold:1,y={bodyId:v,shapeId:g,mass:S,linearSleepThreshold:G,angularSleepThreshold:M};t.push(y)}var X=l.length,_=X*n;s.length<_&&(s=new Float32Array(_)),p(s,0),i=new Worker(r),i.onmessage=x;var w=void 0!==e.gravity?e.gravity:[0,-9.81,0],D=void 0!==e.floorEnabled?e.floorEnabled:!0,C={type:"init",nObjects:X,transforms:s,objectsData:t,shapesData:h,constraintsData:c,vehiclesData:u,floorEnabled:D,floorSize:.5*e.floorSize,floorHeight:e.floorHeight,gravity:w};i.postMessage(C)}};var Detector={gl1:null,gl2:null,glExtensionTextureFloat:null,glExtensionTextureHalfFloat:null,glExtensionShaderTextureLod:null};Detector.initGL1=function(){try{var e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");Detector.gl1=t,Detector.glExtensionTextureFloat=t.getExtension("OES_texture_float"),Detector.glExtensionTextureHalfFloat=t.getExtension("OES_texture_half_float"),Detector.glExtensionShaderTextureLod=t.getExtension("EXT_shader_texture_lod")}catch(a){}},Detector.initGL2=function(){try{var e=document.createElement("canvas"),t=e.getContext("webgl2")||e.getContext("experimental-webgl2");Detector.gl2=t}catch(a){}},Detector.canvas=!!window.CanvasRenderingContext2D,Detector.webgl=function(){try{var e=document.createElement("canvas");return!(!window.WebGLRenderingContext||!e.getContext("webgl")&&!e.getContext("experimental-webgl"))}catch(t){return!1}}(),Detector.webgl2=function(){try{var e=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!e.getContext("webgl2")&&!e.getContext("experimental-webgl2"))}catch(t){return!1}}(),Detector.workers=!!window.Worker,Detector.fileapi=window.File&&window.FileReader&&window.FileList&&window.Blob,Detector.isMobile=!!(navigator.userAgent.match(/Android/i)||navigator.userAgent.match(/webOS/i)||navigator.userAgent.match(/iPhone/i)||navigator.userAgent.match(/iPad/i)||navigator.userAgent.match(/iPod/i)||navigator.userAgent.match(/BlackBerry/i)||navigator.userAgent.match(/Windows Phone/i)),Detector.isOpenGL=function(){try{var e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl"),a=t.getExtension("WEBGL_debug_renderer_info"),r="";a&&(r=t.getParameter(a.UNMASKED_RENDERER_WEBGL),r=r.toLowerCase());var i=r.indexOf("angle")>=0&&r.indexOf("opengl")<0,o=navigator.userAgent.toLowerCase().indexOf("trident")>=0,n=!(o||i);return n}catch(s){return!0}}(),Detector.supportsTransferables=function(){var e=!1;try{var t=new ArrayBuffer(1),a=window.URL||window.webkitURL,r=new Blob([""],{type:"application/x-javascript"}),i=a.createObjectURL(r),o=new Worker(i);o.postMessage(t,[t]),e=0===t.byteLength}catch(n){console.error(n)}return e},Detector.supportsFloatTextures=function(e){return"webgl2"===e?!0:(null===Detector.gl1&&Detector.initGL1(),!!Detector.glExtensionTextureFloat)},Detector.supportsHalfFloatTextures=function(e){return"webgl2"===e?!0:(null===Detector.gl1&&Detector.initGL1(),!!Detector.glExtensionTextureHalfFloat)},Detector.supportsShaderTextureLod=function(e){return"webgl2"===e?!0:(null===Detector.gl1&&Detector.initGL1(),!!Detector.glExtensionShaderTextureLod)},Detector.deferredCapable=function(){function e(e,t,a){var r=e.createFramebuffer(),i=e.createTexture();e.bindTexture(e.TEXTURE_2D,i),e.texImage2D(e.TEXTURE_2D,0,t,2,2,0,t,a,null),e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,i,0);var o=e.checkFramebufferStatus(e.FRAMEBUFFER);return e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindTexture(e.TEXTURE_2D,null),o===e.FRAMEBUFFER_COMPLETE}try{var t=document.createElement("canvas"),a=t.getContext("webgl")||t.getContext("experimental-webgl"),r=a.getExtension("OES_texture_float"),i=a.getExtension("WEBGL_draw_buffers"),o=r&&e(a,a.RGBA,a.FLOAT);return o||!!i}catch(n){return!1}}(),Detector.getWebGLErrorMessage=function(e){var t=window.innerHeight,a=(window.screen.availHeight,50),r=4,i=0;451>t&&(r=1,a=75);var o=document.createElement("div");o.style.border="solid 0px #f00",o.style.color="#eee",o.style.width="100%",o.style.height=t-i+"px",o.style.position="absolute",o.style.top="0px",o.style.left="0px",o.style.margin="0",o.style.padding="0",o.style.paddingBottom=i+"px",o.style.display="block",o.style.backgroundSize="auto 100%",e&&(o.style.background="url('"+e+"') no-repeat center");var n=document.createElement("div");n.style.fontFamily="Avenir, Helvetica, Arial, sans-serif",n.style.fontWeight="bold",n.style.textAlign="center",n.style.lineHeight="1.5em",n.style.background="#000",n.style.opacity="0.75",n.style.padding="1em",n.style.margin="0 auto 0",n.style.marginTop=r+"em",n.style.width=a+"%",n.style.border="solid 0px #fff";var s="",l=["<b>THIS DEMO REQUIRES WEBGL</b><br/><br/>",'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" target="_top">WebGL</a>.<br/>','Find out how to get WebGL working <a href="http://get.webgl.org/" target="_top">here</a> or try visiting with a different browser or computer.'].join("\n"),d=["<b>THIS DEMO REQUIRES WEBGL</b><br/><br/>",'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" target="_top">WebGL</a>.<br/>','Find out how to get browser with WebGL support <a href="http://get.webgl.org/" target="_top">here</a>.'].join("\n"),h=["<b>THIS DEMO REQUIRES ADVANCED WEBGL FEATURES</b><br/><br/>",'Your graphics card or browser does not seem to support rendering into <a href="https://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/" target="_top">Multiple-Render-Targets</a>',' or <a href="https://www.khronos.org/registry/webgl/extensions/OES_texture_float/" target="_top">Floating Point Render-Targets</a>.<br/><br/>',"Try visiting on a different browser or different computer (try desktop PC or notebook, only very few phones or tablets support required features)."].join("\n");return this.webgl?this.deferredCapable||(s=h):s=window.WebGLRenderingContext?l:d,n.innerHTML=s,o.appendChild(n),o},Detector.addGetWebGLMessage=function(e){e=e||{};var t=void 0!==e.parent?e.parent:document.body,a=void 0!==e.id?e.id:"oldie",r=void 0!==e.fallbackImg?e.fallbackImg:null,i=Detector.getWebGLErrorMessage(r);i.id=a;var o=0,n=function(){var e=(document.body,document.documentElement,window.innerHeight);i.style.height=e-o+"px"};window.addEventListener("resize",n,!1),t.appendChild(i)};var GPUDetector=function(){var e=void 0,t={},a=[["AMD","Radeon","Pro Duo",28808,!0,!0],["Nvidia","GeForce","GTX Titan X SLI",28274,!0,!0],["Nvidia","GeForce","GTX 980 Ti SLI",26966,!0,!0],["Nvidia","GeForce","Titan X",26660,!0,!1],["Nvidia","GeForce","GTX 980 notebook SLI",23351,!1,!0],["AMD","Radeon","R9 295X2",22073,!0,!0],["Nvidia","GeForce","GTX 1080",21828,!0,!1],["Nvidia","GeForce","GTX 980M SLI",18632,!1,!0],["Nvidia","GeForce","GTX 1070",18255,!0,!1],["Nvidia","GeForce","GTX Titan Z",17851,!0,!0],["Nvidia","GeForce","GTX Titan X",17470,!0,!1],["Nvidia","Quadro","M6000",16993,!0,!1],["Nvidia","GeForce","GTX 980 Ti",16978,!0,!1],["Nvidia","GeForce","GTX 1070 notebook",16893,!1,!1],["AMD","Radeon","R9 Fury X",16096,!0,!1],["Nvidia","GeForce","GTX 970M SLI",14873,!1,!0],["AMD","Radeon","R9 Fury",14580,!0,!1],["AMD","Radeon","R9 Nano",13888,!0,!1],["Nvidia","GeForce","GTX 980",13386,!0,!1],["Nvidia","GeForce","GTX 980 notebook",13340,!1,!1],["Nvidia","GeForce","GTX 1060",13215,!0,!1],["AMD","Radeon","R9 390X",12855,!0,!1],["AMD","Radeon","RX 480",12186,!0,!1],["AMD","Radeon","R9 390",12044,!0,!1],["Nvidia","GeForce","GTX 1060 notebook",11955,!1,!1],["AMD","Radeon","RX 470",11869,!0,!1],["AMD","Radeon","R9 290X",11862,!0,!1],["Nvidia","GeForce","GTX 880M SLI",11817,!1,!0],["Nvidia","GeForce","GTX 690",11713,!0,!0],["Nvidia","GeForce","GTX Titan Black",11494,!0,!1],["Nvidia","GeForce","GTX 780 Ti",11275,!0,!1],["Nvidia","Quadro","M5000",10467,!0,!1],["Nvidia","GeForce","GTX 780M SLI",10091,!1,!0],["Nvidia","GeForce","GTX 970",10282,!0,!1],["AMD","Radeon","R9 290",10019,!0,!1],["Nvidia","GeForce","GTX Titan",9913,!0,!1],["Nvidia","GeForce","GTX 980M",9741,!1,!1],["Nvidia","Quadro","K6000",9717,!0,!1],["Nvidia","GeForce","GTX 780",9471,!0,!1],["AMD","Radeon","R9 380X",9250,!0,!1],["Nvidia","Quadro","M5000M",9103,!1,!1],["AMD","Radeon","R9 280X",8402,!0,!1],["AMD","Radeon","R9 380",8334,!0,!1],["AMD","FirePro","W8100",8159,!0,!1],["AMD","Radeon","R9 285",7951,!0,!1],["AMD","Radeon","HD 7970",7852,!0,!1],["Nvidia","Quadro","M4000",7710,!0,!1],["Nvidia","GeForce","GTX 770",7707,!0,!1],["Nvidia","GeForce","GTX 970M",7615,!1,!1],["Nvidia","GeForce","GTX 960",7542,!0,!1],["AMD","Radeon","R9 280",7223,!0,!1],["Nvidia","GeForce","GTX 680",7001,!0,!1],["AMD","FirePro","W7170M",6935,!1,!1],["AMD","Radeon","R9 M395X",6859,!1,!1],["AMD","Radeon","R9 M395",6819,!1,!1],["Nvidia","GeForce","GTX 950",6764,!0,!1],["AMD","FirePro","D700",6764,!0,!1],["AMD","Radeon","R9 M295X",6590,!1,!1],["Nvidia","Quadro","M3000M",6415,!1,!1],["AMD","Radeon","HD 7950",6410,!0,!1],["Nvidia","GeForce","GTX 670",6286,!0,!1],["Nvidia","GeForce","GTX 965M Ti",6160,!1,!1],["Nvidia","GeForce","GTX 880M",6101,!1,!1],["Nvidia","GeForce","GTX 860M SLI",5941,!1,!0],["AMD","Radeon","R9 270X",5954,!0,!1],["Nvidia","GeForce","GTX 760",5906,!0,!1],["AMD","Radeon","RX 460",5766,!0,!1],["Nvidia","GeForce","GTX 660 Ti",5720,!0,!1],["AMD","Radeon","R9 270",5716,!0,!1],["Nvidia","GeForce","GTX 965M",5394,!1,!1],["AMD","Radeon","HD 7870",5295,!0,!1],["AMD","Radeon","R9 M290X",5294,!1,!1],["Nvidia","GeForce","GTX 780M",5244,!1,!1],["Nvidia","GeForce","GTX 580",5045,!0,!0],["AMD","Radeon","R9 370",5041,!0,!1],["AMD","Radeon","HD 8970M",5038,!1,!1],["Nvidia","Quadro","K5000",5007,!0,!1],["AMD","Radeon","R7 265",4948,!0,!1],["AMD","FirePro","D300",4899,!0,!1],["Nvidia","Quadro","K5100M",4776,!1,!1],["Nvidia","GeForce","GTX 680MX",4758,!1,!1],["Nvidia","GeForce","GTX 870M",4694,!1,!1],["AMD","Radeon","HD 7970M",4694,!1,!1],["AMD","FirePro","D500",4556,!0,!1],["Nvidia","GeForce","GTX 660",4524,!0,!1],["Nvidia","GeForce","GTX 960M",4365,!1,!1],["Nvidia","GeForce","GTX 570",4336,!0,!1],["Nvidia","Quadro","M2000M",4224,!1,!1],["AMD","Radeon","HD 7850",4224,!0,!1],["Nvidia","GeForce","GTX 750 Ti",4211,!0,!1],["Nvidia","GeForce","GT 755M SLI",4106,!1,!0],["Nvidia","GeForce","GTX 680M",4049,!1,!1],["AMD","Radeon","R9 260X",4016,!0,!1],["AMD","Radeon","HD 6970",3995,!0,!1],["Nvidia","GeForce","GTX 860M",3919,!1,!1],["AMD","Radeon","R7 260",3885,!0,!1],["AMD","Radeon","R9 360",3839,!0,!1],["AMD","FirePro","M6100",3837,!1,!1],["Nvidia","GeForce","GTX 750",3810,!0,!1],["AMD","Radeon","HD 7790",3759,!0,!1],["Nvidia","GeForce","GT 750M SLI",3703,!1,!0],["Nvidia","Quadro","K4100M",3654,!1,!1],["AMD","Radeon","HD 5870",3613,!0,!1],["Nvidia","GeForce","GTX 950M",3568,!1,!1],["AMD","Radeon","HD 6950",3553,!0,!1],["Nvidia","Quadro","M1000M",3517,!1,!1],["Nvidia","GeForce","GTX 480",3480,!0,!1],["AMD","Radeon","R9 M385X",3352,!1,!1],["AMD","Radeon","R9 M280X",3349,!1,!1],["Nvidia","GeForce","GTX 770M",3347,!1,!1],["Nvidia","GeForce","GTX 560 Ti",3256,!0,!1],["Nvidia","GeForce","GTX 650 Ti",3329,!0,!1],["Nvidia","Quadro","K4000",3229,!0,!1],["AMD","Radeon","HD 6870",3204,!0,!1],["Nvidia","GeForce","GTX 850M",3118,!1,!1],["AMD","Radeon","HD 5850",3037,!0,!1],["AMD","Radeon","HD 7770",3016,!0,!1],["Nvidia","GeForce","GTX 560",2886,!0,!1],["Nvidia","GeForce","945M",2884,!1,!1],["Nvidia","GeForce","GTX 675MX",2831,!0,!1],["Nvidia","GeForce","GTX 470",2802,!0,!1],["Nvidia","Quadro","K5000M",2797,!1,!1],["AMD","Radeon","HD 5830",2778,!0,!1],["Nvidia","GeForce","GTX 460",2762,!0,!1],["AMD","Radeon","HD 6850",2707,!0,!1],["Nvidia","Quadro","6000",2563,!0,!1],["AMD","Radeon","HD 6990M",2560,!1,!1],["Nvidia","GeForce","GTX 580M",2509,!1,!1],["Nvidia","GeForce","GTX 765M",2479,!1,!1],["AMD","Radeon","HD 7870M",2478,!1,!1],["AMD","Radeon","R9 M370X",2419,!1,!1],["Nvidia","Quadro","K620",2381,!0,!1],["Nvidia","Quadro","K3100M",2381,!1,!1],["Nvidia","GeForce","845M",2362,!1,!1],["Nvidia","GeForce","GTX 745",2349,!0,!1],["Nvidia","GeForce","GTX 675M",2331,!1,!1],["Nvidia","GeForce","GTX 485M",2330,!1,!1],["AMD","FirePro","M6000",2398,!1,!1],["AMD","FirePro","M5100",2327,!1,!1],["Nvidia","GeForce","GTX 760M",2271,!1,!1],["Nvidia","GeForce","GTX 465",2253,!0,!1],["AMD","Radeon","R8 M445DX",2235,!1,!0],["AMD","Radeon","HD 7750",2215,!0,!1],["Nvidia","Quadro","K4000M",2199,!1,!1],["AMD","Radeon","HD 6970M",2186,!1,!1],["AMD","Radeon","HD 8870M",2168,!1,!1],["AMD","Radeon","R7 250",2147,!0,!1],["AMD","FirePro","W5130M",2121,!1,!1],["Nvidia","GeForce","GT 755M",2105,!1,!1],["AMD","Radeon","HD 5770",2072,!0,!1],["Nvidia","GeForce","GT 740",2042,!0,!1],["Nvidia","GeForce","Surface Book",2031,!1,!1],["Nvidia","GeForce","GTX 570M",2020,!1,!0],["Nvidia","GeForce","GTX 650",2002,!0,!1],["AMD","Radeon","R9 M265X",1997,!1,!1],["AMD","Radeon","HD 6770",1951,!0,!1],["Nvidia","GeForce","GTX 670M",1950,!1,!1],["AMD","Radeon","R7 M275DX",1931,!1,!0],["Intel","Iris Pro","580",1903,!0,!1],["AMD","Radeon","R9 M275",1885,!1,!1],["Nvidia","GeForce","GTX 550 Ti",1881,!0,!1],["Nvidia","Quadro","5000",1873,!0,!1],["AMD","Radeon","HD 8850M",1845,!1,!1],["Intel","Iris Pro","6200",1773,!1,!1],["AMD","FirePro","W4170M",1766,!1,!1],["AMD","Radeon","R7 M370",1760,!1,!1],["Nvidia","GeForce","GTX 660M",1751,!1,!1],["Nvidia","GeForce","GT 640",1735,!0,!1],["Nvidia","GeForce","940MX",1730,!1,!1],["AMD","Radeon","HD 8790M",1727,!1,!1],["Nvidia","GeForce","GTS 450",1724,!0,!1],["AMD","Radeon","R8 M365DX",1716,!1,!0],["AMD","FirePro","M4000",1713,!1,!1],["AMD","Radeon","HD 7730",1689,!0,!1],["AMD","Radeon","R9 M375",1679,!1,!1],["AMD","FirePro","W4100",1665,!0,!1],["Nvidia","GeForce","GTX 470M",1664,!1,!1],["Nvidia","Quadro","4000M",1663,!1,!1],["Intel","Iris Graphics","550",1638,!1,!1],["Nvidia","Quadro","K620M",1621,!1,!1],["Nvidia","Quadro","M500M",1610,!1,!1],["Nvidia","Quadro","K2100M",1609,!1,!1],["AMD","Radeon","HD 6750",1594,!0,!1],["AMD","FirePro","W4190M",1588,!1,!1],["Nvidia","GeForce","940M",1582,!1,!1],["Nvidia","GeForce","GT 730",1582,!0,!1],["Nvidia","GeForce","GT 750M",1574,!1,!1],["Nvidia","GeForce","840M",1563,!1,!1],["Nvidia","GeForce","GT 745M",1549,!1,!1],["Nvidia","GeForce","GTX 480M",1541,!1,!1],["Intel","Iris Pro","5200",1536,!1,!1],["AMD","Radeon","R6 M340DX",1472,!1,!0],["Nvidia","GeForce","930M",1442,!1,!1],["Intel","Iris Graphics","540",1440,!1,!1],["Nvidia","GeForce","GTX 560M",1435,!1,!1],["Nvidia","GeForce","GT 650M",1420,!1,!1],["Nvidia","GeForce","830M",1403,!1,!1],["AMD","Radeon","R7 M260X",1396,!1,!1],["Nvidia","Quadro","4000",1366,!0,!1],["Nvidia","Quadro","K2000M",1344,!1,!1],["AMD","Radeon","R5 Bristol Ridge",1337,!1,!1],["AMD","Radeon","R7 M265",1329,!1,!1],["Nvidia","Quadro","K1100M",1326,!1,!1],["Nvidia","GeForce","920MX",1282,!1,!1],["AMD","Radeon","HD 8750M",1276,!1,!1],["Nvidia","Quadro","2000",1272,!0,!1],["Nvidia","Quadro","3000M",1269,!1,!1],["AMD","Radeon","HD 6670",1240,!0,!1],["Nvidia","GeForce","GT 640M ",1225,!1,!1],["AMD","Radeon","R7 M340",1212,!1,!1],["AMD","Radeon","HD 8690M",1210,!1,!1],["AMD","Radeon","R7 M440",1205,!1,!1],["Intel","HD Graphics","530",1202,!1,!1],["AMD","Radeon","R7 M270",1184,!1,!1],["AMD","Radeon","R7 M460",1177,!1,!1],["Nvidia","GeForce","GTX 460M",1162,!1,!1],["Nvidia","GeForce","920M",1161,!1,!1],["AMD","Radeon","R7 240",1153,!0,!1],["Nvidia","GeForce","GT 645M",1151,!1,!1],["Nvidia","GeForce","GT 740M",1151,!1,!1],["AMD","Radeon","HD 8730M",1150,!1,!1],["Nvidia","GeForce","825M",1150,!1,!1],["AMD","Radeon","R7 Carrizo",1137,!1,!1],["AMD","Radeon","R7 M360",1122,!1,!1],["AMD","Radeon","R6 M255DX",1115,!1,!0],["AMD","FirePro","W2100",1085,!0,!1],["Nvidia","Quadro","2000M",1076,!1,!1],["AMD","Radeon","R5 M255",1064,!1,!1],["Nvidia","GeForce","GT 730M",1061,!1,!1],["AMD","Radeon","R7 M260",1057,!1,!1],["AMD","Radeon","HD 8650M",1050,!1,!1],["Intel","HD Graphics","6000",1033,!1,!1],["Nvidia","GeForce","GT 735M",1023,!1,!1],["Intel","Iris Graphics","6100",1020,!1,!1],["Intel","HD Graphics","5600",991,!1,!1],["Nvidia","GeForce","GT 555M",922,!1,!1],["AMD","Radeon","R5 M240",921,!1,!1],["AMD","Radeon","R5 M335",911,!1,!1],["AMD","Radeon","HD 8650G",905,!1,!1],["Nvidia","Quadro","K600",900,!0,!1],["Intel","Iris Graphics","5100",878,!1,!1],["AMD","Radeon","HD 6570",864,!0,!1],["AMD","FirePro","M4100",857,!1,!1],["Nvidia","Quadro","K1000M",857,!1,!1],["Nvidia","GeForce","GT 635M",851,!1,!1],["AMD","Radeon","R7 Kaveri",851,!1,!1],["AMD","Radeon","R5 M330",848,!1,!1],["Intel","HD Graphics","520",844,!1,!1],["Nvidia","GeForce","820M",829,!1,!1],["AMD","Radeon","HD 8670M",829,!1,!1],["Nvidia","GeForce","GT 625M",827,!1,!1],["AMD","Radeon","HD 7670M",824,!1,!1],["Nvidia","GeForce","GT 720M",822,!1,!1],["Nvidia","GeForce","GT 720",811,!0,!1],["Nvidia","GeForce","GT 550M",796,!1,!1],["AMD","Radeon","HD 8550G",792,!1,!1],["AMD","Radeon","HD 7560D",791,!0,!1],["AMD","Radeon","HD 8570M",790,!1,!1],["Nvidia","GeForce","GT 620",772,!0,!1],["AMD","Radeon","R5 M230",771,!1,!1],["AMD","Radeon","R6 Kaveri",770,!1,!1],["Nvidia","GeForce","710M",768,!1,!1],["Nvidia","Quadro","K610M",755,!1,!1],["Nvidia","Quadro","1000M",751,!1,!1],["Intel","HD Graphics","515",748,!1,!1],["Nvidia","GeForce","GT 620M",737,!1,!1],["Nvidia","GeForce","GT 430",735,!0,!1],["Intel","HD Graphics","5000",734,!1,!1],["Nvidia","GeForce","GT 540M",728,!1,!1],["Nvidia","GeForce","GT 630M",719,!1,!1],["AMD","Radeon","HD 7620G",716,!1,!1],["Nvidia","Quadro","600",710,!0,!1],["Nvidia","NVS","5200M",704,!1,!1],["AMD","Radeon","HD 8470D",670,!0,!1],["Nvidia","GeForce","GT 630",665,!0,!1],["Intel","HD Graphics","5500",663,!1,!1],["Intel","HD Graphics","4600",635,!1,!1],["AMD","Radeon","HD 7610M",605,!1,!1],["AMD","Radeon","R5 Kaveri",572,!1,!1],["Intel","HD Graphics","4400",571,!1,!1],["AMD","Radeon","HD 7570M",569,!1,!1],["AMD","Radeon","HD 7550M",569,!1,!1],["Nvidia","GeForce","GT 525M",545,!1,!1],["AMD","Radeon","R5 Beema",524,!1,!1],["AMD","Radeon","HD 7500G",512,!1,!1],["AMD","Radeon","R4 Beema",494,!1,!1],["Intel","HD Graphics","4000",480,!1,!1],["Intel","HD Graphics","5300",478,!1,!1],["AMD","Radeon","HD 8610G",475,!1,!1],["AMD","Radeon","HD 8450G",464,!1,!1],["AMD","Radeon","HD 6530D",452,!0,!1],["AMD","Radeon","HD 6450",450,!0,!1],["AMD","Radeon","HD 7480D",445,!0,!1],["AMD","Radeon","R3 Beema",432,!1,!1],["AMD","Radeon","HD 6480G",416,!1,!1],["Nvidia","GeForce","GT 520M",413,!1,!1],["Nvidia","GeForce","GT 610",406,!0,!1],["AMD","Radeon","HD 8400",401,!0,!1],["Intel","HD Graphics","4200",395,!1,!1],["Nvidia","GeForce","GT 520",389,!0,!1],["AMD","Radeon","HD 8350G",388,!1,!1],["AMD","Radeon","HD 7470M",384,!1,!1],["Intel","HD Graphics","Haswell",355,!1,!1],["AMD","Radeon","HD 8330",352,!0,!1],["AMD","Radeon","HD 7420G",343,!0,!1],["AMD","Radeon","HD 8280",328,!0,!1],["AMD","Radeon","HD 7400G",328,!0,!1],["Intel","HD Graphics","2500",318,!1,!1],["AMD","Radeon","HD 8240",290,!0,!1],["Intel","HD Graphics","Ivy Bridge",285,!1,!1],["AMD","Radeon","HD 8250",253,!0,!1],["Intel","HD Graphics","Braswell",233,!1,!1],["AMD","Radeon","HD 8210",227,!0,!1],["AMD","Radeon","HD 7340",224,!1,!1],["AMD","Radeon","HD 7310",192,!1,!1],["Intel","HD Graphics","Bay Trail",150,!1,!1],["AMD","Radeon","HD 8180",145,!0,!1]],r=function(){for(var e=0,r=a.length;r>e;e++){var i=a[e],s=i[0],l=i[1],d=i[2],h=i[3],c=i[4],u=s+" "+l+" "+d,f=d,p=" (notebook)";
c&&(p=" (desktop)"),("Intel"===s||"NVS"===l||"FirePro"===l||"Quadro"===l)&&(f=l+" "+d);var m=o(u);t[m]={rawScore:h,formattedScore:n(h),fullName:u,shortName:f,type:p,vendor:s.toLowerCase()}}},i=function(e){var t=e.replace(/\((R|TM)\)/,"");return t=t.replace("ANGLE","").replace("Corporation ","").replace(/Direct3D\w*/,"").replace(/vs_\w*/,"").replace(/ps_\w*/,"").replace(/[\(\)]/g,""),t=t.replace("/PCIe/SSE2",""),t=t.replace(/OpenGL \d*\.\d* compatibility/,""),t.trim()},o=function(e){return e.toUpperCase()},n=function(e){for(var t=e.toString(),a=[],r=0,i=0,o=t.length;o>r;r++,i++){var n=t[o-1-r];a[i]=n,r%3===2&&o-1>r&&(i+=1,a[i]=",")}return a.reverse().join("")};this.detectGPU=function(){var a=null;if(void 0===e){e="";try{if(void 0!==window.WebGLRenderingContext){var r=document.createElement("canvas"),n=r.getContext("webgl")||r.getContext("experimental-webgl");if(void 0!==n){var s=n.getExtension("WEBGL_debug_renderer_info");if(void 0!==s){var l=n.getParameter(s.UNMASKED_RENDERER_WEBGL),d=i(l);!(d.toLowerCase().indexOf("geforce")>=0||d.toLowerCase().indexOf("quadro")>=0)||d.toLowerCase().indexOf("nvidia")>=0||(d="NVIDIA "+d),e=d}}}}catch(h){}}if(""!==e){var c=o(e);void 0!==t[c]&&(a=t[c])}return a},r()};!function(){for(var e=0,t=["ms","moz","webkit","o"],a=0;a<t.length&&!window.requestAnimationFrame;++a)window.requestAnimationFrame=window[t[a]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[a]+"CancelAnimationFrame"]||window[t[a]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var a=Date.now(),r=Math.max(0,16-(a-e)),i=window.setTimeout(function(){t(a+r)},r);return e=a+r,i}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var t=String(e),a=this.lastIndexOf(t);return(a>-1&&a)===this.length-t.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(e,t,a,r,i,o){function n(e){var t,a=e.length,i=this,o=0,n=i.i=i.j=0,s=i.S=[];for(a||(e=[a++]);r>o;)s[o]=o++;for(o=0;r>o;o++)s[o]=s[n=p&n+e[o%a]+(t=s[o])],s[n]=t;(i.g=function(e){for(var t,a=0,o=i.i,n=i.j,s=i.S;e--;)t=s[o=p&o+1],a=a*r+s[p&(s[o]=s[n=p&n+t])+(s[n]=t)];return i.i=o,i.j=n,a})(r)}function s(e,t){var a,r=[],i=(typeof e)[0];if(t&&"o"==i)for(a in e)try{r.push(s(e[a],t-1))}catch(o){}return r.length?r:"s"==i?e:e+"\x00"}function l(e,t){for(var a,r=e+"",i=0;i<r.length;)t[p&i]=p&(a^=19*t[p&i])+r.charCodeAt(i++);return h(t)}function d(a){try{return e.crypto.getRandomValues(a=new Uint8Array(r)),h(a)}catch(i){return[+new Date,e,e.navigator.plugins,e.screen,h(t)]}}function h(e){return String.fromCharCode.apply(0,e)}var c=a.pow(r,i),u=a.pow(2,o),f=2*u,p=r-1;a.seedrandom=function(e,o){var p=[],m=l(s(o?[e,h(t)]:0 in arguments?e:d(),3),p),v=new n(p);return l(h(v.S),t),a.srandom=function(){for(var e=v.g(i),t=c,a=0;u>e;)e=(e+a)*r,t*=r,a=v.g(1);for(;e>=f;)e/=2,t/=2,a>>>=1;return(e+a)/t},m},l(a.random(),t)}(this,[],Math,256,6,52),THREE.MirrorShader={extensions:{OES_standard_derivatives:!0},uniforms:THREE.UniformsUtils.merge([{mirrorSampler:{type:"t",value:null},textureMatrix:{type:"m4",value:new THREE.Matrix4},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},mipSampler:{type:"t",value:null},normalSampler:{type:"t",value:null},normalScale:{type:"f",value:1},glossSampler:{type:"t",value:null},gloss:{type:"f",value:.5},specularColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},depthSampler:{type:"t",value:null},heightSampler:{type:"t",value:null},foamSampler:{type:"t",value:null},displacementScale:{type:"f",value:1},matProjInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},matViewInverse:{type:"m4",value:new THREE.Matrix4,shared:!0},refractionSampler:{type:"t",value:null,shared:!0},refractionDepthSampler:{type:"t",value:null,shared:!0},refractionScale:{type:"f",value:.075},viewSize:{type:"v2",value:new THREE.Vector2(800,600),shared:!0},globalLightScale:{type:"f",value:.1},time:{type:"f",value:0}},THREE.UniformsLib.shadowmap,THREE.UniformsLib.heightFog,THREE.UniformsLib.lights]),vertexShader:["#ifdef USE_DISPLACEMENT","uniform float displacementScale;","uniform float time;","uniform sampler2D normalSampler;","uniform sampler2D heightSampler;","#endif","uniform vec4 offsetRepeat;","varying vec3 vNormal;","varying vec3 vViewPosition;","varying vec4 vWorldPosition;","varying vec2 vUv;","varying vec2 vUv2;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {","vec3 newPosition = position;","vec3 newNormal = normal;","#ifdef USE_DISPLACEMENT","const float displacementRepeat = 2.25;","vec2 uvD = displacementRepeat * uv;","vec2 uvD1 = 2.0 * ( uvD + vec2( 0.0, 0.5 * time * 0.025 ) );","vec2 uvD2 = 0.9 * ( uvD + vec2( 0.5 * time * 0.035, 0.0 ) );","vec2 uvD3 = 0.8 * ( uvD + vec2( 0.0, -0.5 * time * 0.045 ) );","vec2 uvD4 = 0.7 * ( uvD + vec2( -0.5 * time * 0.055, 0.0 ) );","vec4 normalMap1 = texture2D( normalSampler, uvD1 );","vec4 normalMap2 = texture2D( normalSampler, uvD2 );","vec4 normalMap3 = texture2D( normalSampler, uvD3 );","vec4 normalMap4 = texture2D( normalSampler, uvD4 );","vec3 normalMapA = mix( normalMap1.xyz, normalMap2.xyz, 0.5 );","vec3 normalMapB = mix( normalMap3.xyz, normalMap4.xyz, 0.5 );","vec3 normalMap = mix( normalMapA.xyz, normalMapB.xyz, 0.75 );","normalMap.xyz = normalMap.xyz * 2.0 - 1.0;","vec4 heightMap1 = texture2D( heightSampler, uvD1 );","vec4 heightMap2 = texture2D( heightSampler, uvD2 );","vec4 heightMap3 = texture2D( heightSampler, uvD3 );","vec4 heightMap4 = texture2D( heightSampler, uvD4 );","vec3 heightMapA = mix( heightMap1.xyz, heightMap2.xyz, 0.5 );","vec3 heightMapB = mix( heightMap3.xyz, heightMap4.xyz, 0.5 );","vec3 heightMap = mix( heightMapA.xyz, heightMapB.xyz, 0.75 );","heightMap.xyz = heightMap.xyz * 2.0 - 1.0;","#if defined( WATER_SURFACE_PLANE )","newPosition.z += heightMap.y * displacementScale;","newNormal = normalMap.xyz;","#elif defined ( WATER_SURFACE_SPHERE )","newPosition += normalize( normal ) * heightMap.y * displacementScale;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( newPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( newPosition, 1.0 );","vec3 transformedNormal = normalMatrix * newNormal;","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition;","vViewPosition = -mvPosition.xyz;","vNormal = normalize( transformedNormal );","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","vUv2 = uv;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#ifdef USE_REFLECTION","uniform sampler2D mirrorSampler;","uniform mat4 textureMatrix;","#endif","#ifdef USE_NORMALMAP","uniform sampler2D normalSampler;","uniform float normalScale;","#endif","uniform sampler2D mipSampler;","#ifdef USE_GLOSSMAP","uniform sampler2D glossSampler;","#endif","uniform float opacity;","uniform float gloss;","uniform vec3 specularColor;","uniform float globalLightScale;","#ifdef USE_FOAM","uniform sampler2D depthSampler;","uniform sampler2D foamSampler;","#endif","#ifdef ANIMATE_NORMALS","uniform float time;","#endif","uniform mat4 matProjInverse;","uniform mat4 matViewInverse;","uniform sampler2D refractionDepthSampler;","uniform sampler2D refractionSampler;","uniform float refractionScale;","uniform vec2 viewSize;","varying vec4 vWorldPosition;","varying vec2 vUv;","varying vec2 vUv2;",THREE.ShaderChunk.utils_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.height_fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,"float fresnelTerm( vec3 normal, vec3 eyeVec ) {","float R0 = 0.02;","float refractionStrength = 0.0;","float angle = 1.0 - saturate( dot( normal, eyeVec ) );","float fresnel = angle * angle;","fresnel = fresnel * fresnel;","fresnel = fresnel * angle;","return saturate( fresnel * ( 1.0 - saturate( R0 ) ) + R0 - refractionStrength );","}","float fresnelDielectric( vec3 Incoming, vec3 Normal, float eta ) {","float c = abs(dot(Incoming, Normal));","float g = eta * eta - 1.0 + c * c;","float result;","if ( g > 0.0 ) {","g = sqrt(g);","float A =(g - c)/(g + c);","float B =(c *(g + c)- 1.0)/(c *(g - c)+ 1.0);","result = 0.5 * A * A *(1.0 + B * B);","} else","result = 1.0;","return result;","}","#if defined( USE_NORMALMAP ) || defined( USE_NORMALGLOSSMAP )","vec3 perturbNormal2Arb( const in vec3 eye_pos, const in vec3 surf_norm, const in vec3 normal_pixel, const in vec2 texCoord ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( texCoord.st );","vec2 st1 = dFdy( texCoord.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = normal_pixel * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif","float unpackDepth2( const in vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","void main() {","vec4 color = vec4( 0.0, 0.0, 0.0, 1.0 );","vec4 worldPosition = vWorldPosition;","vec3 viewPosition = normalize( vViewPosition );","vec3 vertexPosition = -vViewPosition.xyz;","vec3 eyeVector = normalize( -vertexPosition );","vec3 normal = normalize( vNormal );","#ifdef USE_NORMALMAP","#ifdef ANIMATE_NORMALS","vec4 normalMap1 = texture2D( normalSampler, 2.0 * ( vUv + vec2( 0.0, time * 0.025 ) ) );","vec4 normalMap2 = texture2D( normalSampler, 0.9 * ( vUv + vec2( time * 0.035, 0.0 ) ) );","vec4 normalMap3 = texture2D( normalSampler, 0.8 * ( vUv + vec2( 0.0, -time * 0.045 ) ) );","vec4 normalMap4 = texture2D( normalSampler, 0.7 * ( vUv + vec2( -time * 0.055, 0.0 ) ) );","vec3 normalMapA = mix( normalMap1.xyz, normalMap2.xyz, 0.5 );","vec3 normalMapB = mix( normalMap3.xyz, normalMap4.xyz, 0.5 );","vec3 normalMap = mix( normalMapA.xyz, normalMapB.xyz, 0.5 );","#else","vec3 normalMap = texture2D( normalSampler, vUv ).xyz;","#endif","normal = perturbNormal2Arb( -vViewPosition, normal, normalMap.xyz, vUv );","vec4 worldNormal = matViewInverse * vec4( normal, 0.0 );","worldPosition.xyz += normalScale * worldNormal.xyz;","#endif","vec3 fresnelEnv = specularColor + ( 1.0 - specularColor ) * pow( max( 1.0 - max( dot( eyeVector, normal ), 0.0 ), 0.0 ), 5.0 );","#ifdef USE_REFLECTION","float modulatedGloss = gloss;","#ifdef USE_GLOSSMAP","vec4 glossMap = texture2D( glossSampler, vUv );","modulatedGloss *= glossMap.x;","#endif","vec4 mirrorCoord = textureMatrix * worldPosition;","const float mipUnit = 255.0 / 16.0;","float maxMipSpecular = 10.0;","float mipLevelMinification  = mipUnit * texture2DProj( mipSampler, mirrorCoord ).x;","float mipLevelMagnification = mipUnit * texture2DProj( mipSampler, mirrorCoord, maxMipSpecular - 1.0 ).x;","float mipLevel;","if ( mipLevelMinification == 0.0 ) {","mipLevel = mipLevelMagnification - ( maxMipSpecular - 1.0 );","} else {","mipLevel = mipLevelMinification;","}","float maxMipDownscale = ( maxMipSpecular - 2.0 );","float mipBias = max( ( maxMipDownscale * ( 1.0 - modulatedGloss ) ) - mipLevel, 0.0 );","color = texture2DProj( mirrorSampler, mirrorCoord, mipBias );","color.rgb *= fresnelEnv;","#endif",THREE.ShaderChunk.shadowmap_fragment,"vec3 globalLightFactor = vec3( 0.0 );","float shininess = gloss * 2048.0;","float roughness = saturate( sqrt( 8.0 / ( shininess + 7.0 ) ) );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec3 lightDirection = directionalLightDirectionVS[ i ];","vec3 lightVector = normalize( lightDirection );","float dotLNUnclamped = dot( normal, lightVector );","float dotLN = max( dotLNUnclamped, 0.0 );","vec3 dirHalfVector = normalize( lightVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dotLH = max( dot( lightVector, dirHalfVector ), 0.0 );","vec3 fresnel = specularColor + ( 1.0 - specularColor ) * pow( 1.0 - dotLH, 5.0 );","vec3 specularTerm = GGX_Specular( roughness, normal, dirHalfVector, eyeVector, lightVector ) * ( fresnel * dotLN ) * directionalLightColor[ i ];","#ifdef USE_SHADOWMAP","int shadowIndex = directionalLightPars[ i ];","if ( ( i + DIR_INDEX_OFFSET ) == shadowIndex ) {","specularTerm *= occlusion[ i ];","}","#endif","color.rgb += specularTerm;","globalLightFactor += directionalLightColor[ i ];","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec3 lightDirection = hemisphereLightDirectionVS[ i ];","vec3 lightVector = normalize( lightDirection.xyz );","vec3 halfVector = normalize( lightVector + eyeVector );","vec3 fresnelHemi = EnvironmentBRDF( gloss, dot( eyeVector, halfVector ), specularColor );","vec3 R = reflect( -eyeVector, normal );","R = normalize( R );","float hemiSpecularWeight = clamp( dot( R, lightVector ) * 0.5 + 0.5, 0.0, 1.0 );","vec3 specularHemi = fresnelHemi * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiSpecularWeight );","globalLightFactor += hemisphereLightSkyColor[ i ];","color.rgb += specularHemi;","}","#endif","globalLightFactor *= globalLightScale;","mgl_FragColor = color;","float fresnelStrength = length( fresnelEnv );","fresnelStrength = min( fresnelStrength, 1.0 );","float refraction = mix( opacity, 1.0, fresnelStrength );","#ifdef USE_FOG","vec2 fogNearFar = vec2( 100.0, 1000.0 );","vec3 fogColor = vec3( 0.46589057296861297, 0.72636950531078, 0.8411882881372813 );","float depth2 = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = smoothstep( fogNearFar.x, fogNearFar.y, depth2 );","mgl_FragColor = mix( mgl_FragColor, vec4( fogColor, mgl_FragColor.a ), fogFactor );","#endif","#ifdef USE_SHADOWMAP","const float shadowLightening = 1.125;","#endif","#ifdef USE_HEIGHT_FOG","vec2 screenUV = gl_FragCoord.xy / viewSize;","vec2 screenUV2 = screenUV;","#ifdef USE_NORMALMAP","screenUV = clamp( screenUV + ( normalMap.xy * 2.0 - 1.0 ) * refractionScale, 0.0, 1.0 );","#endif","vec3 refractionColor = texture2D( refractionSampler, screenUV ).rgb;","#ifdef USE_MRT","vec4 packedDepth = texture2D( refractionDepthSampler, screenUV );","float refractionDepth = unpackDepth2( packedDepth );","#else","float refractionDepth = texture2D( refractionDepthSampler, screenUV ).w;","#endif","vec2 xy = screenUV * 2.0 - 1.0;","vec4 vertexPositionProjected = vec4( xy, refractionDepth, 1.0 );","vec4 vertexPositionVS = matProjInverse * vertexPositionProjected;","vertexPositionVS.xyz /= vertexPositionVS.w;","vertexPositionVS.w = 1.0;","vec4 vertexPositionWS = matViewInverse * vertexPositionVS;","#if defined( WATER_SURFACE_PLANE )","if ( vertexPositionWS.y > worldPosition.y ) {","#elif defined ( WATER_SURFACE_SPHERE )","float waterRadius = length( worldPosition.xyz );","float landRadius = length( vertexPositionWS.xyz );","if ( landRadius > waterRadius ) {","#endif","refractionColor = texture2D( refractionSampler, screenUV2 ).rgb;","#ifdef USE_MRT","refractionDepth = unpackDepth2( texture2D( refractionDepthSampler, screenUV2 ) );","#else","refractionDepth = texture2D( refractionDepthSampler, screenUV2 ).w;","#endif","xy = screenUV2 * 2.0 - 1.0;","vertexPositionProjected = vec4( xy, refractionDepth, 1.0 );","vertexPositionVS = matProjInverse * vertexPositionProjected;","vertexPositionVS.xyz /= vertexPositionVS.w;","vertexPositionVS.w = 1.0;","vertexPositionWS = matViewInverse * vertexPositionVS;","}","#if defined( WATER_SURFACE_PLANE )","vec3 u = vertexPositionWS.xyz - cameraPosition;","vec3 w = cameraPosition - vec3( 0.0, fogHeight, 0.0 );","vec3 n = vec3( 0.0, 1.0, 0.0 );","float D = dot( n, u );","float N = -dot( n, w );","float sI = N / D;","vec3 intersectionPosition = cameraPosition + sI * u;","float fogThickness = length( intersectionPosition - vertexPositionWS.xyz );","float fogThickness2 = intersectionPosition.y - vertexPositionWS.y;","if ( vertexPositionWS.y > fogHeight ) {","fogThickness = 0.0;","}","if ( cameraPosition.y < fogHeight ) {","}","#elif defined ( WATER_SURFACE_SPHERE )","vec3 intersectionPosition = worldPosition.xyz;","float fogThickness = length( intersectionPosition - vertexPositionWS.xyz );","float fogThickness2 = waterRadius - landRadius;","if ( landRadius > fogHeight ) {","}","#endif","float r1 = clamp( fogFadeSpeed * fogThickness / fogVisibilityDistance, 0.0, 1.0 );","vec3 r2 = clamp( fogThickness2 / fogRgbExtinctionDistance, 0.0, 1.0 );","refractionColor.rgb = mix( mix( refractionColor.rgb, fogShallowDepthColor * globalLightFactor, r1 ), fogDeepDepthColor * globalLightFactor, r2 );","mgl_FragColor.rgb = mix( mgl_FragColor.rgb, refractionColor, 1.0 - refraction );","#endif","#ifdef USE_FOAM","vec4 foam = texture2D( foamSampler, 1.5 * vUv + normal.xz * 0.05 );","#if defined( WATER_SURFACE_PLANE )","float foamStrength = 1.0 - clamp( ( worldPosition.y - vertexPositionWS.y ) * 0.21, 0.0, 1.0 );","#elif defined ( WATER_SURFACE_SPHERE )","float foamStrength = 1.0 - clamp( abs( waterRadius - landRadius ) * 0.21, 0.0, 1.0 );","#endif","mgl_FragColor.rgb = mix( mgl_FragColor.rgb, foam.rgb * globalLightFactor * 2.0, foamStrength );","#endif","mgl_FragColor.a = 1.0;","}"].join("\n")},THREE.MirrorSurface=function(e,t){THREE.Node.call(this),t=t||{};var a=void 0!==t.textureWidth?t.textureWidth:512,r=void 0!==t.textureHeight?t.textureHeight:512;this.clipBias=void 0!==t.clipBias?t.clipBias:0;var i=void 0!==t.opacity?t.opacity:1,o=new THREE.Color(void 0!==t.specular?t.specular:15658734),n=void 0!==t.glossMap?t.glossMap:null,s=void 0!==t.gloss?t.gloss:1,l=void 0!==t.normalMap?t.normalMap:null,d=void 0!==t.normalScale?t.normalScale:1,h=void 0!==t.offset?t.offset:[0,0],c=void 0!==t.repeat?t.repeat:[1,1];this.renderer=e,this.mirrorNeedsUpdate=!0,this.mirrorCamera=new THREE.PerspectiveCamera,this.textureMatrix=new THREE.Matrix4,this.mirrorPlane=new THREE.Plane,this.clipPlane=new THREE.Vector4,this.mirrorNormal=new THREE.Vector3(0,0,1);var u={stencilBuffer:!1};this.texture=new THREE.RenderTarget(a,r,u),this.tempTexture=new THREE.RenderTarget(a,r,u),THREE.Math.isPowerOfTwo(a)&&THREE.Math.isPowerOfTwo(r)||(this.texture.generateMipmaps=!1,this.tempTexture.generateMipmaps=!1);var f=THREE.MirrorShader,p=THREE.UniformsUtils.clone(f.uniforms),m={};n&&(m.USE_GLOSSMAP=!0),l&&(m.USE_NORMALMAP=!0),this.material=new THREE.ShaderMaterial({defines:m,extensions:f.extensions,fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:p}),this.material.lights=!0,p.mirrorSampler.value=this.texture,p.textureMatrix.value=this.textureMatrix,p.opacity.value=i,p.specularColor.value=o,p.normalSampler.value=l,p.normalScale.value=d,p.glossSampler.value=n,p.gloss.value=s;var v=THREE.ImageUtils.generateMipTexture(a,r);v.wrapS=v.wrapT=THREE.RepeatWrapping,p.mipSampler.value=v,p.offsetRepeat.value.set(h[0],h[1],c[0],c[1]),this.q=new THREE.Vector4,this.c=new THREE.Vector4,this.reflectPosition=new THREE.Vector3,this.reflectTarget=new THREE.Vector3,this.lookAtPosition=new THREE.Vector3(0,0,-1),this.mirrorWorldPosition=new THREE.Vector3,this.cameraWorldPosition=new THREE.Vector3,this.rotationMatrix=new THREE.Matrix4},THREE.MirrorSurface.prototype=Object.create(THREE.Node.prototype),THREE.MirrorSurface.prototype.createMaterial=function(e){e=e||{};var t=THREE.MirrorShader,a=THREE.UniformsUtils.clone(t.uniforms),r=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:a});return a.textureMatrix.value=this.textureMatrix,a.mirrorSampler.value=this.texture,r},THREE.MirrorSurface.prototype.updateMirror=function(e){this.material.uniforms.time.value+=.01,this.updateMatrixWorld(),e.updateMatrixWorld(),this.updateMirrorCamera(e),this.updateTextureMatrix(),this.updateMirrorCameraClipPlane()},THREE.MirrorSurface.prototype.updateMirrorCamera=function(e){this.mirrorWorldPosition.copy(this.matrixWorld.getPosition()),this.cameraWorldPosition.copy(e.matrixWorld.getPosition()),this.rotationMatrix.extractRotation(this.matrixWorld),this.mirrorNormal.set(0,0,1),this.rotationMatrix.rotateAxis(this.mirrorNormal);var t=this.reflectPosition;t.sub(this.mirrorWorldPosition,this.cameraWorldPosition),t.reflect(this.mirrorNormal),t.addSelf(this.mirrorWorldPosition),this.rotationMatrix.extractRotation(e.matrixWorld),this.lookAtPosition.set(0,0,-1),this.rotationMatrix.multiplyVector3(this.lookAtPosition),this.lookAtPosition.addSelf(this.cameraWorldPosition);var a=this.reflectTarget;a.sub(this.mirrorWorldPosition,this.lookAtPosition),a.reflect(this.mirrorNormal),a.addSelf(this.mirrorWorldPosition),this.up.set(0,-1,0),this.rotationMatrix.rotateAxis(this.up);var r=this.up.reflect(this.mirrorNormal);this.mirrorCamera.fov=e.fov,this.mirrorCamera.aspect=e.aspect,this.mirrorCamera.near=e.near,this.mirrorCamera.far=e.far,this.mirrorCamera.position.copy(t),this.mirrorCamera.up=r,this.mirrorCamera.lookAt(a),this.mirrorCamera.updateProjectionMatrix(),this.mirrorCamera.updateMatrixWorld(),this.mirrorCamera.matrixWorldInverse.getInverse(this.mirrorCamera.matrixWorld)},THREE.MirrorSurface.prototype.updateTextureMatrix=function(){this.textureMatrix.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),this.textureMatrix.multiplySelf(this.mirrorCamera.projectionMatrix),this.textureMatrix.multiplySelf(this.mirrorCamera.matrixWorldInverse)},THREE.MirrorSurface.prototype.updateMirrorCameraClipPlane=function(){var e=this.mirrorCamera,t=this.mirrorPlane,a=this.clipPlane,r=e.projectionMatrix,i=r.elements,o=this.q,n=this.c,s=THREE.Math.sign;t.setFromNormalAndCoplanarPoint(this.mirrorNormal,this.mirrorWorldPosition),t.applyMatrix4(e.matrixWorldInverse),a.set(t.normal.x,t.normal.y,t.normal.z,t.constant),o.x=(s(a.x)+i[8])/i[0],o.y=(s(a.y)+i[9])/i[5],o.z=-1,o.w=(1+i[10])/i[14],n=a.multiplyScalar(2/a.dot(o)),i[2]=n.x,i[6]=n.y,i[10]=n.z+1-this.clipBias,i[14]=n.w},THREE.MirrorSurface.prototype.renderWithMirror=function(e,t,a){this.updateMirror(t),this.mirrorNeedsUpdate=!1,a.render(e,this.mirrorCamera,a.tempTexture),a.material.uniforms.mirrorSampler.value=a.tempTexture,this.render(e,t),this.mirrorNeedsUpdate=!0,a.material.uniforms.mirrorSampler.value=a.texture,a.updateMirror(t)},THREE.MirrorSurface.prototype.render=function(e,t,a){void 0===a&&(a=this.texture),this.mirrorNeedsUpdate&&this.updateMirror(t),this.mirrorNeedsUpdate=!0,this.renderer.render(e,this.mirrorCamera,a,!0)},THREE.HeatHazeShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},tNoise:{type:"t",value:null},time:{type:"f",value:0},startDistance:{type:"f",value:300},distortionScale:{type:"f",value:1},distortionFactor:{type:"f",value:.05},riseFactor:{type:"f",value:.2},fineNoiseScale:{type:"f",value:1},cameraNearFar:{type:"v2",value:new THREE.Vector2(1,1e3)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform float time;","uniform float startDistance;","uniform float distortionScale;","uniform float distortionFactor;","uniform float riseFactor;","uniform float fineNoiseScale;","uniform sampler2D tDiffuse;","uniform sampler2D tDepth;","uniform sampler2D tNoise;","uniform vec2 cameraNearFar;","varying vec2 vUv;",THREE.ShaderChunk.linearDepthFragmentPars,"#if defined( RGBA_DEPTH )","float unpackDepth( vec4 rgba ) {","return clamp( dot( rgba, vec4( 1.0, 1.0/255.0, 1.0/65025.0, 1.0/16581375.0 ) ), 0.0, 1.0 );","}","#endif","float getDepth( vec2 texCoord ) {","#if defined( RGBA_DEPTH )","vec4 packedDepth = texture2D( tDepth, texCoord );","float depth = unpackDepth( packedDepth );","#elif defined( FLOAT_DEPTH )","float depth = texture2D( tDepth, texCoord ).w;","#elif defined( TEXTURE_DEPTH )","float depth = texture2D( tDepth, texCoord ).x * 2.0 - 1.0;","#endif","depth = linearizeDepth( depth, cameraNearFar );","return depth;","}","float nrand( vec2 n ) {","return fract( sin( dot( n.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );","}","void main() {","vec2 distortedTextureCoordinate = vUv;","float depth = getDepth( vUv );","if ( depth > startDistance ) {","vec2 distortionMapCoordinate = vUv * distortionScale;","distortionMapCoordinate.y -= time * riseFactor;","vec4 distortionMapValue = texture2D( tNoise, distortionMapCoordinate );","vec2 distortionPositionOffset = distortionMapValue.xy;","distortionPositionOffset -= vec2( 0.5, 0.5 );","distortionPositionOffset *= 2.0;","distortionPositionOffset *= distortionFactor;","float rnd = nrand( vUv + vec2( time, 0.0 ) ) - 0.5;","distortionPositionOffset.x += fineNoiseScale * rnd/255.0;","distortionPositionOffset *= ( 1.0 - vUv.y );","distortedTextureCoordinate += distortionPositionOffset;","float depthDistorted = getDepth( distortedTextureCoordinate );","if ( depthDistorted <= startDistance ) {","distortedTextureCoordinate = vUv;","}","}","vec4 texel = texture2D( tDiffuse, distortedTextureCoordinate );","mgl_FragColor = texel;","}"].join("\n")},THREE.SimpleFilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},intensity:{type:"f",value:.5}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform float time;","uniform float intensity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","float nrand( vec2 n ) {","return fract( sin( dot( n.xy, vec2( 12.9898, 78.233 ) ) ) * 43758.5453 );","}","float n2rand_faster( vec2 n ) {","float t = fract( time );","float nrnd0 = nrand( n + 0.07 * t );","float orig = nrnd0 * 2.0 - 1.0;","nrnd0 = orig * inversesqrt( abs( orig ) );","nrnd0 = max( -1.0, nrnd0 );","nrnd0 = nrnd0 - sign( orig );","return nrnd0;","}","void main() {","vec4 sourcePixel = texture2D( tDiffuse, vUv );","vec3 noisyPixel = sourcePixel.rgb + sourcePixel.rgb * n2rand_faster( vUv );","noisyPixel = mix( sourcePixel.rgb, noisyPixel.rgb, clamp( intensity, 0.0, 1.0 ) );","mgl_FragColor = vec4( noisyPixel, sourcePixel.a );","}"].join("\n")},THREE.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:THREE.ShaderChunk.vertexShaderFullscreenTriangleUV,fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 powRGB;","uniform vec3 mulRGB;","varying vec2 vUv;","void main() {","mgl_FragColor = texture2D( tDiffuse, vUv );","mgl_FragColor.rgb = mulRGB * pow( mgl_FragColor.rgb, powRGB );","}"].join("\n")};
